(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2854665,      52113]
NotebookOptionsPosition[   2842732,      51751]
NotebookOutlinePosition[   2843171,      51769]
CellTagsIndexPosition[   2843128,      51766]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{
    RowBox[{"SelectedNotebook", "[", "]"}], ",", 
    RowBox[{"FontProperties", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<ScreenResolution\>\"", "\[Rule]", "Automatic"}], "}"}]}]}],
    "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6880211146554074`*^9, 3.688021166465846*^9}, 
   3.688253285003331*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Quit", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.722195522003563*^9, 3.7221955233909826`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "@", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "\"\<Include.m\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Include", "/@", 
   RowBox[{"{", "\"\<Def.nb\>\"", "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7221954070543146`*^9, 3.722195408392994*^9}, {
   3.72219548349024*^9, 3.7221954973581*^9}, 3.7221955355571313`*^9, {
   3.7221956130837097`*^9, 3.7221956133742905`*^9}, {3.7221958065105267`*^9, 
   3.7221958068613214`*^9}}],

Cell[CellGroupData[{

Cell["Single Ion", "Subsection",
 CellChangeTimes->{{3.7230758493840895`*^9, 3.7230758542958474`*^9}, {
  3.723075890277403*^9, 3.72307589140207*^9}, {3.7230764526315775`*^9, 
  3.723076465932788*^9}, {3.7230858458357763`*^9, 3.723085846687295*^9}}],

Cell[CellGroupData[{

Cell["2 Level - Pauli", "Subsubsection",
 CellChangeTimes->{{3.6018675906323147`*^9, 3.601867598500765*^9}, 
   3.6979434496023293`*^9, {3.7230764417052193`*^9, 3.72307644364164*^9}, {
   3.723076479539146*^9, 3.723076480376404*^9}, {3.723079294148054*^9, 
   3.7230792987798367`*^9}, {3.7230795603501935`*^9, 3.7230795614423637`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Phi]", "=."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        RowBox[{
         FractionBox["\[CapitalOmega]", "2"], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[CapitalDelta]", " ", "t"}], "+", "\[Phi]"}], 
            ")"}]}]]}]},
       {
        RowBox[{
         FractionBox["\[CapitalOmega]", "2"], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[CapitalDelta]", " ", "t"}], "+", "\[Phi]"}], 
            ")"}]}]]}], "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[CapitalOmega]", "\[Rule]", "1"}], ",", 
      RowBox[{"\[CapitalDelta]", "\[Rule]", "0"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"H", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"MatrixExp", "[", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "H", " ", "t"}], "]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"t", "\[Rule]", "\[Pi]"}], ",", 
     RowBox[{"\[Phi]", "\[Rule]", "0"}]}], "}"}]}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{"MatrixExp", "[", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "H", " ", "t"}], "]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"t", "\[Rule]", "\[Pi]"}], ",", 
     RowBox[{"\[Phi]", "\[Rule]", 
      FractionBox["\[Pi]", "2"]}]}], "}"}]}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.697939339092019*^9, 3.6979393948528156`*^9}, {
  3.697939941487259*^9, 3.697939942184564*^9}, {3.697940843788304*^9, 
  3.697940865935464*^9}, {3.6979431444514666`*^9, 3.697943208638432*^9}, {
  3.6979432390862827`*^9, 3.6979432483468*^9}, {3.7230762952434464`*^9, 
  3.7230763162906713`*^9}, {3.7230793187239857`*^9, 3.7230793380017767`*^9}, {
  3.723079392794608*^9, 3.723079393536111*^9}, {3.7230801423186274`*^9, 
  3.7230802841782117`*^9}, {3.723081949892082*^9, 3.7230819623914423`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], "2"]},
     {
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], "2"], "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7230793383223424`*^9, 3.723079505947022*^9, {3.7230801456331663`*^9, 
   3.7230801612370625`*^9}, {3.7230802300641513`*^9, 3.723080284685749*^9}, {
   3.7230819275404105`*^9, 3.723081963543557*^9}, 3.723087535986725*^9, 
   3.723119173876053*^9, 3.7231207842444067`*^9, 3.7231550475311923`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "1"},
     {"1", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7230793383223424`*^9, 3.723079505947022*^9, {3.7230801456331663`*^9, 
   3.7230801612370625`*^9}, {3.7230802300641513`*^9, 3.723080284685749*^9}, {
   3.7230819275404105`*^9, 3.723081963543557*^9}, 3.723087535986725*^9, 
   3.723119173876053*^9, 3.7231207842444067`*^9, 3.7231550475311923`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{"-", "\[ImaginaryI]"}]},
     {"\[ImaginaryI]", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7230793383223424`*^9, 3.723079505947022*^9, {3.7230801456331663`*^9, 
   3.7230801612370625`*^9}, {3.7230802300641513`*^9, 3.723080284685749*^9}, {
   3.7230819275404105`*^9, 3.723081963543557*^9}, 3.723087535986725*^9, 
   3.723119173876053*^9, 3.7231207842444067`*^9, 3.723155047541191*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Phi]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "=", 
   RowBox[{"2", "\[Pi]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"func", "=", 
   RowBox[{"Function", "@@", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{
       RowBox[{"MatrixExp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "H", " ", "t"}], "]"}], ".", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}]}], "}"}]}]}], ";", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"x_", "?", "NumberQ"}], ",", "i_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"func", "[", "x", "]"}], "\[LeftDoubleBracket]", "i", 
    "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"f", "[", 
         RowBox[{"t", ",", "#"}], "]"}], "]"}], "^", "2"}], "&"}], "/@", 
     RowBox[{"Range", "[", "2", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7230793680685935`*^9, 3.7230794007596974`*^9}, {
  3.723079500117933*^9, 3.723079502987558*^9}, {3.72308031267326*^9, 
  3.7230803169610605`*^9}, {3.72308194171074*^9, 3.7230819464793577`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
7g==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
e0M=
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {0., 0.9999999999999958}}, {{0, 6.283185307179586}, {
        0., 0.9999999999999958}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7230793595268354`*^9, 3.723079369761054*^9}, 
   3.7230794013906765`*^9, 3.7230795034731493`*^9, 3.723080317586026*^9, 
   3.7230819668968983`*^9, 3.7230875374685373`*^9, 3.7231191765305915`*^9, 
   3.72312078566609*^9, 3.7231550502244186`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        RowBox[{
         FractionBox["\[CapitalOmega]", "2"], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[CapitalDelta]", " ", "t"}], "+", "\[Phi]"}], 
            ")"}]}]]}]},
       {
        RowBox[{
         FractionBox["\[CapitalOmega]", "2"], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[CapitalDelta]", " ", "t"}], "+", "\[Phi]"}], 
            ")"}]}]]}], "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[CapitalOmega]", "\[Rule]", "1"}], ",", 
      RowBox[{"\[CapitalDelta]", "\[Rule]", "10"}], ",", 
      RowBox[{"\[Phi]", "\[Rule]", "0"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"H", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.72307938682633*^9, 3.723079412316354*^9}, {
  3.723080337795355*^9, 3.7230803446554146`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"10", " ", "\[ImaginaryI]", " ", "t"}]]}]},
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "10"}], " ", "\[ImaginaryI]", " ", "t"}]]}], "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7230794135579944`*^9, 3.723079508960211*^9, 
  3.7230796250950546`*^9, 3.7230803454071674`*^9, 3.7230819705307937`*^9, 
  3.723087539380681*^9, 3.7231191781121264`*^9, 3.72312078680741*^9, 
  3.7231550521157665`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"T", "=", 
   RowBox[{"2", 
    RowBox[{"\[Pi]", "/", "10"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"func", "=", 
   RowBox[{
    RowBox[{"NDSolveValue", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{
           SubscriptBox["\[PartialD]", "t"], 
           RowBox[{"\[Psi]", "[", "t", "]"}]}]}], "\[Equal]", 
         RowBox[{"H", ".", 
          RowBox[{"\[Psi]", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"\[Psi]", "[", "0", "]"}], "\[Equal]", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}]}], "}"}], ",", 
      RowBox[{"\[Psi]", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}], 
    "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"x_", "?", "NumberQ"}], ",", "i_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"func", "[", "x", "]"}], "\[LeftDoubleBracket]", "i", 
    "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"f", "[", 
         RowBox[{"t", ",", "#"}], "]"}], "]"}], "^", "2"}], "&"}], "/@", 
     RowBox[{"Range", "[", "2", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Arg", "[", 
        RowBox[{"f", "[", 
         RowBox[{"t", ",", "#"}], "]"}], "]"}], "/", "\[Pi]"}], "&"}], "/@", 
     RowBox[{"Range", "[", "2", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7230794070180326`*^9, 3.7230794936780624`*^9}, {
  3.723079531910658*^9, 3.7230795396212535`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
wizg9lHvpq7n/wAobjjC
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
ipSW
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, Rational[1, 5] Pi}, {0., 0.9999999999999998}}, {{
        0, 0.6283185307179586}, {0., 0.9999999999999998}}], PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7230794184052925`*^9, 3.7230795400919237`*^9}, 
   3.7230803503137608`*^9, 3.7230819731336293`*^9, 3.7230875403619504`*^9, 
   3.7231191790128326`*^9, 3.7231207889596605`*^9, 3.7231550531715965`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
Xhwn/H9wkfpF
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwBsQNO/CFib1JlAgAAADoAAAACAAAAbP7dfGyJSz76XNIrAADgvx5UMpZ+
Qik/niQ5iwwD4L9iWlmDR0I5P+7j9xJLBeC/hN3s+StCST/5OaYfLwrgvxWf
NjUeQlk//ETfuyoU4L/ef9tSF0JpP1c5Qq07KOC/QvCt4RNCeT+cINccalDg
v3QoFykSQok/TQGk2c2g4L8s1apDA1KaP7SvSPAfT+G/9GHYTVyNoz/nqB4W
5fHhv7DAorCd0ak/TGUecnmR4r/eU24H7E6wP5MDkNaTPuO/1vLEAPh6sz8v
YVbgIODjv/ZV03cA67Y/NCaYWzSP5L/FbEVK/Eq6P5SX1JEWO+W/Bi/x5uZw
vT+SwveTa9vlv7daqgBnbcA/RiGyH0eJ5r+k8/jyUQXCPz9TNIGVK+e/aWb5
kjaVwz/uLIhfssrnv0K71XEZR8U/EWb/gVV36L/U5c6189vGP/3fNS1rGOm/
evKjOMySyD9sTh9+B8fpv/fYKmmeQco/nTdbkXJy6r8tlc7+Z9PLP/aVhG9Q
Euu/dzNO0y+HzT8/Ufj7tL/rv3un6gzvHc8/zKyVZ4th7L/JfrFCVmvQP+Tf
QPPoEO2/wZbG1bFD0T8g+zwQFb3tv5YZahuJDdI/k+gdgrNd7r90jXuAX+jS
PxlUSb7YC++/7wzayJDr0j/Ocn0cYw7vv2qMOBHC7tI/rCOzeu0Q779gi/Wh
JPXSP4AjKTcCFu+/TIlvw+kB0z/mvWywKyDvvyOFYwZ0G9M/VeH2pX4077/S
fEuMiE7TPxeoNZwkXe+/Tfyp1LlR0z/kLar7rl/vv8h7CB3rVNM/OzIhWzli
77++esWtTVvTPyMlFxpOZ++/qXg/zxJo0z+tWiSYd3Hvv4B0MxKdgdM/vyi/
lMqF778vbBuYsbTTP9EA/I5wru+/Xk/V09K30z/0wg0p7rDvv4wyjw/0utM/
K8Idw2uz77/q+AKHNsHTP5eTN/dmuO+/pIXqdbvN0z/SiUxfXcLvvxifuVPF
5tM/RknSLkrW779GgnOP5unTPxC/sMjH2O+/dWUtywft0z8az4piRdvvv9Ir
oUJK89M/NYUxlkDg77+NuIgxz//TP97BSP026u+/vJtCbfAC1D/QZQOXtOzv
v+p+/KgRBtQ/XLK5MDLv779IRXAgVAzUP8q0GWQt9O+/digqXHUP1D8WssP9
qvbvv6UL5JeWEtQ/Pedplyj577/U7p3TtxXUP5OIDDGm+++/UMQPIOcX1D/O
XDpEY/3vv6CJ8sk=
         "]], 
        LineBox[CompressedData["
1:eJwVT3s0lHkAlSitYtfWriRppVRWU/KKuk2jNltKjhm2xDJsOk1LpVgqtV5F
D0pRUkmLbciSSo/l1J68iti+GM9+3/wwNPRhrVdMO/vHPffcc8+5j4X+we6B
mhoaGq5q/M9XhaUNYSYMzsSudRZPcjgXGfvc6RsGZjnxQeJxDk99oNptzsCr
ebC2c4SDkj/mEGXBgPfK1yboXw5G5vcO31zO4KJBbfr7QQ5hysV98pUM7lfl
BXF9HLJriYWWDYPCNcavDyg5MIVXA8ztGWzSSLQZ6uawKlyvdc86Bg/MAjTH
KIdereHq3u8ZDLYNpGs2q/O7C6bpbWPgsslFM7aRg8vLvRtW7GBQufJq0PS3
6vzktkcHPBn80b7IZmYdBz+TF7nDYgZnLTtr5pRzaLBLidM4pvZZH82lRRyq
/n5ZGniCQeTwiu2HC9T/9k8dqY5mIMrXvfYsj0Nm1sE9lxIYbBS02uzM4SDR
37F5WRoDscHDvYnXOGgqZn3mcY+BtoZdfV8cB6vL8WdzehgMmNRfKdrFIX4o
ImWb6C2M91vMctLmMNu438NwYQOILOpSq/gDpKvfrGYnGnB9ub/LcHEfrNac
V2YzjRiNTbnMn9GHc3eaPLozZJD9UNZutLcXo7oX2izCmxD+T76p5IkS62Qy
w05BM7xu+5ZvnatESPLosuu6LbhRCTfviPfIc4zzFnW0QBgg0O2u6cELt1vr
E+62or7B6YnKsgcKkaXzn6fb4LTLNC7peDe6KpzH94na8btd46GCFgXqzW3j
v17wDs5mH4+oHBUoD71k/Xz0HSoVaf1V57qwNZXvMuRHMPxTa/78vk48lgTr
TK8jOMQvmhhY24mMkhnWhk4sygIumPYnd4BzUNoqbrJ4WSydGz1AUX4vutpG
Tw6eXO9KgoBCVyy22xAqx3y9Uw9MM+UoP1Wg7yqTY//0Wt0PU+SYllMU1uhM
cdxnZ7SFkIWw7mGaZBNF6kzONcudxe2xp4+mbKZI7iqbZ+LGgr+14uPyLRTj
8yV/fbmFxdGBlqgTOygOp84SflrPYtBR+9RSH4oGo3yezJJFW51nWmQYxUIH
b5eLWiwsx70fff4LxUzWXqSvySLCzL/5twiKdgd9SeInAsMjEuO6YxROoqjC
6HEC93knby6KUfcf9EoP7SeoDLyTW5NEoZMgknq2EhSPT5QsuEOxnelqMi0m
MB1oHKFSihslu6XuhQRnFEW2ufkUjqTwWMxdgkAmqJhXSOEwd8isO5fgq7tM
Ab+EYk6wMqQggyDMLy9bXE4hyHo9uDaeoMMzvnNJpdonvs+CYwjctvkv6q2i
2HjEKynzJIGFo+Gt0BqK2/pxK7WPEshmx2TEMhSL9ximvgohWFO5KyVHTnFy
+FXi7p0E2aW2b/Z1qPdE+C5L8iQwuP+FAa+LYolf4KfnHgTKzIrzJT0UP9qu
OL10O8G1SOvEqn4K6bQJq0kBgc5BveqzgxQf7rMPVvMJQoN6dNyHKFYNjX77
8zoCV+GNuOYRikNlTXylPcHjLREvro9RJEqnhljbEizeINQSf6QwDDcOPG1N
cMGeJ1gySeHGZh2f5BGorHR/VaoovstRpVdbEVSoSjOMNDow2nYexmr9H04q
geQ=
         "]], 
        LineBox[{{0.625413404939747, -0.4956458489362802}, {
         0.6255151007504269, -0.4957117857448789}, {
         0.6257307482230966, -0.4959736334969244}, {
         0.6259463956957663, -0.49628288506075924`}, {
         0.6261620431684358, -0.49660768394345195`}, {
         0.6265933381137749, -0.4972751292642265}, {
         0.6268089855864445, -0.49761302934823703`}, {
         0.627024633059114, -0.49795242091673203`}, {
         0.6274559280044532, -0.4986340258063323}, {
         0.6276715754771227, -0.4989757740082773}, {
         0.6278872229497923, -0.499317967489773}, {
         0.6281028704224618, -0.4996605192302539}, {
         0.6283164012034447, -0.5000000012762943}}]}, {}}, {{}, {}, {}, {}}}, \
{}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, Rational[1, 5] Pi}, {-0.9996811230256755, 
        0.9996811230486613}}, {{0, 0.6283185307179586}, {-0.9996811230256755, 
        0.9996811230486613}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7230794184052925`*^9, 3.7230795400919237`*^9}, 
   3.7230803503137608`*^9, 3.7230819731336293`*^9, 3.7230875403619504`*^9, 
   3.7231191790128326`*^9, 3.7231207889596605`*^9, 3.723155053298119*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"EffectiveHamiltonian", "@", "H"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"H", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.7230796199987917`*^9, 3.7230796204996448`*^9}, 
   3.7231191823264475`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "40"], "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox["1", "40"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 2}, 0, {
     1, {{0, 1, 2}, {{1}, {2}}}, {
      Rational[1, 40], Rational[-1, 40]}}]]]]], "Output",
 CellChangeTimes->{{3.7230796027346163`*^9, 3.723079628821395*^9}, 
   3.7230803538462677`*^9, 3.7230819758182917`*^9, 3.723087542375537*^9, 
   3.723119182776393*^9, 3.7231207934437513`*^9, 3.723155055560835*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"T", "=", 
   RowBox[{"40", " ", "2", "\[Pi]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"func", "=", 
   RowBox[{"Function", "@@", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{
       RowBox[{"MatrixExp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "H", " ", "t"}], "]"}], ".", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}]}], "}"}]}]}], ";", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"x_", "?", "NumberQ"}], ",", "i_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"func", "[", "x", "]"}], "\[LeftDoubleBracket]", "i", 
    "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"f", "[", 
         RowBox[{"t", ",", "#"}], "]"}], "]"}], "^", "2"}], "&"}], "/@", 
     RowBox[{"Range", "[", "2", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Arg", "[", 
        RowBox[{"f", "[", 
         RowBox[{"t", ",", "#"}], "]"}], "]"}], "/", "\[Pi]"}], "&"}], "/@", 
     RowBox[{"Range", "[", "2", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7230794070180326`*^9, 3.7230794936780624`*^9}, {
  3.723079531910658*^9, 3.7230795396212535`*^9}, {3.723079643691484*^9, 
  3.7230796800485086`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAGIQfSSv92BM81U7BjD4YD/33Nx7x3cftofxBXgdozft
vgzne66ZNHP57sf2//6DwHv7Z9W7LRbt/gyX3/LYv2P+bmYHmPxscSmDebuF
HWDyXWV3e4QmqMD5vJKLLB/06MH5nWr/DQ9rm8D5XMlzTgdUW8L5ebuNG5UL
7OB8Dem5sTOeO8L5v2zYpKZ2ucD5e3NyUkwY3OH8/bpcHz+s8oS7b/OfJdwB
Gj5wPvuGpa6qM/3g6n1/vXvQPT8Azu9fzJl27XYgnF8g6tCz3igYrr+pUvOQ
c3MIXL4nRdBec28oXN5MQjR2rmA4XP5mkPihJP8IOF86zPTEtuWRcH6vN9u9
oz+j4Pwfx69aqZnGwPnMvActRLtj4Xy2m6tqQ0/FwflzTytnrmBMgPPZ+RlS
clcj+O+mRjPd9kyE81UYXT/2f0Xwi56yZyjNS4LzbXm9mmKtk+H8CEmpt/ef
IvjvMzJ/c7WmwP07z3DSRGHFVIR77nlUJJ9C8CXO1zHFZKTB+Y8XO92dLZwO
52vtaY1u2Yzgd/kuSvQKyIDzLQ/77Aj/heCn1pRt4p2ZCec/kNT7y+WaBXdP
icH+80/fZsHlW7rOu2Z2Z8P5T07k8piY5cD5B7y6y5ZfRfC3uDZl/CjMRcSH
CvvqCdJ5cP4Od+6JF3ci+Lcyzl9XFcqH8/92TparykLwAZr6Nzw=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxFz3lIkwEYBvCpqDgdpSY6rcC8i8Q7j1KXDZt5TFPntdK56TdzHlFWapIX
tEM8SshsCrNYaGDoKONTTGcpCo2IVZ5Za1ailmVgml2Q7/vCw8Pvv+d15BUm
CAwpFErM3/zrkYK6oYxqbSjl//XFc/Rfyd6wbcufyedGSTV4J42R3kO+ALPu
NbUoSR14oYwMVJDfwCpd3NV20ih826229l5tpDVYUjIrs2pwBtPoiqB5mSdY
7PrbW33AD0zNvjXBLgsCF5C+lU5FoWB3Bzn3xgcGeOOwiX2z5Bh4ID+f70eJ
BA8epK5+6WSBe3/eNme7R4NN799hurTEgmM2Vual7WxwfYdZzsvpeHCRTbis
2+ckuOqSx3BEdSJYxrcM8xhIAgfY2XDllhzwZILtMC8uBeyQ7D/2QJkKrjth
MvfkRxp4fVQb7OqfATaiDQXaSLlgk8nOy0njp8DyCSfhXYNM/G8HhS/qQq80
pxtOs7LAzgbM1frv6LN6U2JfGw98hBZVxQ3JBqfQ7Zff6NGfCeEmtZYPbvNu
arR2FOCeueMXs8fRdpoKwwwiB6zrODrbap0L3t9fm17Ti5bEKLKi2AQ4SB3d
x9lAC8pLemgtQvA83XOLyswDn/Ma1OiX0TUSDVMoPQN+Pyay8AvIBz+OkpYo
tWgVs4pYLxaB151NuxocCsB9keaNzx+hhwiG7/V+9Lj4gjZ5ED0zoaPPjKAp
7H7FggbNShGpNvXoKULzysWqEKwTG5d+3IVe6gzZ3WWL/rWkzPTag3YqvvIp
2B2df8l7My4Uff5mrtyKga4g5WHaCHTDlllNGgutqnxnIUhEDyjsut046Kfq
2PjFVPRrY7K58DT6revqIR8eejHSbWqNj14juOUPc9Fb4mt7S/PQfwAMXhVk

         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 80 Pi}, {0., 1.}}, {{0, 251.32741228718345`}, {0., 1.}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.723079645976318*^9, 3.7230796815208097`*^9}, 
   3.72308035506837*^9, 3.723081977269292*^9, 3.7230875432460327`*^9, 
   3.7231191844127398`*^9, 3.7231207944145336`*^9, 3.7231550569431524`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAxG6NwVyD1T5KZejRwOllvrhRV+Xy
u7M/BkMacN8ZRL+dzp3ex7vDPzSfmJyzGVS/EA1BW7K70z9MzdeynRlkv0ms
kpmnu+M/WGT3vZIZdL/me7s4orvzP90vh0ONGYS/tONPiJ+7A0ChFU+GihmU
v5sXGjCeuxNAggizJ4kZpL+Kdt2MEpAkQFhZoa/w8bS/DRmiOeCMLkAN/4Fc
Rx6/v4km/zHDKzRAJlHu6MOLxL8KY5zLUHs5QHjOOT+Y9Mm/brszgSNwPkAa
tBHeAQHPvygbnV2Y50FAt+JDzM880r/6PAYalYpEQMNqnRtZ7NS/vWxsZDQA
R0D3Jj0PrW3Xv78tCvHwqklABPmrEBsl2r+z/KQLUChMQDn/YLZTrty/B7Cl
RSWZTkDPhDTOxirfv1x15As4YE9Af2isD4313790d5+h
         "]], 
        LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAAYvvFRrx0T0DCyyl4OQXgv4+jCWbW
21FA6/ff3tUw4r9wFUCMrzJTQKPqu8oOjuO/gnkpwkODVEAMHafv5OTkv4xk
ET8pvVVAiWm1ZqAk5r82GBVdnRFXQPJAq+Rof+e/2VIXwmJPWEBwMsS0FsPo
vxtWNci2p1lA2a7Ei9Eh6r+NSwbexflaQPRq1Jspeuu/+MfVOiY1XEAjQQf+
ZrvsvwMNwTgVi11AP6IhZ7EX7r80tNQ5EpBdQCyYDibGHO6/ZFvoOg+VXUAa
jvvk2iHuv8SpDz0Jn11A83nVYgQs7r+ERl5B/bJdQKVRiV5XQO6/BID7SeXa
XUALAfFV/WjuvwTzNVu1Kl5A1l/AREm67r80mklcsi9eQMJVrQNev+6/ZEFd
Xa80XkCvS5rCcsTuv8SPhF+pPl5AiDd0QJzO7r+ELNNjnVJeQDoPKDzv4u6/
BWZwbIV6XkChvo8zlQvvvwbZqn1Vyl5AbR1fIuFc77//S/1qOc9eQFlQMFbc
Ye+/+L5PWB3UXkBEgwGK12bvv+mk9DLl3V5AG+mj8c1w77/McD7odPFeQMm0
6MC6hO+/kwjSUpQYX0AlTHJflKzvv4x7JEB4HV9AEX9Dk4+x77+E7nYtXCJf
QPuxFMeKtu+/dtQbCCQsX0DTF7cugcDvv1qgZb2zP19AguP7/W3U779TE7iq
l0RfQG0WzTFp2e+/TIYKmHtJX0BaSZ5lZN7vvz1sr3JDU19AMK9AzVro7782
3wFgJ1hfQBviEQFW7e+/LlJUTQtdX0AHFeM0UfLvvyfFpjrvYV9A8ke0aEz3
77/d1pwaWWVfQEA01ofG+u+/BQA8Fw==
         "]], 
        LineBox[CompressedData["
1:eJwBIQLe/SFib1JlAgAAACEAAAACAAAA35kNOJtvX0BANNaHxvrvPwqR8O9+
dV9AYuwGyMb07z8DBEPdYnpfQHe5NZTL7+8//HaVykZ/X0CKhmRg0OrvP/Tp
57cqhF9AoFOTLNXl7z/mz4yS8o1fQMnt8MTe2+8/30Lff9aSX0Dduh+R49bv
P9i1MW26l19A8YdOXejR7z/Km9ZHgqFfQBkirPXxx+8/rWcg/RG1X0BtVmcm
BbTvP6bacur1uV9AgCOW8gmv7z+eTcXX2b5fQJbwxL4Oqu8/kDNqsqHIX0C/
iiJXGKDvP3T/s2cx3F9AD7/dhyuM7z+dyyNpqAFgQLQnVOlRZO8/qjwPfU8E
YECeVmeB6l7vP7it+pD2BmBAhoV6GYNZ7z/Uj9G4RAxgQFbjoEm0Tu8/ClR/
COEWYED6nu2pFjnvP3jc2qcZLGBAQBaHatsN7z9S7ZHmilZgQM0Euutkt+4/
Bw8AZG2rYEDm4R/udwruP+6VWwLbSWFAA4LIoLjH7D8kAUXxj/VhQDWXiUzs
aes/cuUHaCKeYkC2bDu/ghLqPz0NSoJdO2NAIijK3zPS6D9YGRrt3+VjQKJY
cfnXduc/72hp+wqFZEAOb/XAljLmP54xkpETIWVAykVqT7j05D+d3kh4Y8pl
QJaR99bMm+M/GM9+AlxoZkBSw2EM/FniP+OjQt2bE2dAIWrkOh794D+GuaMX
S41nQMLLKXg5BeA/NhwOdg==
         "]], 
        LineBox[CompressedData["
1:eJwBMQLO/SFib1JlAgAAACIAAAACAAAACBtcJmySZ0B6aKwPjfXfP4pNomFK
UGhAxocodfXv3D85w0y4V/poQP8L+q0aO9o/ZXx2sg2ZaUAQXIVCdbTXP+AZ
Lv0KRWpASZZBybX31D90ML/P5e1qQBxR3927R9I/hIrPRWmLa0CYr22c7ovP
P+TIbQw0NmxAPZF+YTEcyj/ASot2p9VsQJ0KA97eCMU/tEWCaPhxbUAxhUp2
Fw/AP/gkB6uQG25AKajn5TdStT+4RwuR0bluQMvqQpwsfqY/wWhBM5S8bkA3
T0zvMySmP8qJd9VWv25AyrNVQjvKpT/cy+MZ3MRuQPR8aOhJFqU/AFC8oubP
bkAbD440Z66jP0lYbbT75W5AbTPZzKHeoD/aaM/XJRJvQB343votfpY/44kF
eugUb0D0wPGgPMqVP+yqOxyrF29AHIoER0sWlT/+7KdgMB1vQG0cKpNorpM/
I3GA6Toob0BtQHUro96QP2x5MftPPm9AHRIXuDB+hj91mmedEkFvQG6kPARO
FoU/frudP9VDb0AdNmJQa66DP5D9CYRaSW9Avlqt6KXegD+0geIMZVRvQMBG
hzI2fnY/vaIYrydXb0Bja9LKcK5zP8bDTlHqWW9ABZAdY6vecD/YBbuVb19v
QAmwZydBfmY/4SbxNzJib0BN+f1Xtt5gP+pHJ9r0ZG9AI4UoEVd+Vj/0aF18
t2dvQCglquSCfkY//YmTHnpqb0AUfI7SwOllPuo+/Mk=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxFz3lIkwEYBvCpqDgdpSY6rcC8i8Q7j1KXDZt5TFPntdK56TdzHlFWapIX
tEM8SshsCrNYaGDoKONTTGcpCo2IVZ5Za1ailmVgml2Q7/vCw8Pvv+d15BUm
CAwpFErM3/zrkYK6oYxqbSjl//XFc/Rfyd6wbcufyedGSTV4J42R3kO+ALPu
NbUoSR14oYwMVJDfwCpd3NV20ih826229l5tpDVYUjIrs2pwBtPoiqB5mSdY
7PrbW33AD0zNvjXBLgsCF5C+lU5FoWB3Bzn3xgcGeOOwiX2z5Bh4ID+f70eJ
BA8epK5+6WSBe3/eNme7R4NN799hurTEgmM2Vual7WxwfYdZzsvpeHCRTbis
2+ckuOqSx3BEdSJYxrcM8xhIAgfY2XDllhzwZILtMC8uBeyQ7D/2QJkKrjth
MvfkRxp4fVQb7OqfATaiDQXaSLlgk8nOy0njp8DyCSfhXYNM/G8HhS/qQq80
pxtOs7LAzgbM1frv6LN6U2JfGw98hBZVxQ3JBqfQ7Zff6NGfCeEmtZYPbvNu
arR2FOCeueMXs8fRdpoKwwwiB6zrODrbap0L3t9fm17Ti5bEKLKi2AQ4SB3d
x9lAC8pLemgtQvA83XOLyswDn/Ma1OiX0TUSDVMoPQN+Pyay8AvIBz+OkpYo
tWgVs4pYLxaB151NuxocCsB9keaNzx+hhwiG7/V+9Lj4gjZ5ED0zoaPPjKAp
7H7FggbNShGpNvXoKULzysWqEKwTG5d+3IVe6gzZ3WWL/rWkzPTag3YqvvIp
2B2df8l7My4Uff5mrtyKga4g5WHaCHTDlllNGgutqnxnIUhEDyjsut046Kfq
2PjFVPRrY7K58DT6revqIR8eejHSbWqNj14juOUPc9Fb4mt7S/PQfwAMXhVk

         "]]}, {}}, {{}, {}, {}, {}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 80 Pi}, {-0.9993622448979593, 0.9993622448979593}}, {{
        0, 251.32741228718345`}, {-0.9993622448979593, 0.9993622448979593}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.723079645976318*^9, 3.7230796815208097`*^9}, 
   3.72308035506837*^9, 3.723081977269292*^9, 3.7230875432460327`*^9, 
   3.7231191844127398`*^9, 3.7231207944145336`*^9, 3.7231550570530586`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MatrixExp", "[", 
    RowBox[{"\[ImaginaryI]", " ", 
     FractionBox[
      RowBox[{"\[Pi]", "/", "2"}], "2"], 
     RowBox[{"PauliMatrix", "[", "2", "]"}]}], "]"}], ".", 
   RowBox[{"PauliMatrix", "[", "1", "]"}], ".", 
   RowBox[{"MatrixExp", "[", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", 
     FractionBox[
      RowBox[{"\[Pi]", "/", "2"}], "2"], 
     RowBox[{"PauliMatrix", "[", "2", "]"}]}], "]"}]}], "\[Equal]", 
  RowBox[{"PauliMatrix", "[", "3", "]"}]}]], "Input",
 CellChangeTimes->{{3.7222055775412073`*^9, 3.7222056511208825`*^9}, {
  3.7222057801628695`*^9, 3.722205813554695*^9}, {3.7230800496369495`*^9, 
  3.723080090878189*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7222055884096813`*^9, 3.722205651392878*^9}, {
   3.722205805384635*^9, 3.722205813879386*^9}, 3.7230799522680993`*^9, 
   3.7230800572893004`*^9, 3.7230800916769543`*^9, 3.7230803591054716`*^9, 
   3.7230875451981535`*^9, 3.723119186631197*^9, 3.723120796456398*^9, 
   3.723155059506426*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"TrigToExp", "[", 
   RowBox[{
    RowBox[{"MatrixExp", "[", 
     RowBox[{"\[ImaginaryI]", " ", 
      FractionBox[
       RowBox[{"\[Pi]", "/", "2"}], "2"], 
      RowBox[{"PauliMatrix", "[", "2", "]"}]}], "]"}], ".", 
    RowBox[{"MatrixExp", "[", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      FractionBox["\[Theta]", "2"], 
      RowBox[{"PauliMatrix", "[", "1", "]"}]}], "]"}], ".", 
    RowBox[{"MatrixExp", "[", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      FractionBox[
       RowBox[{"\[Pi]", "/", "2"}], "2"], 
      RowBox[{"PauliMatrix", "[", "2", "]"}]}], "]"}]}], "]"}], "\[Equal]", 
  RowBox[{"MatrixExp", "[", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    FractionBox["\[Theta]", "2"], 
    RowBox[{"PauliMatrix", "[", "3", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7222055775412073`*^9, 3.7222056511208825`*^9}, {
  3.7222057801628695`*^9, 3.722205813554695*^9}, {3.7230799594410124`*^9, 
  3.723080081836608*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.723079988567221*^9, 3.7230800466311054`*^9}, 
   3.723080092681748*^9, 3.7230803600570593`*^9, 3.7230875462099533`*^9, 
   3.7231191873313513`*^9, 3.7231207972472973`*^9, 3.723155060317584*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3 Level - Raman", "Subsubsection",
 CellChangeTimes->{{3.6018675906323147`*^9, 3.601867598500765*^9}, 
   3.6979434496023293`*^9, {3.723076435351361*^9, 3.7230764360871773`*^9}, {
   3.7230792854363904`*^9, 3.72307929163516*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"H0", "=", 
   RowBox[{"(", GridBox[{
      {"0", "0", "0"},
      {"0", "100", "0"},
      {"0", "0", "200"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H1", "=", 
   RowBox[{"(", GridBox[{
      {"0", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Nu]1"}]], " ", 
        "\[CapitalOmega]1"}], 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Nu]1"}]], " ", 
        "\[CapitalOmega]1"}]},
      {
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "\[Nu]1"}]], " ", 
        "\[CapitalOmega]1"}], "0", "0"},
      {
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "\[Nu]1"}]], " ", 
        "\[CapitalOmega]1"}], "0", "0"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H2", "=", 
   RowBox[{"(", GridBox[{
      {"0", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Nu]2"}]], " ", 
        "\[CapitalOmega]2"}], 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Nu]2"}]], " ", 
        "\[CapitalOmega]2"}]},
      {
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "\[Nu]2"}]], " ", 
        "\[CapitalOmega]2"}], "0", "0"},
      {
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "\[Nu]2"}]], " ", 
        "\[CapitalOmega]2"}], "0", "0"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "=", 
   RowBox[{"40", "\[Pi]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"Expand", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"MatrixExp", "[", 
       RowBox[{"\[ImaginaryI]", " ", "H0", " ", "t"}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{"H1", "+", "H2"}], ")"}], ".", 
      RowBox[{"MatrixExp", "[", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "H0", " ", "t"}], "]"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[CapitalOmega]1", "\[Rule]", "1"}], ",", 
       RowBox[{"\[CapitalOmega]2", "\[Rule]", "1"}], ",", 
       RowBox[{"\[Nu]1", "\[Rule]", "110"}], ",", 
       RowBox[{"\[Nu]2", "\[Rule]", "210"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"H", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.697939754976814*^9, 3.6979397849826183`*^9}, {
  3.697939871733923*^9, 3.6979398735487385`*^9}, {3.697939906310829*^9, 
  3.6979399080907307`*^9}, {3.6979405002606387`*^9, 3.697940503658114*^9}, {
  3.7230789722419586`*^9, 3.7230789810143194`*^9}, {3.723085027219293*^9, 
  3.7230850488189487`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"10", " ", "\[ImaginaryI]", " ", "t"}]]}], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"110", " ", "\[ImaginaryI]", " ", "t"}]]}]}], 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"10", " ", "\[ImaginaryI]", " ", "t"}]]}], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "90"}], " ", "\[ImaginaryI]", " ", "t"}]]}]}]},
     {
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "10"}], " ", "\[ImaginaryI]", " ", "t"}]]}], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "110"}], " ", "\[ImaginaryI]", " ", "t"}]]}]}], "0", 
      "0"},
     {
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "10"}], " ", "\[ImaginaryI]", " ", "t"}]]}], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"90", " ", "\[ImaginaryI]", " ", "t"}]]}]}], "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.723078981672126*^9, 3.7230819808728795`*^9, {3.723082033400013*^9, 
   3.723082062451843*^9}, 3.723082154333539*^9, 3.7230837209372835`*^9, 
   3.7230850522437005`*^9, 3.7230875491237497`*^9, 3.72311918907249*^9, 
   3.7231550632017107`*^9, 3.7231569904057646`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"func", "=", 
   RowBox[{
    RowBox[{"NDSolveValue", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{
           SubscriptBox["\[PartialD]", "t"], 
           RowBox[{"\[Psi]", "[", "t", "]"}]}]}], "\[Equal]", 
         RowBox[{"H", ".", 
          RowBox[{"\[Psi]", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"\[Psi]", "[", "0", "]"}], "\[Equal]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], "}"}], ",", 
      RowBox[{"\[Psi]", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}], 
    "\[LeftDoubleBracket]", "0", "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"x_", "?", "NumberQ"}], ",", "i_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"func", "[", "x", "]"}], "\[LeftDoubleBracket]", "i", 
    "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"f", "[", 
         RowBox[{"t", ",", "#"}], "]"}], "]"}], "^", "2"}], "&"}], "/@", 
     RowBox[{"Range", "[", "2", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.723078964380988*^9, 3.723078965408079*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
4QU/yJ44ImIRw9Uj8459hcEuUFoibluMo2Jz+3aD098ocMBXXftKIhXlP79b
4Dl6HIhDm81IbCpeCx5cv5kaBJa0NU7fOFR8euXG4K2GWDj6ZD7oXBoV+Q41
3eB9xwI/tREOnKSiv3h4wu2lJIi52pY3lkHFZYpBh5IupUC6xP3yE2e4+o2w
q973lg257KtN6tlULP0qNcRmJMD1n6fevDtHxaGx8MuUhHio8oj8knCBipcm
nxFqSwLgyVs3nl0XqRj+IW2ootUNOkh08VcF3P4lPth2rcgSBmoP7gi7QkWL
K0cl9Kq/6X1R2qm7uZiKsXtezMoel4KFfHFq83UqJsn/8+aNpsPKtTwuPmVc
vR0Kv3grxQcUosOlxm9S8XDKdr9dtgGgNznb4VjO5e/Fxa7XH+LA5vCx5L4K
Ki7sXsnfGJYAIc8+HmRWUdHgqVyCeQUbMjUc5tpqqLj2yZZNUly/unnlTanx
Ayrmr6g1qOllwXMRulPDQyoS61ZfXX6fO9/Fvliv85iKUg3O1Gq+OOD5athe
2UDFLJ00pdPJ0bDJri5JuYmKhGvJ2oHn/EGzZb/O9WYq7jZLbxp65gh0rTvf
5P+j4vmudYKD2XQ4Xrzr+oUXVGz6ejRewPORXor4VXuJdir6rtvp0XNPAq4m
yEic6qDi69lEvL3KEupnsl+s6qJi9fu+0m1hHtBvvy4hoYer7970EfUnAfCz
NUVr8TUVmeZW8n9Ox4GoDu90cB8VzS3uO13HeFAuiSqa7qdiQf6WbbF8HCCt
n7f1HKTiir7wf0e5/LqxfEVHh6mYYzN0d6QxGRK+f3pu94H7vCcrsbONDflO
zrG9Y1y/Ig2+FImJg3sv32lQJ6go84do++5nLHQftPjy3yQ3vy9V63PafWGm
rL3Q4CuXn7WvU/4LcwNBKeLhRzNc/K4tjIwIUmEHp2Ht/u9UjFD1uaykyA8G
8weay39w8bll+9GqmB/sXSqjdv3i9uvs/IH5i1YQ0blH7eoCFdv7uotGRY9C
Nl6bkPlLxVTBSJKAfxDcuSVXkPOPitmxke6C62KgVTrXUmQ5Dc1nJ0UzUrn9
mComlMZHQ3pU4/jGH8nA9zu9kW8lDZk6uxYM7rJAzp0/ImY1De9rkY1qz6eA
bk+syq81NLySc7GhUpgFVga/x/yFaXjJffzMIFdPAXcC8ifX0XBO1KG4UiMW
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
uqBGH/+9DkkM/gchfcvP
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
GosnY/twywCzLh5ihBsqYhPJuGz56hZN4yZkhBe2qaSQ8Z+ze/Ofazfh7u8b
Hz6lEXxy9yrwciZArceVmeBMYp5E8ybWZyZA64A7i2IOsd/HwkLLzwnQbWwh
9DaXjGo5P8oEhBPha9PBbRcLyCjtVrnyRjMRZnZu15IuImOb8+7oMPVEWM4W
Ij+/S0YeM+/Zq0qJsJaf5ZjnPTKuS2GvK/mTALJXL4mPl5Hx9vrGuybjCaA9
/bPbuYKMgnv3JxxiTwQH+9PXP1aRcS02fX8xnAB+L0YPWtUS54UjxAUrJkKC
6pG5N3Vk/FpFPl6YlghlBR9KDjcSdqzbhEpbIrwUsHB58pCMS5KUH29PJMFI
YLuo5mMyGh3zEbn0MwlYGHqdNU/IOD1HlQ05lAwSjs2hSm1kTPx2ZXDtQDKo
vd6vefc5GfPEecc9ZVPA4kDlD5lXZFS4uF18vVEKeBUp3s1sJ2PZB6Or30+m
QKRQoZNwJxnffYyvNfBIgcJgKeEb3WQM977V0EVNgZbZlHbOXjLKK7i19G5J
gc9O64OD35Gx+NTbTUp7UuB3R+SBv+8J/dhsqoPdKbBB8z+m70cyXrkqcLlA
KgWUiv1vMz8T+K/xEbJLTAFj0QXqiW9k9BHeU23SmwLuYd4bhr8T/EUrbOXa
mgrBvyZeOo4Q/Btupo39SoVsF9fA/jHi/LKZZX9okwb1XZ9UyZNkXLHhXjbq
T4O+g9Yzr6bJ+JnFnWF0MR1m73Xm6zLIyP1wjfp+4n+WR9zQ/tEscf4s3Px4
cD4dtkU84d//i4x9+urs40IZoLug8bxinpj3Pe21y4IZ4HSsxl9xkdAze7vQ
nz/pcLln177CZWL+dlwovkn876bgnUmpFTLukZl1yKWnQ2X55tzUVTKK21uu
9jxLhw7JDBsBVgr2PFyv+nEsHSaiBHmj2SjIdaiYYeycAWxLMU/Z1lIw8qDL
xSNBGbD5OMflgHUUtFKx6JWSygStd4F7FrkpGKS4+mzyQybY6i6NneGj4FDC
qw3TyllwtvJs9vR6Cv7bf/rl9HwWxEnPWLoJUlDLYPKXaEA2lMS6cX0TpmAb
R+Q5mUfZ8PzP1xY7MQruM90RGiGZA0Mn7C70iFOwtyW/SVotB1bev91lKkVB
P9p61dADOSBmYDLyTJqChiX3C0NEcoj/3bYMkCXyd7bYGvHmACOZyvrJiIIV
Tq6GbLQ8yNQU7Y80pWAy5+AxH/M8MPzeU3zAnIKn65+dajiUB/PhcVfHKRR0
T+3/etgvD/J3GlNSrIj6+uO2c1bngXkP+xZ9WwoGb3bcEvs+D/5eeLL4y56C
o9Z++kva+XBX6mpHviMFK0P4R7Ra8sH66YFcyhEKGvE4b9TgKADWE3PnWFwp
eD70YpC9TQGU81Ucvn+MgiZvMV6ytgCoNacknI5T8Nr5Z529nwqA02Erk+ck
BQ9atr7VmC6A2tWh1qbTFIyS3lGk+KMAXG/npJz0pmBz46ti1+EC4DdxOLnx
LIF36mydx2gBPJwV1n55noKqO4Ln4z8XwImUtwIXLlBwzXfn5pTuAhDRih3d
cpmCV/fJVd3mLYTW74YNff4UHOBsadKwLwTv62yxIYEUlJRjhB4JKwTJXS3O
ysEUbCB7TZb/KoSXPVdUvodSUEYtN6vz2m3wvbifM/46BW0dVZ/Ydd4G2U2/
PmlHUdB8i9tV8qYi6Hpafp8eQ8F5yzLxnIAi8D9xMiTrBgUDDq72690ugu38
CrYmCRS0fJb7429lEfTXfFdcTqIg70w05VtNEYQ4ZP+7m0rBr7puTXsLi2AP
i32PbQYF38Z0rrAVF8Hn20JFHNkUPPPpgeYAkS/SpPtS7S0KcgrzJnJkFYHa
j2izY/kURLPPi1Hfi2Ao5bCM4G0Kbgj5fuWK1h24ofXf/JM7FFQzue5f6nMH
tIaaX/qUUNDuY3fjwdE7MHn9cpZ0GaGPh42esYF3IWWXmk/nfQoeDp/D0J67
oNv7Q/dqFQUXPwn1dcgUw+zFMtGdtRQ8mk0JuB9cDNmbTkx/rKPgrQr3rd13
i8G4Tf5xZCOhv/grrPNVxbBwYjDhwCMKKneszftM2AX8We7jjynIpDay7L1V
DORaW42UVgrerCsXVL5TDH8dBPn0n1HQmJPlXFFJMRSzdH3/9YKCoq+b1c8W
FINNUVRt/msK6p1vcrf8UQzya/R/3Jgn8HjFrrW5rgxqeTZrKi9S8C+5zyVs
sQwMxP6E9i1T8M9WrU0cV8rhg1x/p98KBUXOJkREKNyHE7srxTayWOCFNIPP
bP73YVkjxrWJ1QIvpg/td+y9DzEGx0tp7BbIN/3uRa14BUhZ6CysrrXAA6lu
/FTFCiinSWE+lwWW92yfr9tdAXBiMVKP1wJvRufqTO+ogO7zvb1j/BZosOIi
ZbylAlyDyqUiN1jgriHTfs+dFfArOvL4DmEL3LecxCEhXwGhqccq34haoOh5
QZ6iXRUgUgB/vMUt8NqUcMFmtwq4Uy6uv0HKAntoJufZIivgQON8XI20Bdqa
Btq4VVXAq2fdH2xkLXD1ogrjHF8lOLy9J7skb4EljaL5QpRKmPkcfjpzqwV6
9ubXyvtXwtUJlwcHFS2wKqr2ZWJLJfDNabEM7rTAQMGqOq7pSshdFTUO3m2B
gg7u93cvVsJe7l+J8spEPQ36rVvYq6BVpPPLcxULXMapN/+tqQJL2eKtJ/Zb
YN9Zk+8yLFUwsiv0DLeGBY5YXC5IWqkEX/UjTWVaFtipQv28bbYSOPQ12Mlg
gS/XWynw8FVBKlnY/Ochoj/B/qMW6lWwzXE2LUmP4GNTlVUoqQoaj7cPES9S
dBl7osGbXAUm54p2DhhZ4If7MWqbZqvg7OhaD9kcAv/ZW4zcuDoQYPhYpeZa
4JUIvnqO2jqoWBhAngILzEg9ePzXTB2QV3V2XbttgfwW5/87KVIPzLWlGxfu
WODbn99lSzbVQ9x6YY5TJRbI/DrYd2VrPShtDPj5rdQC9zPPxHjK1sMbmfGv
VvcJ/AcrBl3k6+G0Irn9VaUFhryb3Ny5vh649zXUaddYoIX+oYdqkvVQoilb
WP2A4EfdiWeXdj0Y6UXHb2uwwFZtu/nAQ/UwYTrnn91kgSIRe1Lyo+rhujXt
xIZmCywNiueI6KwHBafn1tdbLLBbdaOo1Z96eO6+W+dvqwWOJquKlJ1sADfv
NKUzzyxwxahdWLqkAeyWts0/niHyH9Srkv3QBAd5jYNpmpbYVMOUVXJtAS+z
+ei12pZYcujruHt4C+TE5iZXoiUWLnM71BW0QOcbk1tUXUv0lfL86vK6Bf7x
/r7LbmCJ1KMn7lh/bAElUn7VfUNL5D81aDnzpQWOxJk9tDexxOW2zinDry0Q
37n47D+SJbYU6RsX9bdAC19hVxnZElO7NwlHEutnSeYDtpaW+O7ReZuyzy0g
c2N5aI2NJZofqSnMI/wWXbdn7tlZ4qdHbs8C/7RAMD9lwZpqiR2n+X6Kb3kC
VeZ/V1dplqiz5kL0tNYTGL5xZ12JsyVeXJu7wH7mCQh1WwhaHSX6c6IFfK58
Anrr/0n+c7PEnSOnPDf3PgFjQuc58Za4pKnqnWH1FOw2itO/jVpia/po+PyR
58D0OPGHK8wKrdPxVX1CB+TsTbgpKGONd3atImvWW8j+anjx6GtrrH6Uu2s/
vAOxrgBWRw8bnDMecfVaNwDDBTpfMgVtsSI/+6LPx8+g+DCMGlpti4NOe08o
uwxClFm+izHZDuMKam9uoQyB+lPTettlOzx5bEzwlucIuPn7VfGm2+OTa6Pn
KNpj8NEh786jTHsszt+aZWk/BmT1jizPHHtMtjx1uPX4GDwX/X1TKs8eaRP7
A3YEjIHWgsz1NwX2uK9r5oRL8hhU9Zn6Xy2yxwu8MfqHc8ZgW/WFM7uKifUR
//405I9Bzs189y/37DFNe3iEl7CFfN5QY8vtsb0uq5KcNQZRpEXywUp7LNd3
2jCYNgYsu+QM6NX2GLFP+q9l3Bj4cZM0sx/YY9/7UNGdYWMwM3lxj1mDPUpJ
x9pkEn7XlwVbVprssfHIjWtxKWPwoahTvKzZHvfCx/YDGWNAClvipz2xx0ph
gabOqjFoOyrPzttmj1x6LJ/yu8ZA1qTHlodpjzFsO38UW45D2vYV04c/7LFn
9aMNcbMAH+c2ndNz9rhD77reLv9xCB2z2C/52x47n2gMYOg4LLdd3dmxZI8r
S/kHw8PHwafgroz/X3tUt/6u6RQyDmPXekV2rtrjWemIlr+Xx8HR+R/35zUO
2OUcdfndhXHo0d6+JobNAcUfJYeSvMfBUMpqQXOtA346m1Kefmwcmv8ETE+v
c0DHct2jbl7joPKxeDCTxwHtr2yzf3BlHErq+96Z8DugpDntuXfQOGxOXX39
R8ABXYZJt9eljkOKr2LLPSEHfE/vN41/MA48Vta1VFEHlBsJffDj+ThcUw4q
4RZ3wMrl2YqDH8ZhcKPSCpe+A7pWHaJ9dpgADaeLHuWHHVCm92pCocsEJOW3
9lKMHXC1f9HKwHUCGGM8MG/qgH9172muOk6A0Q7bkjRzov46w2NbLSeg0DtP
WMvCAXfN3MNL5An4Vz0d9M3KAXU33ZPYdXgC7BZVZ4JtHfDEc42jXgcnoEor
yFbBwQHNAoQdXhlNAM+1162vHB0w10UAra0m4PgzISXPIw7IOqq5P8F+AlrX
HUlf7+qA//7w3ug/PwGSpGK2mmMO+PMAXWhr/AT4Jfzytj3ugFddeOonsieg
u//gp+UTDtj+CDV9qydAUSLCIOe0A+6WvsLX+GwCwo70VB7ydsC00e1pku2E
/7af+8V0gh9X/8hjqpNwfs/jrlG6A4Y0GUQ+nZ+Ez2dSv1BnHfDC3RCVD5OT
oFftPf32pwN6DAuEdE5MQunc4aXD8w6459xQlPynSRBW27y2+TfRD+/G/tkP
kxBwYVFIZZngV1/iz/zoJIzVd8uW/HXATst3LYrDk0Bavrtn86oD1l165sn6
exIeaF7TTllDReWHSwfc+Kdg01V7Ux42Kj7R2OyRuXEKwpv3OgRzUNG7Oc9e
UG0KGKvrPBY5qaguSqruMJwC20NDvl7cVGQocXalWkxBS3BjyAgvFQ9+cvVJ
PzIF29oSbjqsp2KOjmM0r+sUxLOfutW9gYoJRuNOW52nYNFAt8xAmIrcHnZs
e2ymwJ/2IuqOFhWr85Tq3eqnYCTnVpoUUDE/OWBTVPUUmA5eKEo8RMVYJ9PR
O/lTUCNDrlmnR8X5rwKlV3KmQOrottZAAyqG+q2seU/Y4YUs3fOGVGx6G9jd
m0jUP/rhyykTKgbNBof/KpgCm62V09/NqFj+nvoptGIKmj0il2zJVMxcvXTl
d90UKJS4rO20oKLEk4cnL76fgrhpdWE9ayraGn7NFpmYgoWdG+QabakoPPJg
gXNxCo54Te3Z40BFa7eQrXr80/Dyfqt2kSMVXwSeaB4QmYY9PzJMJY9Qcbv4
K29tyWlIUz7nkOBCRVlagEuCxDSwnDfx4DxGRdJdn+13xabBo1bOL8Cdin+y
h1kYvNPQvfAnZM6DinXqEg2lLNNw4EDfzZOnqNgefl7ej7DzLpXeGvSkYuLv
a49zf04BV1NomY0PFUde6hZ9/jEFZ/86NnWcpWKgimTkKyL+40HVVzq+VBxd
fd1rtjoFOoG87+svUPHf97cZzULTUNIyOqJ0mYoxF7j2Vu2ahg2szT8L/an4
38fUQZcD03BZN4VFIpCK/T8VPz+1nIbhUC++m9eoKH15G8ubY9Ng+txAcm0o
Fb+mXru3y3MaatZKK14Np6KgouquFL9pkDT6vf9XBBX3X/fK+E7YoVFd+iei
qfiTJv9A4Nw0BPw35SMUR8VjVm6SEW7TcMGfLetxPBVrNJYkMx2nwWd+04uT
iVTcmtnziWE3DSe91H8Kp1DxuWk9PcZ4Go6NW0o9SaPi+wGV9/6G00Bz9jI8
nUlFFvoutvsO02AzEHFONIeKNhKvxKSOTgPZoiCnNZfg28PlyHuvaTBuf/TK
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
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 40 Pi}, {0., 0.9999999999753335}}, {{
        0, 125.66370614359172`}, {0., 0.9999999999753335}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.723078168550371*^9, 3.723078279960824*^9, 
  3.723078862856142*^9, 3.7230789887760983`*^9, 3.723081984736265*^9, 
  3.723082157506631*^9, 3.72308505399719*^9, 3.723087551606668*^9, 
  3.7231191926051035`*^9, 3.7231550662649117`*^9, 3.7231569938982086`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"EffectiveHamiltonian", "@", "H"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"H", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"RotatingWaveApproximation", "[", 
    RowBox[{
     RowBox[{"Normal", "@", "H"}], ",", "99"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"H", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.7230776317418194`*^9, 3.723077665182787*^9}, 
   3.7230777202267404`*^9, {3.723077813339555*^9, 3.7230778289106507`*^9}, {
   3.723078070166279*^9, 3.723078107944865*^9}, {3.7230781477324066`*^9, 
   3.723078153864324*^9}, 3.723078224183573*^9, {3.7230782545660872`*^9, 
   3.7230782586023397`*^9}, {3.7230782944858932`*^9, 
   3.7230782994014034`*^9}, {3.7230784000330935`*^9, 
   3.7230784217067327`*^9}, {3.723083713916889*^9, 3.723083714117188*^9}, {
   3.7230840924453936`*^9, 3.723084092806696*^9}, 3.723119165321555*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["49", "990"], "+", 
       FractionBox[
        RowBox[{"49", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "100"}], " ", "\[ImaginaryI]", " ", "t"}]]}], "1980"],
        "+", 
       FractionBox[
        RowBox[{"49", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"100", " ", "\[ImaginaryI]", " ", "t"}]]}], "1980"]}], "0", 
      "0"},
     {"0", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["3", "110"]}], "-", 
       RowBox[{
        FractionBox["3", "220"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "100"}], " ", "\[ImaginaryI]", " ", "t"}]]}], "-", 
       RowBox[{
        FractionBox["3", "220"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"100", " ", "\[ImaginaryI]", " ", "t"}]]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "40"]}], "-", 
       FractionBox[
        RowBox[{"49", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "100"}], " ", "\[ImaginaryI]", " ", "t"}]]}], "1980"],
        "+", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "200"}], " ", "\[ImaginaryI]", " ", "t"}]], "3960"]}]},
     {"0", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "40"]}], "-", 
       FractionBox[
        RowBox[{"49", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"100", " ", "\[ImaginaryI]", " ", "t"}]]}], "1980"], "+", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"200", " ", "\[ImaginaryI]", " ", "t"}]], "3960"]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "45"]}], "-", 
       RowBox[{
        FractionBox["1", "90"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "100"}], " ", "\[ImaginaryI]", " ", "t"}]]}], "-", 
       RowBox[{
        FractionBox["1", "90"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"100", " ", "\[ImaginaryI]", " ", "t"}]]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {3, 3}, 0, {
     1, {{0, 1, 3, 5}, {{1}, {3}, {2}, {2}, {3}}}, {
      Rational[49, 990] + 
       Rational[49, 1980] E^(Complex[0, -100] $CellContext`t) + 
       Rational[49, 1980] E^(Complex[0, 100] $CellContext`t), 
       Rational[-1, 40] + 
       Rational[-49, 1980] E^(Complex[0, -100] $CellContext`t) + 
       Rational[1, 3960] E^(Complex[0, -200] $CellContext`t), 
       Rational[-3, 110] + 
       Rational[-3, 220] E^(Complex[0, -100] $CellContext`t) + 
       Rational[-3, 220] E^(Complex[0, 100] $CellContext`t), Rational[-1, 40] + 
       Rational[-49, 1980] E^(Complex[0, 100] $CellContext`t) + 
       Rational[1, 3960] E^(Complex[0, 200] $CellContext`t), Rational[-1, 45] + 
       Rational[-1, 90] E^(Complex[0, -100] $CellContext`t) + 
       Rational[-1, 90] E^(Complex[0, 100] $CellContext`t)}}]]]]], "Output",
 CellChangeTimes->{{3.723078406431815*^9, 3.723078431817666*^9}, 
   3.7230788697366505`*^9, 3.723078996086479*^9, 3.7230819868510833`*^9, 
   3.7230820425217514`*^9, 3.723082165717758*^9, 3.723084093427168*^9, 
   3.7230850568800507`*^9, 3.7230875525480165`*^9, 3.723119194998207*^9, 
   3.7231550755866766`*^9, 3.72315699543288*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["49", "990"], "0", "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox["3", "110"]}], 
      RowBox[{"-", 
       FractionBox["1", "40"]}]},
     {"0", 
      RowBox[{"-", 
       FractionBox["1", "40"]}], 
      RowBox[{"-", 
       FractionBox["1", "45"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.723078406431815*^9, 3.723078431817666*^9}, 
   3.7230788697366505`*^9, 3.723078996086479*^9, 3.7230819868510833`*^9, 
   3.7230820425217514`*^9, 3.723082165717758*^9, 3.723084093427168*^9, 
   3.7230850568800507`*^9, 3.7230875525480165`*^9, 3.723119194998207*^9, 
   3.7231550755866766`*^9, 3.7231569954429045`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"func", "=", 
   RowBox[{"Function", "@@", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{
       RowBox[{"MatrixExp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "H", " ", "t"}], "]"}], ".", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], "}"}]}]}], ";", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"x_", "?", "NumberQ"}], ",", "i_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"func", "[", "x", "]"}], "\[LeftDoubleBracket]", "i", 
    "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"f", "[", 
         RowBox[{"t", ",", "#"}], "]"}], "]"}], "^", "2"}], "&"}], "/@", 
     RowBox[{"Range", "[", "2", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7230789072615423`*^9, 3.723078941849738*^9}, 
   3.7230793287484093`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxFz3lI0wEUB/CpqDgd5YVOSzDvInHeV+qyoVtOp6lT57J05gzPKMsjyQva
IV4JmU1hFgsNDB1l/BTTaYpCI2KVZ9aalahlGZhmF+R7D758+fz3fY6ZhQnZ
+iQSif03/3qsoH4kvWY8jPT/BuK5uq9EV/ieZc9kixNEP3g/hc7rI1Rg5v3m
NgXxArxcTgTKCS1YqY273kl8A7fb2Hl1EAYRexaXLEgtGq3AFKo8aEnqABa5
/qapjjiDyVm3pznlHuACwqfKqcgT7G4v49/8QANvhxrZtYp9wUN5eQJfUgB4
+Ch540t3ELj/5x1Tjnso2PjBXYZLWxiYvb2+JOmMADd0mZx7OUcHF1lHSHu9
I8HVpR6jkTUnwFKBebjHEAPsb2vNl5lHgWcSbEYz46LB9sl+kw8VTHD9SaPF
8R8s8NaEJtjVLwZsQBkJtJawwUYz3VeTpmLBsmmn3Ht6HPxvH0mQ34Neb+Xp
zzHjwc56jI2G7+gLOmPhoY4E8DEKq5ofcgqcQrVbe6NDfxbm7pDrEsEdtOYm
S8ck3LMYfSVrCm2rrtRPFyaDtV3HF9otueDDg3W82n60mC0/y+KkgINUMQPc
bXR2RUkfpS0VvET13CUz0sAXvYbVujV0rVjNyJXwwO8n8818/dPBT1iSEoUG
rWRUC7eK+eAtZ+OeRvvT4IEo06bnj9EjQrrPjUH0lOiyJnkYPT+tpc6PoUmc
QfmyGs1MyVfu6NCzQvUrF4sMsFZkWPbRCr3aHXKgxwb9a1Vxxusg2qn42qdg
d3ReKW0nLgx96VaOzIKOriRk4ZpIdOOuSW0aE62semeWnYgektv2unHRT1Wx
8Sup6NeGRGthBvqt60aAdyZ6JcptdlOA3hTyKx7loHdFLQ5l59F/ANNdEZM=

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 40 Pi}, {0., 0.9999999999999958}}, {{
        0, 125.66370614359172`}, {0., 0.9999999999999958}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7230781776781087`*^9, 3.72307826353271*^9, 
  3.7230783292558966`*^9, 3.723078438970828*^9, 3.7230788735427713`*^9, 
  3.7230789428080783`*^9, 3.7230789984366198`*^9, 3.7230841070826483`*^9, 
  3.7230850579806976`*^9, 3.7230875547104692`*^9, 3.72311919735003*^9, 
  3.7231550895406733`*^9, 3.7231569985374413`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["AC Stark Shift", "Subsubsection",
 CellChangeTimes->{{3.6018675906323147`*^9, 3.601867598500765*^9}, 
   3.6979434496023293`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetPrecision", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Eigenvalues", "[", 
       RowBox[{"(", GridBox[{
          {"0", 
           FractionBox[
            SubscriptBox["\[CapitalOmega]", "1"], "2"], 
           FractionBox[
            SubscriptBox["\[CapitalOmega]", "2"], "2"]},
          {
           FractionBox[
            SubscriptBox["\[CapitalOmega]", "1"], "2"], 
           RowBox[{
            SubscriptBox["\[Omega]", "1"], "-", "\[Nu]"}], "0"},
          {
           FractionBox[
            SubscriptBox["\[CapitalOmega]", "2"], "2"], "0", 
           RowBox[{
            SubscriptBox["\[Omega]", "2"], "-", "\[Nu]"}]}
         }], ")"}], "]"}], "-", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{
         SubscriptBox["\[Omega]", "1"], "-", "\[Nu]"}], ",", 
        RowBox[{
         SubscriptBox["\[Omega]", "2"], "-", "\[Nu]"}]}], "}"}]}], ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Nu]", "\[Rule]", "80."}], ",", 
      RowBox[{
       SubscriptBox["\[Omega]", "1"], "\[Rule]", "100."}], ",", 
      RowBox[{
       SubscriptBox["\[Omega]", "2"], "\[Rule]", "200."}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalOmega]", "1"], "\[Rule]", "1."}], ",", 
      RowBox[{
       SubscriptBox["\[CapitalOmega]", "2"], "\[Rule]", "1."}]}], "}"}]}], 
   ",", "7"}], "]"}]], "Input",
 CellChangeTimes->{{3.601860331069437*^9, 3.601860563895754*^9}, {
  3.6018606025829663`*^9, 3.601860724881962*^9}, {3.601868668720323*^9, 
  3.601868680785013*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.0145739782398964703`7."}], ",", "0.0124906376737783376`7.",
    ",", "0.0020833405661164761113468557596206665`7."}], "}"}]], "Output",
 CellChangeTimes->{
  3.6018604188844595`*^9, {3.601860454890519*^9, 3.6018605644437847`*^9}, {
   3.601860604269063*^9, 3.6018606387950373`*^9}, 3.6018606807684383`*^9, {
   3.6018607184995966`*^9, 3.6018607267890706`*^9}, 3.6018686824361076`*^9, 
   3.697943473394574*^9, 3.7230757626267347`*^9, 3.723075972364976*^9, 
   3.7230763961781254`*^9, 3.7230875578531065`*^9, 3.7231192020340776`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]", "=."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"N", "[", 
      SqrtBox[
       RowBox[{"1", "+", 
        SuperscriptBox["\[Lambda]", "2"]}]], "]"}], ",", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "f", "}"}], ",", 
       RowBox[{
        RowBox[{"f", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Psi]", "[", "t", "]"}], "/.", 
            RowBox[{"NDSolve", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[ImaginaryI]", " ", 
                   RowBox[{
                    SubscriptBox["\[PartialD]", "t"], 
                    RowBox[{"\[Psi]", "[", "t", "]"}]}]}], "==", " ", 
                  RowBox[{"\[CapitalOmega]", 
                   RowBox[{
                    RowBox[{"(", GridBox[{
                    {"0", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    "\[ImaginaryI]", " ", "\[CapitalDelta]", " ", "t"}]]},
                    {
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "\[CapitalDelta]", 
                    " ", "t"}]], "0"}
                    }], ")"}], ".", 
                    RowBox[{"\[Psi]", "[", "t", "]"}]}]}]}], ",", 
                 RowBox[{
                  RowBox[{"\[Psi]", "[", "0", "]"}], "\[Equal]", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}]}]}], "}"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[CapitalOmega]", "\[Rule]", 
                  RowBox[{"2", "\[Pi]"}]}], ",", 
                 RowBox[{"\[CapitalDelta]", "\[Rule]", 
                  RowBox[{"2", "\[Lambda]", " ", "\[Pi]"}]}]}], "}"}]}], ",", 
              RowBox[{"\[Psi]", "[", "t", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "0", ",", "5"}], "}"}]}], "]"}]}], ")"}], 
          "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", 
        RowBox[{
         RowBox[{"\[Omega]", "/", 
          RowBox[{"(", 
           RowBox[{"2", "\[Pi]"}], ")"}]}], "/.", 
         RowBox[{"FindFit", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Abs", "[", 
               RowBox[{"f", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}], "2"], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "5", ",", "0.1"}], "}"}]}], "]"}], 
           ",", 
           RowBox[{"a", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"\[Omega]", " ", "t"}], "+", "\[Phi]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"a", ",", 
             RowBox[{"{", 
              RowBox[{"\[Omega]", ",", 
               RowBox[{"2", 
                SqrtBox[
                 RowBox[{"1", "+", 
                  SuperscriptBox["\[Lambda]", "2"]}]], "\[Pi]"}]}], "}"}], 
             ",", "\[Phi]"}], "}"}], ",", "t"}], "]"}]}]}]}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", ",", "1", ",", "10"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.601610318544917*^9, 3.601610412567295*^9}, {
  3.6016104596959906`*^9, 3.6016105276318765`*^9}, {3.601610670399042*^9, 
  3.6016108563096757`*^9}, {3.6016108942778473`*^9, 3.6016110375730433`*^9}, {
  3.601611068684823*^9, 3.601611116116536*^9}, {3.6016111631002235`*^9, 
  3.6016111850344777`*^9}, {3.601611280402932*^9, 3.6016114593621683`*^9}, {
  3.6016116446577663`*^9, 3.6016116664410124`*^9}, {3.601611707761376*^9, 
  3.601611711096567*^9}, {3.6016117684008446`*^9, 3.601611917447369*^9}, {
  3.6016119530784073`*^9, 3.6016119686392975`*^9}, {3.601612033239992*^9, 
  3.60161235244625*^9}, {3.601613106200362*^9, 3.6016131359110613`*^9}, {
  3.723076041285102*^9, 3.723076041910759*^9}, {3.7230875831814137`*^9, 
  3.723087584892971*^9}}],

Cell[BoxData[
 TemplateBox[{
  "FindFit","sszero",
   "\"The step size in the search has become less than the tolerance \
prescribed by the PrecisionGoal option, but the gradient is larger than the \
tolerance specified by the AccuracyGoal option. There is a possibility that \
the method has stalled at a point that is not a local minimum.\"",2,46,1,
   26706750724119252605,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.7230760215561733`*^9, 3.7230760424297314`*^9}, 
   3.7230763979267607`*^9, {3.723087559515681*^9, 3.723087585383983*^9}, 
   3.7231192028758802`*^9}],

Cell[BoxData[
 TemplateBox[{
  "FindFit","sszero",
   "\"The step size in the search has become less than the tolerance \
prescribed by the PrecisionGoal option, but the gradient is larger than the \
tolerance specified by the AccuracyGoal option. There is a possibility that \
the method has stalled at a point that is not a local minimum.\"",2,46,2,
   26706750724119252605,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.7230760215561733`*^9, 3.7230760424297314`*^9}, 
   3.7230763979267607`*^9, {3.723087559515681*^9, 3.723087585383983*^9}, 
   3.723119202915875*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.4142135623730951`", ",", "1.41459589193504`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.23606797749979`", ",", "2.2323682592043554`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.1622776601683795`", ",", "3.170107376406316`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.123105625617661`", ",", "4.127892119789997`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.0990195135927845`", ",", "5.08976476322148`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.082762530298219`", ",", "6.0885158659783984`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.0710678118654755`", ",", "7.068138854410768`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.06225774829855`", ",", "8.068162255906554`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.055385138137417`", ",", "9.04941034571643`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.04987562112089`", ",", "10.047089107587128`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.723076021609276*^9, 3.7230760425080333`*^9}, 
   3.723076398019292*^9, {3.7230875596955338`*^9, 3.7230875854541306`*^9}, 
   3.7231192029459004`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0, 0, 1], PointSize[0.019444444444444445`], AbsoluteThickness[
     1.6], LineBox[{{1.4142135623730951`, 1.41459589193504}, {
      2.23606797749979, 2.2323682592043554`}, {3.1622776601683795`, 
      3.170107376406316}, {4.123105625617661, 4.127892119789997}, {
      5.0990195135927845`, 5.08976476322148}, {6.082762530298219, 
      6.0885158659783984`}, {7.0710678118654755`, 7.068138854410768}, {
      8.06225774829855, 8.068162255906554}, {9.055385138137417, 
      9.04941034571643}, {10.04987562112089, 
      10.047089107587128`}}]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.279281342705161, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1.4142135623730951`, 10.04987562112089}, {
    0, 10.047089107587128`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.723076021609276*^9, 3.7230760425080333`*^9}, 
   3.723076398019292*^9, {3.7230875596955338`*^9, 3.7230875854541306`*^9}, 
   3.7231192030059023`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Def", "Subsubsection",
 CellChangeTimes->{{3.723085152762356*^9, 3.72308515609686*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TrappedIon", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{"{", "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7230851603233337`*^9, 3.7230851640771627`*^9}, {
   3.723085206731855*^9, 3.7230852319136257`*^9}, 3.755348714996002*^9, {
   3.755349107327689*^9, 3.755349111183859*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"Frequency", ",", "Strength"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Frequency", "@", 
    RowBox[{"{", "args__", "}"}]}], ":=", 
   RowBox[{"Frequency", "[", "args", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Strength", "@", 
    RowBox[{"{", "args__", "}"}]}], ":=", 
   RowBox[{"Strength", "[", "args", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Strength", "[", "__", "]"}], "=", "1"}], ";"}]}], "Input",
 CellChangeTimes->{3.7553923052116213`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"defs", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Pi]", ",", "0"}], "}"}]}], "}"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Chop", "[", 
   RowBox[{
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"Evolution", "[", 
      RowBox[{
       RowBox[{"Hamiltonian", "@", "defs"}], ",", 
       RowBox[{"IdentityMatrix", "@", "FullDimension"}]}], "]"}]}], ",", 
    "1*^-6"}], "]"}], "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"EvolutionFunction", "[", 
  RowBox[{
   RowBox[{"Hamiltonian", "@", "defs"}], ",", 
   RowBox[{"IdentityMatrix", "@", "FullDimension"}], ",", "t", ",", 
   RowBox[{"Method", "\[Rule]", "Constant"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"%", "[", 
    FractionBox["1", "2"], "]"}]}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"Rot", "@", "defs"}]}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"EvolutionPlot", "@", 
  RowBox[{"Hamiltonian", "@", "defs"}]}]}], "Input",
 CellChangeTimes->{{3.72308524238468*^9, 3.7230852605533304`*^9}, {
  3.7230855702665844`*^9, 3.7230855733003235`*^9}, {3.723085751607956*^9, 
  3.72308575314793*^9}, {3.7230966488932257`*^9, 3.7230966659019003`*^9}, {
  3.723097052194474*^9, 3.723097113772084*^9}, {3.7231212753228273`*^9, 
  3.723121275693091*^9}, {3.7231213233802433`*^9, 3.7231213317688785`*^9}, {
  3.755330054704216*^9, 3.755330055190271*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0.9999999815293837`"},
     {"0.9999999815293837`", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7230855737443657`*^9, 3.7230857535996037`*^9, 3.7230875914278193`*^9, 
   3.72308789434486*^9, {3.723096649293202*^9, 3.7230966666327715`*^9}, {
   3.7230969709747295`*^9, 3.7230970002425003`*^9}, {3.7230970566488047`*^9, 
   3.7230971142101965`*^9}, 3.7231192066988263`*^9, {3.723120801411875*^9, 
   3.723120825142612*^9}, 3.7231211174305496`*^9, 3.723121276433655*^9, {
   3.7231213331610036`*^9, 3.723121359317054*^9}, 3.72315675385989*^9, {
   3.755330048661034*^9, 3.755330055918866*^9}, 3.7553487243278513`*^9, {
   3.755349125174637*^9, 3.755349140811064*^9}, {3.755349240859254*^9, 
   3.755349261399125*^9}}],

Cell[BoxData[
 RowBox[{
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Pi]", " ", "#1"}], "]"}], ",", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Pi]", " ", "#1"}], "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Pi]", " ", "#1"}], "]"}]}], ",", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Pi]", " ", "#1"}], "]"}]}], "}"}]}], "}"}], 
         RowBox[{"0", "\[LessEqual]", "#1", "\[LessEqual]", 
          FractionBox["1", "2"]}]},
        {"0", 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "&"}]], "Output",
 CellChangeTimes->{
  3.7230855737443657`*^9, 3.7230857535996037`*^9, 3.7230875914278193`*^9, 
   3.72308789434486*^9, {3.723096649293202*^9, 3.7230966666327715`*^9}, {
   3.7230969709747295`*^9, 3.7230970002425003`*^9}, {3.7230970566488047`*^9, 
   3.7230971142101965`*^9}, 3.7231192066988263`*^9, {3.723120801411875*^9, 
   3.723120825142612*^9}, 3.7231211174305496`*^9, 3.723121276433655*^9, {
   3.7231213331610036`*^9, 3.723121359317054*^9}, 3.72315675385989*^9, {
   3.755330048661034*^9, 3.755330055918866*^9}, 3.7553487243278513`*^9, {
   3.755349125174637*^9, 3.755349140811064*^9}, {3.755349240859254*^9, 
   3.7553492614507513`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "1"},
     {"1", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7230855737443657`*^9, 3.7230857535996037`*^9, 3.7230875914278193`*^9, 
   3.72308789434486*^9, {3.723096649293202*^9, 3.7230966666327715`*^9}, {
   3.7230969709747295`*^9, 3.7230970002425003`*^9}, {3.7230970566488047`*^9, 
   3.7230971142101965`*^9}, 3.7231192066988263`*^9, {3.723120801411875*^9, 
   3.723120825142612*^9}, 3.7231211174305496`*^9, 3.723121276433655*^9, {
   3.7231213331610036`*^9, 3.723121359317054*^9}, 3.72315675385989*^9, {
   3.755330048661034*^9, 3.755330055918866*^9}, 3.7553487243278513`*^9, {
   3.755349125174637*^9, 3.755349140811064*^9}, {3.755349240859254*^9, 
   3.755349261460229*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "1"},
     {"1", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 2}, 0, {1, {{0, 1, 2}, {{2}, {1}}}, {1, 1}}]]]]], "Output",
 CellChangeTimes->{
  3.7230855737443657`*^9, 3.7230857535996037`*^9, 3.7230875914278193`*^9, 
   3.72308789434486*^9, {3.723096649293202*^9, 3.7230966666327715`*^9}, {
   3.7230969709747295`*^9, 3.7230970002425003`*^9}, {3.7230970566488047`*^9, 
   3.7230971142101965`*^9}, 3.7231192066988263`*^9, {3.723120801411875*^9, 
   3.723120825142612*^9}, 3.7231211174305496`*^9, 3.723121276433655*^9, {
   3.7231213331610036`*^9, 3.723121359317054*^9}, 3.72315675385989*^9, {
   3.755330048661034*^9, 3.755330055918866*^9}, 3.7553487243278513`*^9, {
   3.755349125174637*^9, 3.755349140811064*^9}, {3.755349240859254*^9, 
   3.755349261469651*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
eGzDfTf4ltodsVWzS0sEJL6yvdixfE71/11ibo0=
           "]]}, "\"\[VerticalSeparator]1\[RightAngleBracket]\"", LabelStyle -> 
         "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]1\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
zROI5505tkg5QXLFz8VFKm/PtvH/+39WC3gL
           "]]}, "\"\[VerticalSeparator]2\[RightAngleBracket]\"", LabelStyle -> 
         "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]2\[RightAngleBracket]", 
         "Tooltip"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[VerticalSeparator]1\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]2\[RightAngleBracket]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7230855737443657`*^9, 3.7230857535996037`*^9, 3.7230875914278193`*^9, 
   3.72308789434486*^9, {3.723096649293202*^9, 3.7230966666327715`*^9}, {
   3.7230969709747295`*^9, 3.7230970002425003`*^9}, {3.7230970566488047`*^9, 
   3.7230971142101965`*^9}, 3.7231192066988263`*^9, {3.723120801411875*^9, 
   3.723120825142612*^9}, 3.7231211174305496`*^9, 3.723121276433655*^9, {
   3.7231213331610036`*^9, 3.723121359317054*^9}, 3.72315675385989*^9, {
   3.755330048661034*^9, 3.755330055918866*^9}, 3.7553487243278513`*^9, {
   3.755349125174637*^9, 3.755349140811064*^9}, {3.755349240859254*^9, 
   3.7553492615937023`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"defs", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Pi]", ",", 
        RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "}"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"Rot", "@", "defs"}]}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"EvolutionPlot", "@", 
  RowBox[{"Hamiltonian", "@", "defs"}]}]}], "Input",
 CellChangeTimes->{{3.72308524238468*^9, 3.7230852605533304`*^9}, {
  3.7230855702665844`*^9, 3.7230855880281296`*^9}, {3.723085756953264*^9, 
  3.723085761779442*^9}, {3.7230966698312993`*^9, 3.7230966741092796`*^9}, {
  3.755330073876091*^9, 3.755330074290187*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{"-", "\[ImaginaryI]"}]},
     {"\[ImaginaryI]", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 2}, 0, {
     1, {{0, 1, 2}, {{2}, {1}}}, {
      Complex[0, -1], Complex[0, 1]}}]]]]], "Output",
 CellChangeTimes->{
  3.723085588799907*^9, {3.7230857588959627`*^9, 3.7230857622498837`*^9}, 
   3.723087593332219*^9, 3.723087897138972*^9, {3.7230966708666425`*^9, 
   3.723096674640175*^9}, 3.7230969663306394`*^9, {3.7230970025040717`*^9, 
   3.7230970092715206`*^9}, 3.7231192091405687`*^9, 3.7231208058041706`*^9, {
   3.7231213523092113`*^9, 3.723121366796818*^9}, 3.7231567564222593`*^9, 
   3.7553300774317207`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
3RBzrifeYQpF46Kzi4skmrf/mBZfNiX/P3iKoAg=
           "]]}, "\"\[VerticalSeparator]1\[RightAngleBracket]\"", LabelStyle -> 
         "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]1\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
cOeePb1I+cOE+OziIoGP3ySH/u//AWBBojs=
           "]]}, "\"\[VerticalSeparator]2\[RightAngleBracket]\"", LabelStyle -> 
         "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]2\[RightAngleBracket]", 
         "Tooltip"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[VerticalSeparator]1\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]2\[RightAngleBracket]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.723085588799907*^9, {3.7230857588959627`*^9, 3.7230857622498837`*^9}, 
   3.723087593332219*^9, 3.723087897138972*^9, {3.7230966708666425`*^9, 
   3.723096674640175*^9}, 3.7230969663306394`*^9, {3.7230970025040717`*^9, 
   3.7230970092715206`*^9}, 3.7231192091405687`*^9, 3.7231208058041706`*^9, {
   3.7231213523092113`*^9, 3.723121366796818*^9}, 3.7231567564222593`*^9, 
   3.7553300775512533`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"defs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Pi]", "/", "2"}], ",", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Pi]", "/", "2"}], ",", 
         RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Rot", "@", "defs"}], "//", "TrigToExp"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.72308524238468*^9, 3.7230852605533304`*^9}, {
  3.7230855702665844`*^9, 3.7230855733003235`*^9}, {3.72308560333888*^9, 
  3.723085661511011*^9}, {3.723096677738082*^9, 3.7230966783530207`*^9}, {
  3.7553300801237307`*^9, 3.755330080601663*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}], "2"]], "0"},
     {"0", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}], "2"]}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 2}, 0, {
     1, {{0, 2, 4}, {{1}, {2}, {2}, {1}}}, {
      E^(Complex[0, Rational[1, 2]] $CellContext`\[Theta]), 0, 
       E^(Complex[0, Rational[-1, 2]] $CellContext`\[Theta]), 
       0}}]]]]], "Output",
 CellChangeTimes->{{3.723085634499497*^9, 3.723085661831896*^9}, 
   3.7230857811681595`*^9, 3.7230875951332903`*^9, 3.723087899321198*^9, 
   3.72309667972381*^9, 3.723097005846236*^9, 3.7230971227967525`*^9, 
   3.7231192103026657`*^9, 3.723120807927292*^9, 3.7231213697276807`*^9, 
   3.7231567576137934`*^9, 3.755330081191196*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"TrappedIon", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}], ",", 
    RowBox[{"{", "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7230858173939753`*^9, 3.723085817554062*^9}, {
  3.723088063556563*^9, 3.7230881039030123`*^9}, {3.75534930491153*^9, 
  3.7553493145233088`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"defs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Pi]", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", 
         FractionBox["\[Pi]", "2"]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Pi]", ",", "\[Pi]"}], "}"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rot", "@", "defs"}], "\[Equal]", 
  RowBox[{"Rot", "@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0"}], "}"}]}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.723085951179287*^9, 3.723085973696912*^9}, {
  3.723086040349635*^9, 3.7230861146159215`*^9}, {3.723096684009887*^9, 
  3.723096687863119*^9}, {3.7553300861550283`*^9, 3.755330088493676*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.723086041080078*^9, {3.723086074515609*^9, 3.7230861152636127`*^9}, 
   3.7230872908567486`*^9, 3.723087495871853*^9, 3.723087597797741*^9, 
   3.7230879016642523`*^9, 3.7230883189252443`*^9, 3.723088632094866*^9, 
   3.7230966885538034`*^9, 3.7230971247891183`*^9, 3.7231173284625716`*^9, 
   3.723119114343773*^9, 3.723119212084609*^9, 3.7231208097076006`*^9, 
   3.7231213716490335`*^9, 3.723153895948447*^9, 3.7231549801833324`*^9, 
   3.7231567794928803`*^9, 3.755330089805427*^9, 3.755349315867255*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"defs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Pi]", ",", "\[Pi]"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Pi]", ",", "0"}], "}"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rot", "@", "defs"}], "\[Equal]", 
  RowBox[{"Rot", "@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", 
       RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.723096691695356*^9, 3.723096696829988*^9}, {
  3.755330093392675*^9, 3.755330094352043*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.723086117250374*^9, 3.723087291907987*^9, 
  3.7230874986988*^9, 3.7230875985081844`*^9, 3.723087902656541*^9, 
  3.723088319626007*^9, 3.7230966975408907`*^9, 3.7230971255491195`*^9, 
  3.7231173294416533`*^9, 3.7231191150241175`*^9, 3.7231192143079586`*^9, 
  3.723120810590706*^9, 3.7231538966995816`*^9, 3.723154980914484*^9, 
  3.7231567802134066`*^9, 3.755330094738336*^9, 3.7553493166645117`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"defs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Pi]", ",", 
         RowBox[{"-", 
          FractionBox["\[Pi]", "2"]}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "\[Phi]"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Pi]", ",", 
         FractionBox["\[Pi]", "2"]}], "}"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rot", "@", "defs"}], "\[Equal]", 
  RowBox[{"Rot", "@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "\[Phi]"}], "}"}]}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.723097130313483*^9, 3.723097135867835*^9}, {
  3.7553300962398853`*^9, 3.755330097391815*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7230861185924015`*^9, 3.7230872925692716`*^9, 
  3.723087499607658*^9, 3.7230875991789036`*^9, 3.723087903558063*^9, 
  3.723088320256713*^9, 3.7230971366188364`*^9, 3.723117330270769*^9, 
  3.723118942115424*^9, 3.723119115694871*^9, 3.7231192150086794`*^9, 
  3.723120811480981*^9, 3.7231538973704987`*^9, 3.7231549815255203`*^9, 
  3.7231567808639708`*^9, 3.755330097766514*^9, 3.755349317261527*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"T", "=."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"defs", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "\[Delta]"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "\[Delta]"}], "}"}]}], "}"}]}], "}"}],
        ",", "T"}], "}"}], "}"}], "/.", 
    RowBox[{"\[Delta]", "\[Rule]", "10"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"-", 
   RowBox[{"Rot", "@", "defs"}]}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.7230863787802057`*^9, 3.723086395668832*^9}, {
   3.72308655595242*^9, 3.7230866178503056`*^9}, {3.7230875197947116`*^9, 
   3.7230875199349127`*^9}, {3.7230971406828256`*^9, 
   3.7230971413142047`*^9}, {3.7231177912459526`*^9, 3.723117826618924*^9}, 
   3.755330099655633*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "10"]}], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
         "T"}]]}], "0", "0"},
     {"0", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "T"}], "10"]]}]}], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "T"}], "10"]]}]}]},
     {"0", 
      RowBox[{
       FractionBox["1", "2"], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "T"}], "10"]]}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "T"}], "10"]]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.723086618621656*^9, 3.7230873001398196`*^9, {3.7230875113326263`*^9, 
   3.7230875207371664`*^9}, 3.7230876000499954`*^9, 3.7230879073489714`*^9, 
   3.7230883229264956`*^9, {3.7230883685271034`*^9, 3.7230883726124363`*^9}, 
   3.72308865969882*^9, 3.723097142074665*^9, 3.7231173354740734`*^9, 
   3.723117792787609*^9, 3.7231178270691524`*^9, 3.72311866136237*^9, 
   3.723118944677724*^9, 3.723119116314846*^9, 3.7231192157484045`*^9, 
   3.7231208122719135`*^9, 3.7231538981809025`*^9, 3.7231542395315347`*^9, 
   3.723154393636159*^9, 3.7231549824560785`*^9, 3.7231567815748873`*^9, 
   3.723156978861744*^9, 3.7553301000499887`*^9, 3.75534931789692*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"Hamiltonian", "[", 
    RowBox[{"defs", "/.", 
     RowBox[{"T", "\[Rule]", "10"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "\[LeftDoubleBracket]", 
   RowBox[{"1", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"EvolutionPlot", "[", 
  RowBox[{"H", ",", 
   TemplateBox[{"2"},
    "Ket"]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7231182552653346`*^9, 3.7231182766299396`*^9}, {
  3.7231183318660545`*^9, 3.723118333263481*^9}, {3.723118542064584*^9, 
  3.7231185768005714`*^9}, {3.7231551136065283`*^9, 3.72315514186292*^9}, {
  3.723156785230767*^9, 3.723156791329385*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"20", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "t"}]], " ", 
       "\[Pi]"}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"20", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "t"}]], " ", 
       "\[Pi]"}]},
     {
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "20"}], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "t"}]],
        " ", "\[Pi]"}], "0", "0"},
     {
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "20"}], " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "t"}]],
        " ", "\[Pi]"}], "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {3, 3}, 0, {
     1, {{0, 2, 3, 4}, {{3}, {2}, {1}, {1}}}, {
      E^(Complex[0, 20] Pi $CellContext`t) Pi, 
       E^(Complex[0, 20] Pi $CellContext`t) Pi, 
       E^(Complex[0, -20] Pi $CellContext`t) Pi, 
       E^(Complex[0, -20] Pi $CellContext`t) Pi}}]]]]], "Output",
 CellChangeTimes->{{3.72311826193278*^9, 3.72311827706085*^9}, {
   3.723118333768512*^9, 3.7231183398037558`*^9}, {3.7231185145945277`*^9, 
   3.7231185774583883`*^9}, 3.723118946910692*^9, 3.7231191175432158`*^9, 
   3.7231192167210827`*^9, 3.7231208136123056`*^9, 3.723153902100495*^9, 
   3.7231542410495996`*^9, 3.7231543952085204`*^9, 3.7231549838175964`*^9, 
   3.723155142302206*^9, 3.723156793142063*^9, 3.723156841915606*^9, 
   3.7231569799788446`*^9, 3.755330102758704*^9, 3.755349320400613*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
2tMnwgz9dETWfMxAKCMQG/vljpwfpSP1xQJJmrrBeH6wTTZrmo7cIDU35G6E
QMIlQJ11iY4kpD9PvmdHRUmOwHlTCj3R45b/FzdK80OL+dY5rPTkup3AICtN
j7twzp1rDT35wHP8yvs6KlxDZ0MubaAnj82D9daKU0Epj4v6sIWevJ/demLT
8RDEcIknrttBT640cj7yHg3CDp2fr2z30JNfdkvbmIsCkBXvlFcoSk9mCq0q
B2V8UbMtvd5Rhp50id4Rux3sCrNLah1f5ejJkmJC7c6jVzCa0j8qoEJPil7O
Hjv1wRoBw9eXXTXpyegljQt83WbgFtvNUalLT8yF+FV399F42qOEb8cFetLa
fzrJP1wFBz9Y7PY2pyeGc6JcRvQS+LhKJ15jTU88l7dqqgzwQF3hkZyIIz3x
PyP+UD3hi2xL2MkzAW70JNOrzmWf+nbYV/8x+uVDT0y1vdPExE9ggcfH7kAw
PVmLzNY1JRoI1+fzol6nJ8gJY7GTOQf+BzlXmyPoyZln5bK3myzwslX3vyOx
9OTT4vsEsV5blNlEv25Nop2HevErt9duMEw/9FHyBT2xLKOUy8R7oXe8ujwi
nZ4o/9G0TNH2g4fk5d9db+mJjmrpIvPHQDD7snfL5NOTrT/lSwvPBSO+IGUi
ppCe3Iyxi/aIoPEuozLdQCk9OZAdaWXtQEW2SjeXXDU9eSS+lNw3RoVCBHXL
3Tp6codrl2gNrX/ra4X2jjbRk0N5KXRjtVRc3FgoqdRGT9ZcVDH+cZiKifMm
Cg97aPG43dsQiRCEPFrSnhqiJwELzQLv+4OgdTjXef8k7XsxF/Gx/xoAwS+u
0Rbz9OTz24ylY7T5nN8xUFPDRCFzZx1i9n5xRZjr8zEWTgp51DmjLt5wBfqM
FmuxjkJu5O0afutlg51xWw978FGIu7st14sMc0zsajqTLkghdKKN+/I9DFCY
E3ulayeFJOSkpxtpqSFSWev2lv0U0m3+nXNZ7hiMGjkydI5QSOW3/b2iuluw
z/bb9xtSFHLp31X6lweTZOfmQ0YKT1LIYtNe822OvCgNl+Wek6eQm5I3/ym0
0nh8y8LBQ6oUklwQNXCxWQUWae80rLQoxHo/W4Jwtx4On3R2eKhPIRzV9Een
i8ywUn0got6IQvb9/CRY52SNKpO+NI6LFCLKVD278NER90efVJ2ype3n2Da+
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
9S4ynrHgwU+p+X//WFjooyBAHm3R/B+pslfV
           "]]}, "\"\[VerticalSeparator]1\[RightAngleBracket]\"", LabelStyle -> 
         "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]1\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
+s4OzstQN4Vg5sPwP9xbqLc=
           "]]}, "\"\[VerticalSeparator]2\[RightAngleBracket]\"", LabelStyle -> 
         "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]2\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
           "]]}, "\"\[VerticalSeparator]3\[RightAngleBracket]\"", LabelStyle -> 
         "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]3\[RightAngleBracket]", 
         "Tooltip"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[VerticalSeparator]1\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]2\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]3\[RightAngleBracket]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.72311826193278*^9, 3.72311827706085*^9}, {
   3.723118333768512*^9, 3.7231183398037558`*^9}, {3.7231185145945277`*^9, 
   3.7231185774583883`*^9}, 3.723118946910692*^9, 3.7231191175432158`*^9, 
   3.7231192167210827`*^9, 3.7231208136123056`*^9, 3.723153902100495*^9, 
   3.7231542410495996`*^9, 3.7231543952085204`*^9, 3.7231549838175964`*^9, 
   3.723155142302206*^9, 3.723156793142063*^9, 3.723156841915606*^9, 
   3.7231569799788446`*^9, 3.755330102758704*^9, 3.755349320786944*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"EffectiveHamiltonian", "@", "H"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "\[LeftDoubleBracket]", 
   RowBox[{"1", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"EvolutionPlot", "[", 
  RowBox[{"H", ",", 
   TemplateBox[{"2"},
    "Ket"], ",", "t", ",", 
   RowBox[{"Method", "\[Rule]", "Constant"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.723088440795698*^9, 3.7230885170478926`*^9}, {
   3.723088641937196*^9, 3.7230887123187146`*^9}, {3.7231185479081135`*^9, 
   3.72311855272316*^9}, {3.7231191023126116`*^9, 3.723119102483369*^9}, {
   3.7231544000444336`*^9, 3.7231544613037653`*^9}, {3.723154550154065*^9, 
   3.7231545507303424`*^9}, {3.7231549951752567`*^9, 3.723154997448439*^9}, 
   3.723155177339247*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["\[Pi]", "10"], "0", "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox["\[Pi]", "20"]}], 
      RowBox[{"-", 
       FractionBox["\[Pi]", "20"]}]},
     {"0", 
      RowBox[{"-", 
       FractionBox["\[Pi]", "20"]}], 
      RowBox[{"-", 
       FractionBox["\[Pi]", "20"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {3, 3}, 0, {
     1, {{0, 1, 3, 5}, {{1}, {2}, {3}, {2}, {3}}}, {
      Rational[1, 10] Pi, Rational[-1, 20] Pi, Rational[-1, 20] Pi, 
       Rational[-1, 20] Pi, Rational[-1, 20] Pi}}]]]]], "Output",
 CellChangeTimes->{{3.7230884482259507`*^9, 3.7230885029356313`*^9}, {
   3.723088635798294*^9, 3.7230887127582655`*^9}, 3.723097147010793*^9, {
   3.723118549700807*^9, 3.7231185531819553`*^9}, 3.723118948821395*^9, {
   3.723119103413575*^9, 3.7231191186775637`*^9}, 3.7231192186228957`*^9, 
   3.723120815494649*^9, 3.72315436201943*^9, {3.7231544060922384`*^9, 
   3.7231544108721943`*^9}, {3.7231544504620204`*^9, 3.723154461814699*^9}, 
   3.723154551080779*^9, 3.723154997708881*^9, 3.7231551794903083`*^9, 
   3.7231567965773168`*^9, 3.723156844488509*^9, 3.723156981583474*^9, 
   3.7553301057144833`*^9, 3.755349322747039*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJxFz2lI0wEYBvDZtGLOcFqmqdt/Ji7nkX4IMvJIg8yLTJcw6djUzfJKcWBq
ZabpEG3V8GQMNQ0RZ8YM7FimpnktdGXRjMQ5RFPQ1tKptQryfV94ePh9e14m
P+tsyg4SiRT9N/9adoO/0z+5Ioj0/wY0RFQCcTl42+ZB1W2CuAaW9VYyrAgx
OD1QlLHGqANrNlOlK4w28C7tLGuZ0QNuHJFnf2MMgxWdYm2672ewMHiibilH
B87Ue+qUigUwhVnC+np0BVxlO8puvGQA87Xxr8hjP8HZb0r4WawNcNdVapzj
6V+4pyBt0S+BFLLtYvlW7I8lCzBJMxPyIp8M9sgV5MWzrcBzxppz1i93giP0
V67fz94NjpmTeNHpFPBiP7/obYc12Jc25Rp20QZMCTbypg17wKeWuWtuHFvw
p75kC643DdxdPnCBMKIFVqIZtdoOnJRT0E2ttwcfFnqpo3h7we/svK1FAfvA
zxXFDd5kB3CBBfvM2Bc0ZTo/PFO5H6xvZUrlhY5g6SEnyx6OE1hSLxjiEQfA
XOl5NXUevX6yxSRXOYN1+tC8vjIXcFOgv/M4zxXcUSqiCX3o4DJOUiTZiD4y
3dhWNs4A13o2dIxHEuCbvZW1kT3oaGdOy4g7E3wicyiRJkbLXfjuY0a0e/+j
6phEN/zPp489qUILDJYTw+yDYH7Xd0J8F51eHLcVcQ8tilN+pD5AlxtFVZJq
tCLAtFkjQ5tem6da29GSSWrlwBC6vjkj9c4wujlXHRY+in7qINkYVaOnufap
mg9ols4pbFaH9lPm0x/q0cdKtaaUeXQUS/Z4YRGdk0bQV1fRhcdvmZ4Y0KU2
s+9zjejazuaK9XV0U5Gl8NkGuj02JbRwC610G3QN+o1WGTxMZjP6DwbEFmI=

           "]]}, "\"\[VerticalSeparator]1\[RightAngleBracket]\"", LabelStyle -> 
         "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]1\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
           "]]}, "\"\[VerticalSeparator]2\[RightAngleBracket]\"", LabelStyle -> 
         "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]2\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
9ZSPOa4QLppUnl9ZwdDMyv8XDv8DNzVfiA==
           "]]}, "\"\[VerticalSeparator]3\[RightAngleBracket]\"", LabelStyle -> 
         "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]3\[RightAngleBracket]", 
         "Tooltip"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[VerticalSeparator]1\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]2\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]3\[RightAngleBracket]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7230884482259507`*^9, 3.7230885029356313`*^9}, {
   3.723088635798294*^9, 3.7230887127582655`*^9}, 3.723097147010793*^9, {
   3.723118549700807*^9, 3.7231185531819553`*^9}, 3.723118948821395*^9, {
   3.723119103413575*^9, 3.7231191186775637`*^9}, 3.7231192186228957`*^9, 
   3.723120815494649*^9, 3.72315436201943*^9, {3.7231544060922384`*^9, 
   3.7231544108721943`*^9}, {3.7231544504620204`*^9, 3.723154461814699*^9}, 
   3.723154551080779*^9, 3.723154997708881*^9, 3.7231551794903083`*^9, 
   3.7231567965773168`*^9, 3.723156844488509*^9, 3.723156981583474*^9, 
   3.7553301057144833`*^9, 3.755349322884746*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Phonon", "Subsection",
 CellChangeTimes->{{3.723085852125312*^9, 3.723085856881262*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{
     SqrtBox[
      RowBox[{"Range", "[", 
       RowBox[{"MDimension", "-", "1"}], "]"}]], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"a", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"a", ".", 
  RowBox[{"UnitVector", "[", 
   RowBox[{"MDimension", ",", "3"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.698479682343495*^9, 3.6984796836924706`*^9}, {
  3.698479751947328*^9, 3.698479757046653*^9}, {3.7230858619752216`*^9, 
  3.7230858719993877`*^9}, {3.723085905628993*^9, 3.7230859191352797`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "1", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", 
      SqrtBox["2"], "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", 
      SqrtBox["3"], "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "2", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", 
      SqrtBox["5"], "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", 
      SqrtBox["6"], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", 
      SqrtBox["7"], "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"2", " ", 
       SqrtBox["2"]}], "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "3"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.723085907471718*^9, 3.7230859196564093`*^9}, 
   3.723119222426036*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   SqrtBox["2"], ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.723085907471718*^9, 3.7230859196564093`*^9}, 
   3.7231192224360285`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"a", "\[ConjugateTranspose]"}], ".", "a"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.698479758114894*^9, 3.6984797860328283`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "1", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "3", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "4", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "5", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "6", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "7", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "8", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "9"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6984797602388315`*^9, 3.698479769195033*^9}, 
   3.7230757290961256`*^9, 3.723085873721796*^9, 3.723085923842469*^9, 
   3.7231192237372446`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cirac CNOT", "Subsection",
 CellChangeTimes->{{3.7222012794303274`*^9, 3.722201290438037*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TrappedIon", "[", 
   RowBox[{
    RowBox[{"{", "1", "}"}], ",", 
    RowBox[{"{", "1", "}"}], ",", 
    RowBox[{"Dimensions", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"g", ",", 
         SubscriptBox["e", "0"], ",", 
         SubscriptBox["e", "1"]}], "}"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "2"}], "]"}]}], "}"}]}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7221948401373196`*^9, 3.722194840651615*^9}, {
  3.7221954058916073`*^9, 3.72219540616219*^9}, {3.722196919386223*^9, 
  3.7221969195463448`*^9}, {3.7221971639601912`*^9, 3.7221971673201213`*^9}, {
  3.722197722304221*^9, 3.72219779104253*^9}, {3.722197924338197*^9, 
  3.722197928714275*^9}, {3.722199423832902*^9, 3.72219942929001*^9}, {
  3.722199878612297*^9, 3.7221998808862705`*^9}, {3.723115250607498*^9, 
  3.723115256757092*^9}, {3.755348703033472*^9, 3.755348704931258*^9}, {
  3.755349331444314*^9, 3.755349342297408*^9}}],

Cell[CellGroupData[{

Cell["Controlled - Z", "Subsubsection",
 CellChangeTimes->{{3.722205564168234*^9, 3.7222055763508883`*^9}, {
  3.7222058207225447`*^9, 3.7222058612141905`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "U", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"U", "[", 
    RowBox[{"k_", ",", "q_"}], "]"}], ":=", 
   RowBox[{"MatrixExp", "[", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "k", " ", 
     FractionBox["\[Pi]", "2"], 
     RowBox[{"Hermitian", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        RowBox[{
         TemplateBox[{RowBox[{
             SubscriptBox["e", "q"], "@", "1"}]},
          "Ket"], ".", 
         TemplateBox[{RowBox[{"g", "@", "1"}]},
          "Bra"]}], ",", "PhononAnnihilation"}], "]"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.722194166422941*^9, 3.7221941775189476`*^9}, {
  3.722194781103264*^9, 3.7221949296528473`*^9}, {3.7221950095177913`*^9, 
  3.722195035472788*^9}, {3.722195090307378*^9, 3.722195204130555*^9}, {
  3.7221953638692746`*^9, 3.722195394416064*^9}, {3.7221958220372024`*^9, 
  3.7221958480561395`*^9}, {3.7221960458645115`*^9, 3.7221961393422203`*^9}, {
  3.722196929801363*^9, 3.7221969728888874`*^9}, {3.7221994119970245`*^9, 
  3.722199502387926*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"U", "[", 
    RowBox[{"1", ",", "0"}], "]"}], ".", 
   TemplateBox[{RowBox[{"g", ",", "0"}]},
    "Ket"]}], "==", 
  TemplateBox[{RowBox[{"g", ",", "0"}]},
   "Ket"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"U", "[", 
    RowBox[{"1", ",", "0"}], "]"}], ".", 
   TemplateBox[{RowBox[{
       SubscriptBox["e", "0"], ",", "0"}]},
    "Ket"]}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", "\[ImaginaryI]"}], 
   TemplateBox[{RowBox[{"g", ",", "1"}]},
    "Ket"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"U", "[", 
    RowBox[{"1", ",", "0"}], "]"}], ".", 
   TemplateBox[{RowBox[{"g", ",", "1"}]},
    "Ket"]}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", "\[ImaginaryI]"}], 
   TemplateBox[{RowBox[{
       SubscriptBox["e", "0"], ",", "0"}]},
    "Ket"]}]}]}], "Input",
 CellChangeTimes->{{3.7221959254674315`*^9, 3.722195929352725*^9}, 
   3.72219597967494*^9, {3.72219602387912*^9, 3.7221960241592956`*^9}, {
   3.7221961494087005`*^9, 3.7221961533644314`*^9}, {3.722196193101564*^9, 
   3.7221962458254385`*^9}, {3.7221962802697706`*^9, 3.722196290989667*^9}, {
   3.7221995360648766`*^9, 3.722199551446571*^9}, {3.722199946069108*^9, 
   3.7222000230622797`*^9}, {3.7222000578568783`*^9, 3.722200059630378*^9}, {
   3.7222002610065603`*^9, 3.7222002613074665`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7221959752439775`*^9, 3.722195980221008*^9}, 
   3.722196024591426*^9, {3.7221961420654926`*^9, 3.722196153665016*^9}, {
   3.7221961978909883`*^9, 3.7221962463265505`*^9}, 3.7221962913739815`*^9, 
   3.722196977275994*^9, {3.7221995466307635`*^9, 3.7221995518465185`*^9}, {
   3.7221999394576564`*^9, 3.722200023533787*^9}, 3.722200261647629*^9, 
   3.7229125609757423`*^9, {3.7231151578896837`*^9, 3.723115181486476*^9}, 
   3.723115262881263*^9, 3.723119230915123*^9, 3.75533011884986*^9, 
   3.755349347693091*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7221959752439775`*^9, 3.722195980221008*^9}, 
   3.722196024591426*^9, {3.7221961420654926`*^9, 3.722196153665016*^9}, {
   3.7221961978909883`*^9, 3.7221962463265505`*^9}, 3.7221962913739815`*^9, 
   3.722196977275994*^9, {3.7221995466307635`*^9, 3.7221995518465185`*^9}, {
   3.7221999394576564`*^9, 3.722200023533787*^9}, 3.722200261647629*^9, 
   3.7229125609757423`*^9, {3.7231151578896837`*^9, 3.723115181486476*^9}, 
   3.723115262881263*^9, 3.723119230915123*^9, 3.75533011884986*^9, 
   3.75534934770265*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7221959752439775`*^9, 3.722195980221008*^9}, 
   3.722196024591426*^9, {3.7221961420654926`*^9, 3.722196153665016*^9}, {
   3.7221961978909883`*^9, 3.7221962463265505`*^9}, 3.7221962913739815`*^9, 
   3.722196977275994*^9, {3.7221995466307635`*^9, 3.7221995518465185`*^9}, {
   3.7221999394576564`*^9, 3.722200023533787*^9}, 3.722200261647629*^9, 
   3.7229125609757423`*^9, {3.7231151578896837`*^9, 3.723115181486476*^9}, 
   3.723115262881263*^9, 3.723119230915123*^9, 3.75533011884986*^9, 
   3.755349347709626*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"U", "[", 
    RowBox[{"2", ",", "1"}], "]"}], ".", 
   TemplateBox[{RowBox[{"g", ",", "0"}]},
    "Ket"]}], "\[Equal]", 
  TemplateBox[{RowBox[{"g", ",", "0"}]},
   "Ket"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"U", "[", 
    RowBox[{"2", ",", "1"}], "]"}], ".", 
   TemplateBox[{RowBox[{
       SubscriptBox["e", "0"], ",", "0"}]},
    "Ket"]}], "==", 
  TemplateBox[{RowBox[{
      SubscriptBox["e", "0"], ",", "0"}]},
   "Ket"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"U", "[", 
    RowBox[{"2", ",", "1"}], "]"}], ".", 
   TemplateBox[{RowBox[{"g", ",", "1"}]},
    "Ket"]}], "\[Equal]", 
  RowBox[{"-", 
   TemplateBox[{RowBox[{"g", ",", "1"}]},
    "Ket"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"U", "[", 
    RowBox[{"2", ",", "1"}], "]"}], ".", 
   TemplateBox[{RowBox[{
       SubscriptBox["e", "0"], ",", "1"}]},
    "Ket"]}], "\[Equal]", 
  TemplateBox[{RowBox[{
      SubscriptBox["e", "0"], ",", "1"}]},
   "Ket"]}]}], "Input",
 CellChangeTimes->{{3.7222001440509977`*^9, 3.7222001780832825`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.722200148487465*^9, 3.7222001567510214`*^9}, 
   3.722200188932425*^9, 3.7231152652335663`*^9, 3.7231192316355176`*^9, 
   3.755330119559197*^9, 3.755349348490888*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.722200148487465*^9, 3.7222001567510214`*^9}, 
   3.722200188932425*^9, 3.7231152652335663`*^9, 3.7231192316355176`*^9, 
   3.755330119559197*^9, 3.7553493485007257`*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.722200148487465*^9, 3.7222001567510214`*^9}, 
   3.722200188932425*^9, 3.7231152652335663`*^9, 3.7231192316355176`*^9, 
   3.755330119559197*^9, 3.755349348507923*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.722200148487465*^9, 3.7222001567510214`*^9}, 
   3.722200188932425*^9, 3.7231152652335663`*^9, 3.7231192316355176`*^9, 
   3.755330119559197*^9, 3.7553493485148687`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
   "DimensionNumber", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
   "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UpdateDimension", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7221948401373196`*^9, 3.722194840651615*^9}, {
  3.7221954058916073`*^9, 3.72219540616219*^9}, {3.722196919386223*^9, 
  3.7221969195463448`*^9}, {3.7221971639601912`*^9, 3.7221971673201213`*^9}, {
  3.722197722304221*^9, 3.72219779104253*^9}, {3.722197924338197*^9, 
  3.722197928714275*^9}, {3.722199423832902*^9, 3.72219942929001*^9}, {
  3.722199878612297*^9, 3.7221998808862705`*^9}, {3.72220042951464*^9, 
  3.722200441979784*^9}, {3.723115274454418*^9, 3.723115275836656*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "U", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"U", "[", "1", "]"}], "[", 
    RowBox[{"k_", ",", "q_"}], "]"}], ":=", 
   RowBox[{"MatrixExp", "[", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "k", " ", 
     FractionBox["\[Pi]", "2"], 
     RowBox[{"Hermitian", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        RowBox[{
         TemplateBox[{RowBox[{
             SubscriptBox["e", "q"], "@", "1"}]},
          "Ket"], ".", 
         TemplateBox[{RowBox[{"g", "@", "1"}]},
          "Bra"]}], ",", "NIdentity", ",", "PhononAnnihilation"}], "]"}], 
      "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"U", "[", "2", "]"}], "[", 
    RowBox[{"k_", ",", "q_"}], "]"}], ":=", 
   RowBox[{"MatrixExp", "[", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "k", " ", 
     FractionBox["\[Pi]", "2"], 
     RowBox[{"Hermitian", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"NIdentity", ",", 
        RowBox[{
         TemplateBox[{RowBox[{
             SubscriptBox["e", "q"], "@", "1"}]},
          "Ket"], ".", 
         TemplateBox[{RowBox[{"g", "@", "1"}]},
          "Bra"]}], ",", "PhononAnnihilation"}], "]"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.722194166422941*^9, 3.7221941775189476`*^9}, {
  3.722194781103264*^9, 3.7221949296528473`*^9}, {3.7221950095177913`*^9, 
  3.722195035472788*^9}, {3.722195090307378*^9, 3.722195204130555*^9}, {
  3.7221953638692746`*^9, 3.722195394416064*^9}, {3.7221958220372024`*^9, 
  3.7221958480561395`*^9}, {3.7221960458645115`*^9, 3.7221961393422203`*^9}, {
  3.722196929801363*^9, 3.7221969728888874`*^9}, {3.7221994119970245`*^9, 
  3.722199502387926*^9}, {3.722200488323085*^9, 3.722200511303466*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"U1", "=", 
   RowBox[{
    RowBox[{"U", "[", "1", "]"}], "[", 
    RowBox[{"1", ",", "0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U1", ".", 
   TemplateBox[{RowBox[{"g", ",", "g", ",", "0"}]},
    "Ket"]}], "==", 
  TemplateBox[{RowBox[{"g", ",", "g", ",", "0"}]},
   "Ket"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U1", ".", 
   TemplateBox[{RowBox[{"g", ",", 
       SubscriptBox["e", "0"], ",", "0"}]},
    "Ket"]}], "==", 
  TemplateBox[{RowBox[{"g", ",", 
      SubscriptBox["e", "0"], ",", "0"}]},
   "Ket"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U1", ".", 
   TemplateBox[{RowBox[{
       SubscriptBox["e", "0"], ",", "g", ",", "0"}]},
    "Ket"]}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", "\[ImaginaryI]"}], 
   TemplateBox[{RowBox[{"g", ",", "g", ",", "1"}]},
    "Ket"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U1", ".", 
   TemplateBox[{RowBox[{
       SubscriptBox["e", "0"], ",", 
       SubscriptBox["e", "0"], ",", "0"}]},
    "Ket"]}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", "\[ImaginaryI]"}], 
   TemplateBox[{RowBox[{"g", ",", 
       SubscriptBox["e", "0"], ",", "1"}]},
    "Ket"]}]}]}], "Input",
 CellChangeTimes->{{3.7222005143554034`*^9, 3.722200579775901*^9}, {
  3.7222010640613947`*^9, 3.7222011113516674`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7222005175591125`*^9, 3.7222005801567397`*^9}, 
   3.7222011117824554`*^9, 3.723115287395906*^9, 3.7231192344474196`*^9, 
   3.7553301241930532`*^9, 3.755349352139402*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7222005175591125`*^9, 3.7222005801567397`*^9}, 
   3.7222011117824554`*^9, 3.723115287395906*^9, 3.7231192344474196`*^9, 
   3.7553301241930532`*^9, 3.755349352148863*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7222005175591125`*^9, 3.7222005801567397`*^9}, 
   3.7222011117824554`*^9, 3.723115287395906*^9, 3.7231192344474196`*^9, 
   3.7553301241930532`*^9, 3.755349352155892*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7222005175591125`*^9, 3.7222005801567397`*^9}, 
   3.7222011117824554`*^9, 3.723115287395906*^9, 3.7231192344474196`*^9, 
   3.7553301241930532`*^9, 3.755349352162854*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"U2", "=", 
   RowBox[{
    RowBox[{"U", "[", "2", "]"}], "[", 
    RowBox[{"2", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"U2", ".", "U1"}], ")"}], ".", 
   TemplateBox[{RowBox[{"g", ",", "g", ",", "0"}]},
    "Ket"]}], "==", 
  TemplateBox[{RowBox[{"g", ",", "g", ",", "0"}]},
   "Ket"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"U2", ".", "U1"}], ")"}], ".", 
   TemplateBox[{RowBox[{"g", ",", 
       SubscriptBox["e", "0"], ",", "0"}]},
    "Ket"]}], "==", 
  TemplateBox[{RowBox[{"g", ",", 
      SubscriptBox["e", "0"], ",", "0"}]},
   "Ket"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"U2", ".", "U1"}], ")"}], ".", 
   TemplateBox[{RowBox[{
       SubscriptBox["e", "0"], ",", "g", ",", "0"}]},
    "Ket"]}], "\[Equal]", 
  RowBox[{"\[ImaginaryI]", 
   TemplateBox[{RowBox[{"g", ",", "g", ",", "1"}]},
    "Ket"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"U2", ".", "U1"}], ")"}], ".", 
   TemplateBox[{RowBox[{
       SubscriptBox["e", "0"], ",", 
       SubscriptBox["e", "0"], ",", "0"}]},
    "Ket"]}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", "\[ImaginaryI]"}], 
   TemplateBox[{RowBox[{"g", ",", 
       SubscriptBox["e", "0"], ",", "1"}]},
    "Ket"]}]}]}], "Input",
 CellChangeTimes->{{3.7222005143554034`*^9, 3.7222006235689087`*^9}, {
  3.7222011203018723`*^9, 3.722201142761326*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7222006074951415`*^9, 3.7222006283959546`*^9}, 
   3.722201143351716*^9, 3.723115292491728*^9, 3.7231192354657583`*^9, 
   3.755330126284501*^9, 3.7553493530189342`*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7222006074951415`*^9, 3.7222006283959546`*^9}, 
   3.722201143351716*^9, 3.723115292491728*^9, 3.7231192354657583`*^9, 
   3.755330126284501*^9, 3.755349353026972*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7222006074951415`*^9, 3.7222006283959546`*^9}, 
   3.722201143351716*^9, 3.723115292491728*^9, 3.7231192354657583`*^9, 
   3.755330126284501*^9, 3.755349353032332*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7222006074951415`*^9, 3.7222006283959546`*^9}, 
   3.722201143351716*^9, 3.723115292491728*^9, 3.7231192354657583`*^9, 
   3.755330126284501*^9, 3.755349353037622*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"U1", ".", "U1"}], ")"}], ".", 
   TemplateBox[{RowBox[{"g", ",", "g", ",", "0"}]},
    "Ket"]}], "==", 
  TemplateBox[{RowBox[{"g", ",", "g", ",", "0"}]},
   "Ket"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"U1", ".", "U1"}], ")"}], ".", 
   TemplateBox[{RowBox[{"g", ",", 
       SubscriptBox["e", "0"], ",", "0"}]},
    "Ket"]}], "==", 
  TemplateBox[{RowBox[{"g", ",", 
      SubscriptBox["e", "0"], ",", "0"}]},
   "Ket"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"U1", ".", "U1"}], ")"}], ".", 
   TemplateBox[{RowBox[{
       SubscriptBox["e", "0"], ",", "g", ",", "0"}]},
    "Ket"]}], "\[Equal]", 
  RowBox[{"-", 
   TemplateBox[{RowBox[{
       SubscriptBox["e", "0"], ",", "g", ",", "0"}]},
    "Ket"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"U1", ".", "U1"}], ")"}], ".", 
   TemplateBox[{RowBox[{
       SubscriptBox["e", "0"], ",", 
       SubscriptBox["e", "0"], ",", "0"}]},
    "Ket"]}], "\[Equal]", 
  RowBox[{"-", 
   TemplateBox[{RowBox[{
       SubscriptBox["e", "0"], ",", 
       SubscriptBox["e", "0"], ",", "0"}]},
    "Ket"]}]}]}], "Input",
 CellChangeTimes->{{3.7222052309159575`*^9, 3.722205238804468*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7222052393552895`*^9, 3.7231152935727577`*^9, 
  3.723119236390029*^9, 3.755349355371256*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7222052393552895`*^9, 3.7231152935727577`*^9, 
  3.723119236390029*^9, 3.7553493553812323`*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7222052393552895`*^9, 3.7231152935727577`*^9, 
  3.723119236390029*^9, 3.755349355388619*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7222052393552895`*^9, 3.7231152935727577`*^9, 
  3.723119236390029*^9, 3.755349355395969*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["4\[Pi] Spinor", "Subsubsection",
 CellChangeTimes->{{3.7222059592117963`*^9, 3.7222059782828035`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"U1", ".", "U2", ".", "U1"}], ")"}], ".", 
   TemplateBox[{RowBox[{"g", ",", "g", ",", "0"}]},
    "Ket"]}], "==", 
  TemplateBox[{RowBox[{"g", ",", "g", ",", "0"}]},
   "Ket"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"U1", ".", "U2", ".", "U1"}], ")"}], ".", 
   TemplateBox[{RowBox[{"g", ",", 
       SubscriptBox["e", "0"], ",", "0"}]},
    "Ket"]}], "==", 
  TemplateBox[{RowBox[{"g", ",", 
      SubscriptBox["e", "0"], ",", "0"}]},
   "Ket"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"U1", ".", "U2", ".", "U1"}], ")"}], ".", 
   TemplateBox[{RowBox[{
       SubscriptBox["e", "0"], ",", "g", ",", "0"}]},
    "Ket"]}], "\[Equal]", 
  TemplateBox[{RowBox[{
      SubscriptBox["e", "0"], ",", "g", ",", "0"}]},
   "Ket"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"U1", ".", "U2", ".", "U1"}], ")"}], ".", 
   TemplateBox[{RowBox[{
       SubscriptBox["e", "0"], ",", 
       SubscriptBox["e", "0"], ",", "0"}]},
    "Ket"]}], "\[Equal]", 
  RowBox[{"-", 
   TemplateBox[{RowBox[{
       SubscriptBox["e", "0"], ",", 
       SubscriptBox["e", "0"], ",", "0"}]},
    "Ket"]}]}]}], "Input",
 CellChangeTimes->{{3.7222005143554034`*^9, 3.722200674921923*^9}, {
  3.722201146276101*^9, 3.7222011655835977`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7222006756532164`*^9, 3.7222011661353455`*^9, 
  3.7231152971162043`*^9, 3.7231192382644835`*^9, 3.755330131902858*^9, 
  3.75534935719064*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7222006756532164`*^9, 3.7222011661353455`*^9, 
  3.7231152971162043`*^9, 3.7231192382644835`*^9, 3.755330131902858*^9, 
  3.755349357200474*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7222006756532164`*^9, 3.7222011661353455`*^9, 
  3.7231152971162043`*^9, 3.7231192382644835`*^9, 3.755330131902858*^9, 
  3.755349357207958*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7222006756532164`*^9, 3.7222011661353455`*^9, 
  3.7231152971162043`*^9, 3.7231192382644835`*^9, 3.755330131902858*^9, 
  3.7553493572152243`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"(", GridBox[{
      {"1", "0", "0", "0"},
      {"0", "1", "0", "0"},
      {"0", "0", "1", "0"},
      {"0", "0", "0", 
       RowBox[{"-", "1"}]}
     }], ")"}], ".", 
   RowBox[{"(", GridBox[{
      {"1"},
      {"0"},
      {"0"},
      {"0"}
     }], ")"}]}], "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", GridBox[{
      {"1", "0", "0", "0"},
      {"0", "1", "0", "0"},
      {"0", "0", "1", "0"},
      {"0", "0", "0", 
       RowBox[{"-", "1"}]}
     }], ")"}], ".", 
   RowBox[{"(", GridBox[{
      {"0"},
      {"1"},
      {"0"},
      {"0"}
     }], ")"}]}], "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", GridBox[{
      {"1", "0", "0", "0"},
      {"0", "1", "0", "0"},
      {"0", "0", "1", "0"},
      {"0", "0", "0", 
       RowBox[{"-", "1"}]}
     }], ")"}], ".", 
   RowBox[{"(", GridBox[{
      {"0"},
      {"0"},
      {"1"},
      {"0"}
     }], ")"}]}], "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", GridBox[{
      {"1", "0", "0", "0"},
      {"0", "1", "0", "0"},
      {"0", "0", "1", "0"},
      {"0", "0", "0", 
       RowBox[{"-", "1"}]}
     }], ")"}], ".", 
   RowBox[{"(", GridBox[{
      {"0"},
      {"0"},
      {"0"},
      {"1"}
     }], ")"}]}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.722205311203154*^9, 3.7222053999070168`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1"},
     {"0"},
     {"0"},
     {"0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7222053786759305`*^9, 3.7222054002873473`*^9}, 
   3.7231152981573057`*^9, 3.7231192393010483`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0"},
     {"1"},
     {"0"},
     {"0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7222053786759305`*^9, 3.7222054002873473`*^9}, 
   3.7231152981573057`*^9, 3.7231192393110504`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0"},
     {"0"},
     {"1"},
     {"0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7222053786759305`*^9, 3.7222054002873473`*^9}, 
   3.7231152981573057`*^9, 3.723119239321044*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0"},
     {"0"},
     {"0"},
     {
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7222053786759305`*^9, 3.7222054002873473`*^9}, 
   3.7231152981573057`*^9, 3.723119239321044*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Controlled - Z  to Controlled - X", "Subsubsection",
 CellChangeTimes->{{3.722205564168234*^9, 3.7222055763508883`*^9}, {
  3.7222058207225447`*^9, 3.7222058338098464`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MatrixExp", "[", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", 
     FractionBox["\[Pi]", "4"], 
     RowBox[{"PauliMatrix", "[", "2", "]"}]}], "]"}], ".", 
   RowBox[{"PauliMatrix", "[", "3", "]"}], ".", 
   RowBox[{"MatrixExp", "[", 
    RowBox[{"\[ImaginaryI]", " ", 
     FractionBox["\[Pi]", "4"], 
     RowBox[{"PauliMatrix", "[", "2", "]"}]}], "]"}]}], "\[Equal]", 
  RowBox[{"PauliMatrix", "[", "1", "]"}]}]], "Input",
 CellChangeTimes->{{3.7222055775412073`*^9, 3.7222056511208825`*^9}, {
  3.7222057801628695`*^9, 3.722205813554695*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7222055884096813`*^9, 3.722205651392878*^9}, {
   3.722205805384635*^9, 3.722205813879386*^9}, 3.723115303092168*^9, 
   3.7231192410837307`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "V", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"V", "[", "1", "]"}], "[", 
    RowBox[{"k_", ",", "\[Phi]_"}], "]"}], ":=", 
   RowBox[{"MatrixExp", "[", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "k", " ", 
     FractionBox["\[Pi]", "2"], 
     RowBox[{"Hermitian", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          TemplateBox[{RowBox[{
              SubscriptBox["e", "0"], "@", "1"}]},
           "Ket"], ".", 
          TemplateBox[{RowBox[{"g", "@", "1"}]},
           "Bra"]}], 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "i"}], " ", "\[Phi]"}]]}], ",", "NIdentity", ",", 
        "MIdentity"}], "]"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"V", "[", "2", "]"}], "[", 
    RowBox[{"k_", ",", "\[Phi]_"}], "]"}], ":=", 
   RowBox[{"MatrixExp", "[", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "k", " ", 
     FractionBox["\[Pi]", "2"], 
     RowBox[{"Hermitian", "[", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"NIdentity", ",", 
        RowBox[{
         RowBox[{
          TemplateBox[{RowBox[{
              SubscriptBox["e", "0"], "@", "1"}]},
           "Ket"], ".", 
          TemplateBox[{RowBox[{"g", "@", "1"}]},
           "Bra"]}], 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]]}], ",", 
        "MIdentity"}], "]"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.722194166422941*^9, 3.7221941775189476`*^9}, {
  3.722194781103264*^9, 3.7221949296528473`*^9}, {3.7221950095177913`*^9, 
  3.722195035472788*^9}, {3.722195090307378*^9, 3.722195204130555*^9}, {
  3.7221953638692746`*^9, 3.722195394416064*^9}, {3.7221958220372024`*^9, 
  3.7221958480561395`*^9}, {3.7221960458645115`*^9, 3.7221961393422203`*^9}, {
  3.722196929801363*^9, 3.7221969728888874`*^9}, {3.7221994119970245`*^9, 
  3.722199502387926*^9}, {3.7222007461073685`*^9, 3.72220080309182*^9}, {
  3.7222008346623325`*^9, 3.722200835503399*^9}, {3.7222009162614117`*^9, 
  3.722200934870654*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"V1", "=", 
   RowBox[{
    RowBox[{"V", "[", "2", "]"}], "[", 
    RowBox[{
     RowBox[{"1", "/", "2"}], ",", 
     RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V2", "=", 
   RowBox[{
    RowBox[{"V", "[", "2", "]"}], "[", 
    RowBox[{
     RowBox[{"1", "/", "2"}], ",", 
     RowBox[{
      RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V1", ".", 
   RowBox[{"(", 
    RowBox[{"U1", ".", "U2", ".", "U1"}], ")"}], ".", "V2", ".", 
   TemplateBox[{RowBox[{"g", ",", "g", ",", "0"}]},
    "Ket"]}], "==", 
  TemplateBox[{RowBox[{"g", ",", "g", ",", "0"}]},
   "Ket"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V1", ".", 
   RowBox[{"(", 
    RowBox[{"U1", ".", "U2", ".", "U1"}], ")"}], ".", "V2", ".", 
   TemplateBox[{RowBox[{"g", ",", 
       SubscriptBox["e", "0"], ",", "0"}]},
    "Ket"]}], "==", 
  TemplateBox[{RowBox[{"g", ",", 
      SubscriptBox["e", "0"], ",", "0"}]},
   "Ket"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V1", ".", 
   RowBox[{"(", 
    RowBox[{"U1", ".", "U2", ".", "U1"}], ")"}], ".", "V2", ".", 
   TemplateBox[{RowBox[{
       SubscriptBox["e", "0"], ",", "g", ",", "0"}]},
    "Ket"]}], "\[Equal]", 
  RowBox[{"-", 
   TemplateBox[{RowBox[{
       SubscriptBox["e", "0"], ",", 
       SubscriptBox["e", "0"], ",", "0"}]},
    "Ket"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V1", ".", 
   RowBox[{"(", 
    RowBox[{"U1", ".", "U2", ".", "U1"}], ")"}], ".", "V2", ".", 
   TemplateBox[{RowBox[{
       SubscriptBox["e", "0"], ",", 
       SubscriptBox["e", "0"], ",", "0"}]},
    "Ket"]}], "\[Equal]", 
  RowBox[{"-", 
   TemplateBox[{RowBox[{
       SubscriptBox["e", "0"], ",", "g", ",", "0"}]},
    "Ket"]}]}]}], "Input",
 CellChangeTimes->{{3.7222008084901876`*^9, 3.7222008847969*^9}, {
  3.722200980934184*^9, 3.7222010009616833`*^9}, {3.7222010375029936`*^9, 
  3.722201051125166*^9}, {3.722201170608821*^9, 3.722201266731707*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7222008287520337`*^9, 3.72220086931642*^9}, 
   3.722200936380189*^9, {3.7222009814714484`*^9, 3.7222010013831263`*^9}, {
   3.722201040589238*^9, 3.7222010522628984`*^9}, {3.722201203434245*^9, 
   3.7222012672226453`*^9}, 3.7231153050222673`*^9, 3.723119242755681*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7222008287520337`*^9, 3.72220086931642*^9}, 
   3.722200936380189*^9, {3.7222009814714484`*^9, 3.7222010013831263`*^9}, {
   3.722201040589238*^9, 3.7222010522628984`*^9}, {3.722201203434245*^9, 
   3.7222012672226453`*^9}, 3.7231153050222673`*^9, 3.7231192427752047`*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7222008287520337`*^9, 3.72220086931642*^9}, 
   3.722200936380189*^9, {3.7222009814714484`*^9, 3.7222010013831263`*^9}, {
   3.722201040589238*^9, 3.7222010522628984`*^9}, {3.722201203434245*^9, 
   3.7222012672226453`*^9}, 3.7231153050222673`*^9, 3.72311924278572*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7222008287520337`*^9, 3.72220086931642*^9}, 
   3.722200936380189*^9, {3.7222009814714484`*^9, 3.7222010013831263`*^9}, {
   3.722201040589238*^9, 3.7222010522628984`*^9}, {3.722201203434245*^9, 
   3.7222012672226453`*^9}, 3.7231153050222673`*^9, 3.723119242805725*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Def", "Subsubsection",
 CellChangeTimes->{{3.722205564168234*^9, 3.7222055763508883`*^9}, {
  3.7222058207225447`*^9, 3.7222058338098464`*^9}, {3.7230185073757896`*^9, 
  3.7230185087046785`*^9}, {3.7230302255209055`*^9, 3.7230302258705606`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TrappedIon", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.722912581967486*^9, 3.722912613981905*^9}, {
   3.7229126621168237`*^9, 3.722912666549165*^9}, 3.722912706819845*^9, {
   3.7230185175980883`*^9, 3.7230185177961483`*^9}, {3.75534936693429*^9, 
   3.755349390110673*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"defs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Pi]", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "3", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", "\[Pi]"}], ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Pi]", ",", "0"}], "}"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"Hamiltonian", "@", "defs"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Evolution", "[", 
     RowBox[{"H", ",", 
      TemplateBox[{RowBox[{"1", ",", "1", ",", "0"}]},
       "Ket"]}], "]"}], "-", 
    TemplateBox[{RowBox[{"1", ",", "1", ",", "0"}]},
     "Ket"]}], ",", "1*^-6"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Evolution", "[", 
     RowBox[{"H", ",", 
      TemplateBox[{RowBox[{"1", ",", "2", ",", "0"}]},
       "Ket"]}], "]"}], "-", 
    TemplateBox[{RowBox[{"1", ",", "2", ",", "0"}]},
     "Ket"]}], ",", "1*^-6"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Evolution", "[", 
     RowBox[{"H", ",", 
      TemplateBox[{RowBox[{"2", ",", "1", ",", "0"}]},
       "Ket"]}], "]"}], "-", 
    TemplateBox[{RowBox[{"2", ",", "1", ",", "0"}]},
     "Ket"]}], ",", "1*^-6"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Evolution", "[", 
     RowBox[{"H", ",", 
      TemplateBox[{RowBox[{"2", ",", "2", ",", "0"}]},
       "Ket"]}], "]"}], "+", 
    TemplateBox[{RowBox[{"2", ",", "2", ",", "0"}]},
     "Ket"]}], ",", "1*^-6"}], "]"}]}], "Input",
 CellChangeTimes->{{3.723018590564683*^9, 3.723018686193699*^9}, {
  3.7230293218702817`*^9, 3.7230293413410025`*^9}, {3.7230293731182337`*^9, 
  3.723029401806842*^9}, {3.723087857247402*^9, 3.723087857767948*^9}, {
  3.723115314592187*^9, 3.7231153215788727`*^9}, {3.723155445717415*^9, 
  3.723155462467202*^9}, {3.755330140706814*^9, 3.755330148617846*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.723018687355919*^9, 3.723018803988312*^9, 3.7230292243852873`*^9, 
   3.723029269136794*^9, 3.7230293419456596`*^9, {3.7230293862537265`*^9, 
   3.723029426864419*^9}, 3.723074753953827*^9, 3.7230806004148254`*^9, {
   3.7230877085908327`*^9, 3.7230877173636284`*^9}, 3.723087831060111*^9, 
   3.7230878623433905`*^9, 3.7230883422615967`*^9, {3.7231153105684233`*^9, 
   3.723115321949195*^9}, 3.7231192457596617`*^9, 3.7231554633787975`*^9, 
   3.755330149611045*^9, 3.755349391443132*^9, 3.755391963769063*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.723018687355919*^9, 3.723018803988312*^9, 3.7230292243852873`*^9, 
   3.723029269136794*^9, 3.7230293419456596`*^9, {3.7230293862537265`*^9, 
   3.723029426864419*^9}, 3.723074753953827*^9, 3.7230806004148254`*^9, {
   3.7230877085908327`*^9, 3.7230877173636284`*^9}, 3.723087831060111*^9, 
   3.7230878623433905`*^9, 3.7230883422615967`*^9, {3.7231153105684233`*^9, 
   3.723115321949195*^9}, 3.7231192457596617`*^9, 3.7231554633787975`*^9, 
   3.755330149611045*^9, 3.755349391443132*^9, 3.755391963780819*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.723018687355919*^9, 3.723018803988312*^9, 3.7230292243852873`*^9, 
   3.723029269136794*^9, 3.7230293419456596`*^9, {3.7230293862537265`*^9, 
   3.723029426864419*^9}, 3.723074753953827*^9, 3.7230806004148254`*^9, {
   3.7230877085908327`*^9, 3.7230877173636284`*^9}, 3.723087831060111*^9, 
   3.7230878623433905`*^9, 3.7230883422615967`*^9, {3.7231153105684233`*^9, 
   3.723115321949195*^9}, 3.7231192457596617`*^9, 3.7231554633787975`*^9, 
   3.755330149611045*^9, 3.755349391443132*^9, 3.7553919637899113`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.723018687355919*^9, 3.723018803988312*^9, 3.7230292243852873`*^9, 
   3.723029269136794*^9, 3.7230293419456596`*^9, {3.7230293862537265`*^9, 
   3.723029426864419*^9}, 3.723074753953827*^9, 3.7230806004148254`*^9, {
   3.7230877085908327`*^9, 3.7230877173636284`*^9}, 3.723087831060111*^9, 
   3.7230878623433905`*^9, 3.7230883422615967`*^9, {3.7231153105684233`*^9, 
   3.723115321949195*^9}, 3.7231192457596617`*^9, 3.7231554633787975`*^9, 
   3.755330149611045*^9, 3.755349391443132*^9, 3.755391963798443*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"defs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Pi]", "/", "2"}], ",", 
         RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Pi]", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "3", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", "\[Pi]"}], ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Pi]", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Pi]", "/", "2"}], ",", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "}"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"Hamiltonian", "@", "defs"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Evolution", "[", 
     RowBox[{"H", ",", 
      TemplateBox[{RowBox[{"1", ",", "1", ",", "0"}]},
       "Ket"]}], "]"}], "-", 
    TemplateBox[{RowBox[{"1", ",", "1", ",", "0"}]},
     "Ket"]}], ",", "1*^-6"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Evolution", "[", 
     RowBox[{"H", ",", 
      TemplateBox[{RowBox[{"1", ",", "2", ",", "0"}]},
       "Ket"]}], "]"}], "-", 
    TemplateBox[{RowBox[{"1", ",", "2", ",", "0"}]},
     "Ket"]}], ",", "1*^-6"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Evolution", "[", 
     RowBox[{"H", ",", 
      TemplateBox[{RowBox[{"2", ",", "1", ",", "0"}]},
       "Ket"]}], "]"}], "-", 
    TemplateBox[{RowBox[{"2", ",", "2", ",", "0"}]},
     "Ket"]}], ",", "1*^-6"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Evolution", "[", 
     RowBox[{"H", ",", 
      TemplateBox[{RowBox[{"2", ",", "2", ",", "0"}]},
       "Ket"]}], "]"}], "-", 
    TemplateBox[{RowBox[{"2", ",", "1", ",", "0"}]},
     "Ket"]}], ",", "1*^-6"}], "]"}]}], "Input",
 CellChangeTimes->{{3.723029461335021*^9, 3.723029465946726*^9}, {
  3.7230878489389343`*^9, 3.7230878494492383`*^9}, {3.7231153275956063`*^9, 
  3.7231153334938936`*^9}, {3.7231554682606616`*^9, 3.7231554835937896`*^9}, {
  3.755330155978635*^9, 3.7553301651999607`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7230294380838814`*^9, 3.723029490228496*^9}, {
   3.7230295933762846`*^9, 3.7230296298490777`*^9}, 3.7230299550507736`*^9, 
   3.7230747585188484`*^9, 3.7230806037278557`*^9, {3.7230878347545776`*^9, 
   3.7230878641145124`*^9}, 3.7230883450555477`*^9, 3.7231153339849157`*^9, 
   3.7231192467910395`*^9, 3.7231554846257186`*^9, 3.7553301679932013`*^9, 
   3.755349392615018*^9, 3.755391967362637*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7230294380838814`*^9, 3.723029490228496*^9}, {
   3.7230295933762846`*^9, 3.7230296298490777`*^9}, 3.7230299550507736`*^9, 
   3.7230747585188484`*^9, 3.7230806037278557`*^9, {3.7230878347545776`*^9, 
   3.7230878641145124`*^9}, 3.7230883450555477`*^9, 3.7231153339849157`*^9, 
   3.7231192467910395`*^9, 3.7231554846257186`*^9, 3.7553301679932013`*^9, 
   3.755349392615018*^9, 3.755391967407031*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7230294380838814`*^9, 3.723029490228496*^9}, {
   3.7230295933762846`*^9, 3.7230296298490777`*^9}, 3.7230299550507736`*^9, 
   3.7230747585188484`*^9, 3.7230806037278557`*^9, {3.7230878347545776`*^9, 
   3.7230878641145124`*^9}, 3.7230883450555477`*^9, 3.7231153339849157`*^9, 
   3.7231192467910395`*^9, 3.7231554846257186`*^9, 3.7553301679932013`*^9, 
   3.755349392615018*^9, 3.7553919674166393`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7230294380838814`*^9, 3.723029490228496*^9}, {
   3.7230295933762846`*^9, 3.7230296298490777`*^9}, 3.7230299550507736`*^9, 
   3.7230747585188484`*^9, 3.7230806037278557`*^9, {3.7230878347545776`*^9, 
   3.7230878641145124`*^9}, 3.7230883450555477`*^9, 3.7231153339849157`*^9, 
   3.7231192467910395`*^9, 3.7231554846257186`*^9, 3.7553301679932013`*^9, 
   3.755349392615018*^9, 3.7553919674788637`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"part", "=", 
   RowBox[{"Part", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Addr", "[", 
       RowBox[{"1", ",", "1", ",", "0"}], "]"}], ",", 
      RowBox[{"Addr", "[", 
       RowBox[{"1", ",", "2", ",", "0"}], "]"}], ",", 
      RowBox[{"Addr", "[", 
       RowBox[{"2", ",", "1", ",", "0"}], "]"}], ",", 
      RowBox[{"Addr", "[", 
       RowBox[{"2", ",", "2", ",", "0"}], "]"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"Hamiltonian", "@", "defs"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"EvolutionPlot", "[", 
  RowBox[{"H", ",", 
   TemplateBox[{RowBox[{"1", ",", "1", ",", "0"}]},
    "Ket"], ",", "t", ",", "part"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"EvolutionPlot", "[", 
  RowBox[{"H", ",", 
   TemplateBox[{RowBox[{"1", ",", "2", ",", "0"}]},
    "Ket"], ",", "t", ",", "part"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"EvolutionPlot", "[", 
  RowBox[{"H", ",", 
   TemplateBox[{RowBox[{"2", ",", "1", ",", "0"}]},
    "Ket"], ",", "t", ",", "part"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"EvolutionPlot", "[", 
  RowBox[{"H", ",", 
   TemplateBox[{RowBox[{"2", ",", "2", ",", "0"}]},
    "Ket"], ",", "t", ",", "part"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7230301480934687`*^9, 3.723030181361313*^9}, {
  3.7230747670127163`*^9, 3.7230747876078596`*^9}, {3.7231153376675334`*^9, 
  3.7231153426433024`*^9}, {3.7231554872692943`*^9, 3.723155505811579*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
FkP+EkFCI4Rf5Trz5+YwFPbQD/7Nz/8H4iHOvw==
           "]]}, "\"\[VerticalSeparator]1,1,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]1,1,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
lbisbG1hSKydg53IKqD0P1dB9JM=
           "]]}, "\"\[VerticalSeparator]1,2,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]1,2,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJxN0HlI03EYBvDfTDeLRmmHKcNjnZPCjcTKspngUTaPYeSBZtrcbx7ppqbW
8gzTnM2DrFCn4pmC2szMZHngXZIt/ygVUimdJaLzmE7nKsj32wsPD58/n9ci
KJLN0cEwjPUnf5sq1pRLTPkXsX/Xok8zi8DdmdvujK+vOIHfAPfS+VwiHgnu
F8ldVrhJ4AHbtNY5rhg8mDvGV3BLwFdkJLdpbgN4iGyzU9e/A+wgduyodu8H
c6zUZAZ5GMyicRYPOo+ApSP3YwfOfgGfN7Rs0E0aB3M38oorvSfAkb0zpxtY
U+BHvsSjmvDv4OC+eyEMfBrtJxl7hvkowAyD5ILZmJ/gwCW7k27hc+AySQ9F
lT0PbnpsOyZnL4Bj3tp5FF9dBLcPVioz/ZRgnvM5Gc97CVxUw2gOC10G5y7J
UqLiVsDTtbF3cMEquNsp71lqqgpMcB+dEievgbFLrwmlCevgDCMVS/5QDY7y
De5SpW2AJ1OsbzGfbIL35z8fzSzTgKv2Wib0FW6hfwnMHI/XacES81KKnRdm
v22ZUI3hw8gWrqTNw9cJ4FcfaVlfR5BFvVt0c38dcH70bGjgOLLwgOkeqs8O
8Aua3mDMBDJxmWDcGaALrqa/TJTMINOCat00EXrgscut0mu/kOXld08xo4ng
tSbPC1QlsvaNoDn9NgnsSndyFK4g9/lb8cKi9cGGwXhbcSxyAF5GHo5DXhXs
k1oLkY9kqNSaB8jJ0nZRTgGyLcmjsbkVOX13po6iDfmTQZeXyTtknGK9ntiF
/JRxyMHlPfKy38Tn0XFk+5vGx8jfkLNC2PHMSWQqv5tS8QPZM72GEzGPXJQ1
2VKygKzIMdklV/63p1BUb6NC/lDag/HWkY2qttiFG8hBdWcqhzTI9Y1RKq0W
+TcRhhwJ
           "]]}, "\"\[VerticalSeparator]2,1,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]2,1,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJxN0HlI03EYBvDfTDeLRmmHKcNjnZPCjcTKspngUTaPYeSBZtrcbx7ppqbW
8gzTnM2DrFCn4pmC2szMZHngXZIt/ygVUimdJaLzmE7nKsj32wsPD58/n9ci
KJLN0cEwjPUnf5sq1pRLTPkXsX/Xok8zi8DdmdvujK+vOIHfAPfS+VwiHgnu
F8ldVrhJ4AHbtNY5rhg8mDvGV3BLwFdkJLdpbgN4iGyzU9e/A+wgduyodu8H
c6zUZAZ5GMyicRYPOo+ApSP3YwfOfgGfN7Rs0E0aB3M38oorvSfAkb0zpxtY
U+BHvsSjmvDv4OC+eyEMfBrtJxl7hvkowAyD5ILZmJ/gwCW7k27hc+AySQ9F
lT0PbnpsOyZnL4Bj3tp5FF9dBLcPVioz/ZRgnvM5Gc97CVxUw2gOC10G5y7J
UqLiVsDTtbF3cMEquNsp71lqqgpMcB+dEievgbFLrwmlCevgDCMVS/5QDY7y
De5SpW2AJ1OsbzGfbIL35z8fzSzTgKv2Wib0FW6hfwnMHI/XacES81KKnRdm
v22ZUI3hw8gWrqTNw9cJ4FcfaVlfR5BFvVt0c38dcH70bGjgOLLwgOkeqs8O
8Aua3mDMBDJxmWDcGaALrqa/TJTMINOCat00EXrgscut0mu/kOXld08xo4ng
tSbPC1QlsvaNoDn9NgnsSndyFK4g9/lb8cKi9cGGwXhbcSxyAF5GHo5DXhXs
k1oLkY9kqNSaB8jJ0nZRTgGyLcmjsbkVOX13po6iDfmTQZeXyTtknGK9ntiF
/JRxyMHlPfKy38Tn0XFk+5vGx8jfkLNC2PHMSWQqv5tS8QPZM72GEzGPXJQ1
2VKygKzIMdklV/63p1BUb6NC/lDag/HWkY2qttiFG8hBdWcqhzTI9Y1RKq0W
+TcRhhwJ
           "]]}, "\"\[VerticalSeparator]2,2,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]2,2,0\[RightAngleBracket]", 
         "Tooltip"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[VerticalSeparator]1,1,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]1,2,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]2,1,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]2,2,0\[RightAngleBracket]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.723030149555186*^9, 3.7230301821068244`*^9}, 
   3.7230747885429745`*^9, 3.723080606090536*^9, {3.7230878369168177`*^9, 
   3.723087865894834*^9}, 3.7230883473875165`*^9, 3.723115343213748*^9, 
   3.7231192478322*^9, 3.7231555066123443`*^9, 3.755330171048073*^9, 
   3.755349395336216*^9, 3.75539197014604*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
lbisbG1hSKydg53IKqD0P1dB9JM=
           "]]}, "\"\[VerticalSeparator]1,1,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]1,1,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
FkP+EkFCI4Rf5Trz5+YwFPbQD/7Nz/8H4iHOvw==
           "]]}, "\"\[VerticalSeparator]1,2,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]1,2,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJxN0HlI03EYBvDfTDeLRmmHKcNjnZPCjcTKspngUTaPYeSBZtrcbx7ppqbW
8gzTnM2DrFCn4pmC2szMZHngXZIt/ygVUimdJaLzmE7nKsj32wsPD58/n9ci
KJLN0cEwjPUnf5sq1pRLTPkXsX/Xok8zi8DdmdvujK+vOIHfAPfS+VwiHgnu
F8ldVrhJ4AHbtNY5rhg8mDvGV3BLwFdkJLdpbgN4iGyzU9e/A+wgduyodu8H
c6zUZAZ5GMyicRYPOo+ApSP3YwfOfgGfN7Rs0E0aB3M38oorvSfAkb0zpxtY
U+BHvsSjmvDv4OC+eyEMfBrtJxl7hvkowAyD5ILZmJ/gwCW7k27hc+AySQ9F
lT0PbnpsOyZnL4Bj3tp5FF9dBLcPVioz/ZRgnvM5Gc97CVxUw2gOC10G5y7J
UqLiVsDTtbF3cMEquNsp71lqqgpMcB+dEievgbFLrwmlCevgDCMVS/5QDY7y
De5SpW2AJ1OsbzGfbIL35z8fzSzTgKv2Wib0FW6hfwnMHI/XacES81KKnRdm
v22ZUI3hw8gWrqTNw9cJ4FcfaVlfR5BFvVt0c38dcH70bGjgOLLwgOkeqs8O
8Aua3mDMBDJxmWDcGaALrqa/TJTMINOCat00EXrgscut0mu/kOXld08xo4ng
tSbPC1QlsvaNoDn9NgnsSndyFK4g9/lb8cKi9cGGwXhbcSxyAF5GHo5DXhXs
k1oLkY9kqNSaB8jJ0nZRTgGyLcmjsbkVOX13po6iDfmTQZeXyTtknGK9ntiF
/JRxyMHlPfKy38Tn0XFk+5vGx8jfkLNC2PHMSWQqv5tS8QPZM72GEzGPXJQ1
2VKygKzIMdklV/63p1BUb6NC/lDag/HWkY2qttiFG8hBdWcqhzTI9Y1RKq0W
+TcRhhwJ
           "]]}, "\"\[VerticalSeparator]2,1,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]2,1,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJxN0HlI03EYBvDfTDeLRmmHKcNjnZPCjcTKspngUTaPYeSBZtrcbx7ppqbW
8gzTnM2DrFCn4pmC2szMZHngXZIt/ygVUimdJaLzmE7nKsj32wsPD58/n9ci
KJLN0cEwjPUnf5sq1pRLTPkXsX/Xok8zi8DdmdvujK+vOIHfAPfS+VwiHgnu
F8ldVrhJ4AHbtNY5rhg8mDvGV3BLwFdkJLdpbgN4iGyzU9e/A+wgduyodu8H
c6zUZAZ5GMyicRYPOo+ApSP3YwfOfgGfN7Rs0E0aB3M38oorvSfAkb0zpxtY
U+BHvsSjmvDv4OC+eyEMfBrtJxl7hvkowAyD5ILZmJ/gwCW7k27hc+AySQ9F
lT0PbnpsOyZnL4Bj3tp5FF9dBLcPVioz/ZRgnvM5Gc97CVxUw2gOC10G5y7J
UqLiVsDTtbF3cMEquNsp71lqqgpMcB+dEievgbFLrwmlCevgDCMVS/5QDY7y
De5SpW2AJ1OsbzGfbIL35z8fzSzTgKv2Wib0FW6hfwnMHI/XacES81KKnRdm
v22ZUI3hw8gWrqTNw9cJ4FcfaVlfR5BFvVt0c38dcH70bGjgOLLwgOkeqs8O
8Aua3mDMBDJxmWDcGaALrqa/TJTMINOCat00EXrgscut0mu/kOXld08xo4ng
tSbPC1QlsvaNoDn9NgnsSndyFK4g9/lb8cKi9cGGwXhbcSxyAF5GHo5DXhXs
k1oLkY9kqNSaB8jJ0nZRTgGyLcmjsbkVOX13po6iDfmTQZeXyTtknGK9ntiF
/JRxyMHlPfKy38Tn0XFk+5vGx8jfkLNC2PHMSWQqv5tS8QPZM72GEzGPXJQ1
2VKygKzIMdklV/63p1BUb6NC/lDag/HWkY2qttiFG8hBdWcqhzTI9Y1RKq0W
+TcRhhwJ
           "]]}, "\"\[VerticalSeparator]2,2,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]2,2,0\[RightAngleBracket]", 
         "Tooltip"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[VerticalSeparator]1,1,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]1,2,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]2,1,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]2,2,0\[RightAngleBracket]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.723030149555186*^9, 3.7230301821068244`*^9}, 
   3.7230747885429745`*^9, 3.723080606090536*^9, {3.7230878369168177`*^9, 
   3.723087865894834*^9}, 3.7230883473875165`*^9, 3.723115343213748*^9, 
   3.7231192478322*^9, 3.7231555066123443`*^9, 3.755330171048073*^9, 
   3.755349395336216*^9, 3.7553919703557043`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJxN0HlI03EYBvDfTDeLRmmHKcNjnZPCjcTKspngUTaPYeSBZtrcbx7ppqbW
8gzTnM2DrFCn4pmC2szMZHngXZIt/ygVUimdJaLzmE7nKsj32wsPD58/n9ci
KJLN0cEwjPUnf5sq1pRLTPkXsX/Xok8zi8DdmdvujK+vOIHfAPfS+VwiHgnu
F8ldVrhJ4AHbtNY5rhg8mDvGV3BLwFdkJLdpbgN4iGyzU9e/A+wgduyodu8H
c6zUZAZ5GMyicRYPOo+ApSP3YwfOfgGfN7Rs0E0aB3M38oorvSfAkb0zpxtY
U+BHvsSjmvDv4OC+eyEMfBrtJxl7hvkowAyD5ILZmJ/gwCW7k27hc+AySQ9F
lT0PbnpsOyZnL4Bj3tp5FF9dBLcPVioz/ZRgnvM5Gc97CVxUw2gOC10G5y7J
UqLiVsDTtbF3cMEquNsp71lqqgpMcB+dEievgbFLrwmlCevgDCMVS/5QDY7y
De5SpW2AJ1OsbzGfbIL35z8fzSzTgKv2Wib0FW6hfwnMHI/XacES81KKnRdm
v22ZUI3hw8gWrqTNw9cJ4FcfaVlfR5BFvVt0c38dcH70bGjgOLLwgOkeqs8O
8Aua3mDMBDJxmWDcGaALrqa/TJTMINOCat00EXrgscut0mu/kOXld08xo4ng
tSbPC1QlsvaNoDn9NgnsSndyFK4g9/lb8cKi9cGGwXhbcSxyAF5GHo5DXhXs
k1oLkY9kqNSaB8jJ0nZRTgGyLcmjsbkVOX13po6iDfmTQZeXyTtknGK9ntiF
/JRxyMHlPfKy38Tn0XFk+5vGx8jfkLNC2PHMSWQqv5tS8QPZM72GEzGPXJQ1
2VKygKzIMdklV/63p1BUb6NC/lDag/HWkY2qttiFG8hBdWcqhzTI9Y1RKq0W
+TcRhhwJ
           "]]}, "\"\[VerticalSeparator]1,1,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]1,1,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJxN0HlI03EYBvDfTDeLRmmHKcNjnZPCjcTKspngUTaPYeSBZtrcbx7ppqbW
8gzTnM2DrFCn4pmC2szMZHngXZIt/ygVUimdJaLzmE7nKsj32wsPD58/n9ci
KJLN0cEwjPUnf5sq1pRLTPkXsX/Xok8zi8DdmdvujK+vOIHfAPfS+VwiHgnu
F8ldVrhJ4AHbtNY5rhg8mDvGV3BLwFdkJLdpbgN4iGyzU9e/A+wgduyodu8H
c6zUZAZ5GMyicRYPOo+ApSP3YwfOfgGfN7Rs0E0aB3M38oorvSfAkb0zpxtY
U+BHvsSjmvDv4OC+eyEMfBrtJxl7hvkowAyD5ILZmJ/gwCW7k27hc+AySQ9F
lT0PbnpsOyZnL4Bj3tp5FF9dBLcPVioz/ZRgnvM5Gc97CVxUw2gOC10G5y7J
UqLiVsDTtbF3cMEquNsp71lqqgpMcB+dEievgbFLrwmlCevgDCMVS/5QDY7y
De5SpW2AJ1OsbzGfbIL35z8fzSzTgKv2Wib0FW6hfwnMHI/XacES81KKnRdm
v22ZUI3hw8gWrqTNw9cJ4FcfaVlfR5BFvVt0c38dcH70bGjgOLLwgOkeqs8O
8Aua3mDMBDJxmWDcGaALrqa/TJTMINOCat00EXrgscut0mu/kOXld08xo4ng
tSbPC1QlsvaNoDn9NgnsSndyFK4g9/lb8cKi9cGGwXhbcSxyAF5GHo5DXhXs
k1oLkY9kqNSaB8jJ0nZRTgGyLcmjsbkVOX13po6iDfmTQZeXyTtknGK9ntiF
/JRxyMHlPfKy38Tn0XFk+5vGx8jfkLNC2PHMSWQqv5tS8QPZM72GEzGPXJQ1
2VKygKzIMdklV/63p1BUb6NC/lDag/HWkY2qttiFG8hBdWcqhzTI9Y1RKq0W
+TcRhhwJ
           "]]}, "\"\[VerticalSeparator]1,2,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]1,2,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJxF2Hk8VN/7AHCjmTFFRSFJKlqQLCWp5DkqQlmylLXFvm+RPSq77ErWEKGE
yi5lD0WWsS93LFliTGRLlt98//j1mT9mXu/XPPecM8995t7z3EOGduomjAwM
DAfob//75Atff5nM6yBjvLZJf9GgmCR4wMZcFcinCpt/013lmpsuYH4bcpnF
r32nO1pyTH97mBmw+Lc4RdFdL+ZgRjS3g4CtOIULdHtybJZsptyDzjbJ+u8b
NHgWJSezFuoCN4J3/VKkO2/nk5oVdw9ITfKpf7NOg4Yn7QqLZt5AcjmvtLhG
g1++LBOurx/CBXyA51G6vWryBJdTHsPde/W34C8NtjFqWDvH+sGRAfV5WKWP
j5Zyf4cGwMLOVCmBPzTg946bc/ANgqbnsqdWlmmQXyEt8cs9BOaKKaN5SzRo
PPe4dMYsHEqu3rDt+k2DN9K7H5zOi4C2ONNrcvM0mOs3fuH0OhJSXUOnEn7R
4AE3aWQ+JRrcXitYMVBpUFuqs+VkYgxoUgS0dkzT16Pz5rBD7FPwaK4k4ado
EBurYkYLjYVEW6zn1RgNhiRTAkWCnkPEVOJfjREaHO6ay7bxjQNJBsfFSYy+
PvanM9PuCXBMguFBUx8NmiL7HSbNXsBJwxeq1t9pEPj8WWO0eAqoD1jGaX+j
gbA56J7KSwGtjwr9wo00cGSK9HB8nQqBc+36odU02JCT+PQr5SV8U3k3JlJA
g1SOQZUI3nTQbGZ6qJdPg8s//DDRxHSQms8B+xwahPh2M9jFZoDek6Xz6uk0
4Kpxv0QNzYSx7z7jK1E0KI/iJz9hzgJzEquCWRgNbhl+MxYOygIVswyGT0E0
SMfx+lv5ZgO11zb6sA8NxFFVw5T7GzD/LbK924oGShVMKuNmeSA2U3WoR4b+
/abhIuevPIg0ZY66JkWDJwdvt/BL50NF0bXmDHEaOBmWOWvW5kNa+DSZeJi+
3nH72kLyO6j+8vOhLxMNRqiDd10XP4DRLDXJrXEWusJCCiPOFsBwpFwxqpqF
JtGzW7O9CmAqO9CeWjIL7x1i8nsJhcAsnrmxnDkLDxeVNs9xFsFRi6JTHb6z
cHC9OHFdsgScZ1YG887OAnuyyS8OjxIYP6Kp2iM6CyTYfVnkcwnEYeHGE0dm
geZjO33rSilIzi1VlbLNwif8kXOVN8tAU2X0ovgkFQxYorofuX6EK1WNJR4R
VGjeLrkVb1AJQT6mWszfZ6D96q7nLZ6VsLvJYoJUMwM9QbNH4xIr4UlL89P5
ohkYI2ReFhmohKxDojHByTOwtr7HR1uvCvwOGJ76bj0DQrN/lnJ0quFS9Tjf
R8IMBLZUjGndqAXKHtbo94LTcDFcrjJTtQG2rZbM/ZCZAh+lgux22wbIfnfB
eVRkCj4R+KPXQxuAX13mTAfvFJzzZDDV+NYADVWj3UEbk3DKopx5U6ERKgep
kjcqJuHwJfGbNy42AdeqNs1HahKIyzyz+NPfgHXsJL75yASYiK5uF9/eCmUG
DD8WhsfgWn9ABhdvK0h07G4obB4DiQCOCwyirQCnlU/Zlo4BHhOz/q7WCuJ2
GifrI8YgLcysySamFWQPTdRywhhgVLL/631tMMXbj+nEj4JOTt4mv1A7cPBp
njK9NgJI+0Is8/l2kEzyMbp1ZgQE8F9Ffl9tB6GkwTfqfCOwojduUG3TDsvh
8XvFVobhGfP+j3fetcPdrL2u1S+H4UHxaw2F6nbwN6l1fRE2DCZGUtOiHfTx
smzL3NyGQaJcg3tzoR2+3pZ7elR1GDosg12TpDoguY+tymSVAmWcXKx+ih0w
LK+Kif2gQFp1Rqa1bgdk72uyWP1OAUfuqq7znh2wznpSJyiDArr1Krb8oR1A
6pkjqUZQQNZxgMCc3AH7GGPKdntQgLVpWaLvcwdMpfwuiVejwIqz37eq1g7A
BG6rGZynAHZot3H2cAfkTJK8DxylQH1zyt+I+Q4gS5y3HGalQK6bSLTrFjJY
moYMbmxi8OzIR6E77GSom1hY+Un3gzbF6itHyPBwUo1SRrepV7eOqCQZ5F7P
RtvSrSxoMsd5hQyv6y3ZiXSvhjiXD94gA99lXt6QDQyyZv380k3JsHnWKW55
HYMb15+pWt0nQ5YTCrhKN77g1d6T/mT4Umc26b+GwXvO4tGVp2RwUzP+lP0X
g9tuX95+zqDP9zByW8EqBiwD3S7+hWQgb7/VkvEHgzKZSVnlOjK0/9Rk9l7B
wDx1hZm9kwyFSvtrYBkDDvzWrr4xMjgkui9PLGJg3yhoaY7vhLHJ9MHZeQx4
hc9JiLJ3wrhScIzyHAZfw5Q2Fvk7YXAgqy2ahsFRTauox5c64ULslqmuaQzI
RR76Shqd0Hrsc0PHFAYP9z45ymbUCXsL3p8tmcBgYCinLPlRJ6AQt/4zoxgE
y1b4mkR1wkZD4O4OCgZS6c0qwmmdUGDKP601hEG0xexIaVUnOOUcCtzViwH6
tpHj00Z31y2ta10YzIrsdLky3AmeBn1tNh0YKC2IMncydIG1070ps2YMGLwd
Tv2CLtj3ZA/P2UoMcocfrhepdsHWBL2J/I8Y6F2O+uJ1uwvyOc4FsZZiULT1
gx6zdxd8EDUwDXiHgXXMwuOjn7ogcENXQDMVA+5lvAq1uQvO3tivxJyEwRcd
Dq6CwS6wVZO79/o5BnwHJHNk17sgi3xmOSUcg95sF7K+dDfEM1WF2Hli4M8S
mMx/rRt48NtyzVwwkLB7bv5Trxu2PzJiU3DEIEKidM3FoxusdxwuqzLDQP7z
6uHoMrqPCN6Lu04//2Qv50apHtCwOC8zcpBeP37GhiOKPdDLUMXetReDZMmr
qn91e6C2F8vP3UXP73MuwRNePUDu22WzA4+Bkf6HgYiqHuhSdjYO+jEE7GOT
l7SVeoEz99hbt5dDsO3pdzEHvV7YLWmnWhk/BAzyRfuDrXsh/87uxJnIIZjJ
fLxcHtYL9i5X7i15D0GdFe+bAx29IFzITGnVHYL7vzV2Tej1we/eF+V5zENg
nX5uc9O6Dw709FG0cUNgqHVohutBHwzVUGonlwZBpXi2TimlDwzwWbsrhgfh
mEeQW+5YH9Qovpw4WzQIPYyfKc42/SBJyqc91R2E87uE8vDeA2ATu6XJMnIA
WnC6jc3hA6Aaz8Ch7jsAd+aCRp+lDMCq2XgKv8sA+LZO7RGsHoDr2ondfvr0
+LBsH2XCIJyV7LmqeJQezyyo/ixkEBz3aG5SCvvBFy+weOz5EKC3TbBZ1wdm
f6OSMrQpcLRbwbk3rwdiVGZq3O5QQIijbebaix6oTJX7qWxOgUsUEd0PYT3A
pbAiueRCAWG031PHpgcaYgxa5WMpkLztSuZ2oR4QFBHYMtlJgWaiKYdwajdM
36kwF9IYhiqdr7bL/l1gVz9xKk95BNKXo7Xe0q8jwbrEI+vWY7DrxJhlxEAz
GH3xMBU3HwcbDTLfnGgtGEsfVVmyGwftUZnmXOZaMH3XerrcZRw6cbyyDyZq
wDzhCEEuYByOiTXraryoAVu77y+1X41DQxhVZmBnDbjv4R/2HhuHhAXz77EL
VRBl1qTXcmcC1GLadJUTP0PMgNOlaPMJgBW+QJLOZ3h6/cBxbfsJsFoO113g
+AzPzzutDntPQOgzfa/bEZ8geSdv3GLyBBStKIeHBVTA62KHLp7BCZC1YnTP
8C6HKqa91610JiHyPJFFPa4Yxl+KKPXenQSpzgPsH28WAwu6fOmK5SS47RQ0
suEsBm1Xu9P8HpNwqJiamhlTBLTJur39iZNg235mT0BMIexvchxRokwCJ0NR
hUbaB3B78u2ekNkUPDJqOnl8Pg+SBUasn9tNQYqE4yu3R3lQW7tsQnSdAvEG
a3mH3XnAus6nPRI4BTadS2y3z+RCpo2bdPzrKfgb312tGJADnSpHCdtmp8Cc
X3b35pVsEGfzeTbl9BNmi6wrmq+/hDJSt8AXz5+w18J7MmYjDS4yiJSn+/6E
6HlFD8acNNCk9WO3Y36CaNGl7+2kNLjffEaw68NP4ApTKdNqSoGPQbTy6vmf
UN0bw5HQl0i/jsurpKz+BL3ZRE5zxURocU2ieDFOA69MxvuI0gTAzK4Szu6a
BsIoy9GVpHhglM9UyROfhgN1MjZnXJ6DAuPt4QT7aThRzH9C2DoG2v4U3nNz
nYb02ck/7HPRoDvHQrzpQ48Psdlr6hINVpQyoV0R07Dnhar05cAoCPvE6RSY
Nw0qeoo/tpRHwJ4iG6JpMX3f05wpeelqBKS8rX1+6fM0LNyVGqaUhsO7RMeK
jZZpMA6b9RTZGgZk9xai8+w0FLTeUlFrCgYDxyNx6kvT4KPRa9SGC4ZxC8/j
YhvTMMRAuSklHQTL2kJq09tnYAtnQejH0gDgPuMfd/fEDPC6H+X41O0Ld35f
EFah78vkdR8xCct6w/ZdDK1kpxm413/b0HLBC8rEqu/pec0At1p++otcT2C3
lS83D5uBLsNj88tn3KFhUkXpcf4M+FbbOScmO4MzE9vs1tIZeHFFVuB7kBPw
He2IjKiagenZqrStnvfA0+hmb1L7DBze6+WW5OwAYkO3zUsWZsAiTYDzh7sV
DK4dYoH1GdA/FutxvNoCgveN5dURqHDzpN/vxD3mMKZtvtzOSYVvlplLLFRj
iHQRStA5QIUnT5dF2WyMQObZjAzlGBV0hle6r/69C8877P2pUlToX6yyHfS9
BXLzJ4WcZKnwxpcjtXhJD+ZZF5tXFalgovjtzC4/Hbim4sZB0qOCqUfOuM6y
JvyxPl8aZkSF5cxVAdV+dXgVsq7PYU2PN5zh7+xXA4bGh+l8XlTYwjTacNFE
Cd5OXFLI9qOCwh5rpwG2K6BLJM6IhlFBgH2+7d3yJWA60hBe9IwKmWziDg2c
slBwKfjUhRdUWHsUuKQ0JA13Da9112RSIeUGMknAScGOhzs8lPKpQM3jHg+O
PQXlL1p520qoIPs5tP4iEgXzT1HVN6uo8EBs9++vkgLAMahpOtRIhRqqxa+K
XXxQ/Zdzm0k7FTwa/HyvZO0FO+7et9N9VJD8mJy2fYkVeM4mXHccpUL9SG9O
+X48NN40WFyZpsLeM0bsu77+lrl//0Cc9wIV9Bbset/y9MnwPx2WJq5Tod1Y
PLlnKUGm9cNLyhPCLLhZCvtEejlIS2UXbFQp/ufU5Dqe5dD/jL+VZNESR/vn
D2Hn+tvVf/2zU9kFtaRrc//8uSljPkhv/p8trpytsND+/c+JWeKFVpYL/xz5
u+KhvcviP4+/dr5v7rj0z7XyUc8fPVr+Z5xq30i4z8o/M8gW4VLc/vxz4J5l
5faA1X+21zWqXn7895+HH0oYw9O1f2aPjusLSl3/51esQm5fEjb+ucrxgNyx
N5v/nHwwheeCJgP6f1d4rjKYt/7nQ1eZ1vhv4v65IGH6bZ/pf5af+X478v5/
tmRQZPF2/8/h7NUl1g/+c1ryRpiRDw5JCIRo/Ip8IFMgcN5E9xEO1Wox/G32
bJOpf+9y/rovDsWUPO2atqXK9EgXsCn441BeID+H8rFNmZ/1vyZkAnFIi2/z
o3L3NlhTO/HpdDAOFRZZMatFs8OOfosY4Sc4xBDVKFuH9sMhk1eW/GE4tJ/k
cfpvKT9I0EYQdwQO9Z3my7R6Jgjybgf2sEXh0Evqh2Nd3GKgvUWfyhSDQ8eC
ZF16v54Cy9DnNRtP6fNdSOQ8N3QGPPd0xi3G4lB4QWHu3HVpCEtls5+Jw6Hx
78HJntEIUo6ryI8m4FBp+K+gdJFL8KEwmKcvCYd6nOesrVfloB6+zLe+wKHD
e5Tqvi8pQE/jlsYvqfR8HC8gNfFfg7VBT+fCDBxStWN2Kgm4DjvMS6/mZOIQ
LWzXg61mGnBofvHQy2wcKmq3z0q4pQXyRLuWiLc4xF65Ie3yTAfCRe4esy6k
j8fx9vTNmLuQVpK0bliMQ7i3tahrzBAKLvZ16JTiUF1Zab+ZrDH03NDwuVKB
Q3qLmGEZrxnwecv18tXhkG7+2v4hCxuQ2Poob+8XHHo98TryA7cdyEd/8mNt
xKFgOPyg1soerDLPnNz4Rs+3VbF/zDlHKPguGNJLxiGfE/OVywfuQwR/VcZq
Fw4FvcLrFsu4gJWLduW+Xhz6pb1P+r6xK30/HbBoMIhDyuwiz6dq3SHcduz2
yA8c4hQV4LHs9QbLag/3LZM4pHi5mvI71gfkOXc/PfwTh7YYszhmyz+EtQrZ
JtNZHLqzjzx+L/cRWG5/ITG9RHd2v55hph/I35VUZfmDQ0dwVVGnbP3hUGGz
xYm/OCQeWMDhIBUAPfpryXabOLRDnkf9eHcgyOXobF1gYkQq0Sah9y48gYNX
2YfWuBjRo7VLfH87I2Et+c3K/n2MKH2aJ9lSMwq65y/uhv2MyKyHy/cxmX5/
jXdQeHiIEV2qiF962xsNf6da3hOEGBE1UTDz6/JT6AoMCthxnhHZR60R1B/F
w5P6DbGDBvTjqcJzz43TADmMi++/zYiMMyQHfYvTYGFfy0nuu4yIMmOtvY/5
Jeg7JEmwmzCi+Muxc3IFL+EEj7QUyYYRSXRLCTzekQEtDm7wy5MRLZ+VnD8y
kgms+xeUKxMZ0b6vxjY8jLlQ+6VfpSKZEQVOhWKKFrng6lijWpbCiGisamk7
23KB8iXqekE6Pf79rYi7aXnwzlFcKyuHEfWLL4UQX+WDeoOtfsRHRqQTJbHh
YvAeou9NWd4ZYESPc+9qs+KKgFve3UFjiBFVPB5XviFdBGlczK7yFEZ0+p3+
dJ9LEbyvEPYTHmNEeY7bSpNpRdDKZP9iZZoRXX0mU08cKYYdiUsdEX8ZEbAe
SCK1l0Jg7ZYLVdxbUOUJxwgYqABPDt6dfDpbkD8W+2pOtgayBQlNTpQtaO/g
YqaJfzMQF3B7q27hUSf2SmwzrwNW8p+Hjd3Bo6PDB9FEbQdM24jiSUZ4JIs/
7dvQ2wGtE/o0FTM8evKKi/3+FjLE9xfXDdjhkepR3bNu9D5epMbGccUHj9Iu
LmIbq2S4EdX7VfQlHvGNlR/acqELFFTtZTUy8Eh8t6Bfo1oXnGdhKr6fiUcL
D/o8fI274KC/RFrFGzxSWCiO7Q7pgp9u4a5XC/CoXJepYra3Cx7clTtiVodH
+B7rwOp73ZAp9u5B8gQemc06uLAl9YAtx9yf4ik8un6kM7ojtwckVsWc26bx
6LyT3DP/Snp/UpNvhf+FR+Efq1s/jfbQ/8/52pYreESM217iJNgLJK+8k5Jb
CSgtj9us/10vmDe+HW8WIqCQYZ8ddYV9IJJLvTshTEC8zJFkC3o/tBB1YpBB
lIBOzKYO/SX3gY/+245TpwjolfagxsTvPnhOy6mMO09ACVes+3vE+qGBIyfe
5BoBfSgydtiZ2Q+Chq9V1m0IyBt/G7jo/VpD0rn8eTsCErik1a4eMQCmvU1s
kw4EdHieRcc9cQDS1abJ7c4E9OXaxkJ4wQAcBGG9LC8CKmUVse4YHQBOnlwz
jVD6/N8a7uXIDELhTZlGhXACkksTZsxVHATN6BYhmUgC8uvXcUzQHITIbTSq
wFMCOt77pvis5SCw/BF12kgkIBW8LtejmEFg7Hrnk51Dj6/OCZX4MQipbBdH
knMJ6E5eef/M7CAg5fZLMfkEFPnxGnvEyiB41c4TvQsISKxLYVssvd9deX8q
VPMjAY1JsjpliA3BbHhh3OZXAooIssSK7w9B6Fe5vwvNBNT2mucoF71/Fmbq
0v/5nYCOGF53MQwYAosHSwc6Owho+nwAvjB2CMasz7x63U9AMpxat9SKh6Bf
sfS91jT9+NjARK35Ibiomq7tTCWggin8vfE/Q/BaM3wjhkZAklcPv9DHYeB+
20SJ/JuAFG541a3sxIDbmW1EfY2ARCNLZmePY/DIfS3AcYOAtA2cObJPYvDT
e+JEFAMRhVI6RRXOYlAaXOHWhici/JAg22l5DLRTLNjUthORqlWUYsMtDCoz
NIvtdhKRzPT49yxjDATegEE4GxH9VOj+ZWOJwUohR3YLBxHhgot6MpwxiP1a
hZR5iShHKZz/azAGG60549YHiUjE7sed7+EYmHbFPnnCR0SPR7HJ4hgMJIdt
er4eJaI3Ip4fTidj0LW0115JlIiezjhJjuZhILOG57QUJyK5GsuvpAIMXuF+
lQedIiKW40Kmu0owuM9Sz9R4hogWWrqi2z5jMMT27u3kWSIimwZzB9RgIL8n
UYMkTUQZqjFhB79gwMHn+OIKIiKhbvKxzWYMPI8ZyJldJKLb1zZkL7dhMCas
MO1/mYhmvxidsiFjUHCG90y9AhE9uWgaYNmHAc+FrYM/lOjjcfFTZAYx8L24
8IigTEQP3+itLWEYaCo3tVy+TkQkcV6bXT8w+Khe6GSsQURsDxdLnCcwOKyd
wu2rRUSLaqNFH6cwWDC8b1qjQ0QRt6RLF6kY6JvfZRnVI6J+An/RBA2DWptr
7xlv0fNF2nOjYg6DaFe+DVlDImobqnDYvYjBqtf29LvG9Pzmck9EL2Fg+HhF
8aEpETX09MwvL2PQFDhKSzGn55dZOAr+YHAyrOVppSURcfXbVFuuYhAfXXqe
Yk1E5fX7H7r9xYAxLn1405aIWi4Mf7Vaw8AyOTzggAMRGb98nCK7jkH7S/cT
cI+I3NSX1lbp3sVQVHrOmYheXTe6EbaBgYb+nJykC70e5tUGSJsYxJQIt4u7
ERGjtnWoJd1kdvNbJzzo+Xvibf6Bbg6Hlz8FvIhIw8fBepTuG81D9w97E9HE
dvnnq/97HivIveXgQyJKvcEdYUDPV7efVvi+x0Rkod035FOFAddIxL49fkSU
zTAbmh5Hr1+Zb5m7AoiIZl/b3+CAQd/SxcqtIUQ0HRh/jZ0PgwEzsbnlKCIK
iA2UrXg0BDy1Vl6/Y4gI477yZkZ3CAwOZm6lPSOiDsq9NN5TQzDUs59vPJ6I
0lgHRENGB4GiyKxBTiOilRGiT+jlQfhxfLwg/z29/lpLdtgwDcDRwEOyOQVE
ZCO3JDWC9YPpmH5zZhE9H6tZTQYl/TCZ2PEjuYyI/POk91pY9MPP7VWcodVE
5E35wNr9tQ9maQmuFu1EFGS3P1suqhdWPlyX5psnovDPO95wHusGFinJlt0L
RFQx/G5bOK4bDn7kvkNYIqLfXDc72Afo96Pa0ceTf+j1kJn+QDGyC+LIzl9z
cUxI169Bz2CtE84txumeZ2NCjxJjG253ksFTcsRVU4wJ9aNuMZWYdogoq98m
f5IJPUAvdYfs2yFd5k3iGQkmlOHoVfFIuR2+yTtVcksxoR1qFritTO2w/yaR
NAxMiKgTD2webfDJRSjWRpUJ6WwV2ypj1gqbJY6F/rZMiE/a6Gx/2jcYIL4P
SbNnQs9aCs8q63+DMs25u58cmdB4/8mv6xzfwOmX3Y6l+0xo33bOMJ7grzB5
zMbMxJsJWfzYRjNwboL2Z2Z7L0cwocD9Ta90tBsgw0nfC/eeCQnm33S30qiF
R9UJGvsLmNAPHveJpxy1cIe1X/BsERPKTxC23t5TA9w5Ol32ZUwoK9HF8odB
DYSN3hClVDOhgciA0cs21eCqfn34UwcT0nw0/XZ/QiVcFZOX81xkQqPbsLFZ
qzJg6OzEOS0zIY72y/h55jIocjP5ZPWH/vs97/+JyCkFvhrfM3rrTOjqvubs
dFoJrGrVCJ4jkFBARzx20qsYXnugHSvsJCQfwh1mUlQAdw62NtE4SeggvsnY
/E4BcNbdDpjgIiGjud+fdjIXwKMd3gzdPCR0Oz2LqGL4AXRTK+YLD5NQFkvI
1DOu97D1y7nuexIkhK355YQq5sEnq6ZoK0kS4kzHcuLe54ITq66akRQJvTa2
37nBQ9/f6bg1qkuTUH3SruCOxRwomSkuF79MQjxL5M7G4tdgvut0Ck2DhBx7
P6qner0C3uJa/QktEgpcST0ev5YBZD3NvdhNEqoVEipb8cwAlHEvqkWPhK5b
PmD8+TAduKTe+741IqGdWUd2vk9Mgy8GohZW90goO2ugfVY4GXYZmZcnOZNQ
BF/iUAkkwS3z1O2tLiQU+sbDkftGIiw57n4v4UlCMbz2+9+ExsPhwOXVdV8S
ynkc5ykuEAv2oWLKYgEkpC0l/Xv85jMoj7J4YRhEQod68PtkQ56CelL/pS+h
JNRW9yJ8ai0afN5/fhLxjITgGs/mKZZI+Fa8MlT9nIRq6rfxSelEwJ4KcfHF
eBI690e2rkcjHHK/vOzUeUHPH9ztI+c8gcGBAF7+LBL60d4z+Kk4AARGKu21
XpPQghALbUeoPzhN/KkOyCGhJE2l0HYLP2CZtzKbyafnx1uNpeLsYzjHpJZf
WEpC5w3S7PJNH4A/SxDjZDkJJQux2q8FekIbW7Um9ycSSrB1YlctcwdzHok/
D6pJKFfryl8OJRcoOGRz9V0tCZ0cvPs1IssZGI69ShqtJ6GxgAb9A5xOECvO
dVHhKwld9tZMfczrACOS12Pcm0lI82XHUoWjHYhIB4/nfCchKxHFxvf11lAv
vxbMRiYht8r6n5aNZrDr2unBS10kpLhgU3bG1QQMrtuK3u8hIfF90dlackaw
oEfp6Bugn6+R7b1CzrcA3d17dDtGQurx+HGvOl0IMVV3hWESevlNfT1S/SZ0
WYU0OYyS0CcF+Xc2PJrA51DLk/6DXr+3uA/u4b8OtvfXbbsmSOi0jcLkseZr
UOYhWUX6SUJsh55/aW++AsSHdrvPz5BQ9L4dRlIKl+C6f5aJzSwJdfPJ51W7
ykBiyHDxi1/0fNdkFrzWPAOTEdzb2udJqHNAzF7ysDhIPNPQxy+SUO9u25uj
LcfAJ+FJruQyCf19l/w4zo0XvqXUMVj8odcb/BpzPMwGe15tqCf8JSFGkb9D
+W4bMoZvzmQ0r5MQk/mJDTe3IZncfPvlzU36eN9++PVVbrnwf80gVyo=
           "]]}, "\"\[VerticalSeparator]2,1,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]2,1,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
a4uM1t5d5Nmg+/8B+LxwgQ==
           "]]}, "\"\[VerticalSeparator]2,2,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]2,2,0\[RightAngleBracket]", 
         "Tooltip"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[VerticalSeparator]1,1,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]1,2,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]2,1,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]2,2,0\[RightAngleBracket]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.723030149555186*^9, 3.7230301821068244`*^9}, 
   3.7230747885429745`*^9, 3.723080606090536*^9, {3.7230878369168177`*^9, 
   3.723087865894834*^9}, 3.7230883473875165`*^9, 3.723115343213748*^9, 
   3.7231192478322*^9, 3.7231555066123443`*^9, 3.755330171048073*^9, 
   3.755349395336216*^9, 3.7553919705605164`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJxN0HlI03EYBvDfTDeLRmmHKcNjnZPCjcTKspngUTaPYeSBZtrcbx7ppqbW
8gzTnM2DrFCn4pmC2szMZHngXZIt/ygVUimdJaLzmE7nKsj32wsPD58/n9ci
KJLN0cEwjPUnf5sq1pRLTPkXsX/Xok8zi8DdmdvujK+vOIHfAPfS+VwiHgnu
F8ldVrhJ4AHbtNY5rhg8mDvGV3BLwFdkJLdpbgN4iGyzU9e/A+wgduyodu8H
c6zUZAZ5GMyicRYPOo+ApSP3YwfOfgGfN7Rs0E0aB3M38oorvSfAkb0zpxtY
U+BHvsSjmvDv4OC+eyEMfBrtJxl7hvkowAyD5ILZmJ/gwCW7k27hc+AySQ9F
lT0PbnpsOyZnL4Bj3tp5FF9dBLcPVioz/ZRgnvM5Gc97CVxUw2gOC10G5y7J
UqLiVsDTtbF3cMEquNsp71lqqgpMcB+dEievgbFLrwmlCevgDCMVS/5QDY7y
De5SpW2AJ1OsbzGfbIL35z8fzSzTgKv2Wib0FW6hfwnMHI/XacES81KKnRdm
v22ZUI3hw8gWrqTNw9cJ4FcfaVlfR5BFvVt0c38dcH70bGjgOLLwgOkeqs8O
8Aua3mDMBDJxmWDcGaALrqa/TJTMINOCat00EXrgscut0mu/kOXld08xo4ng
tSbPC1QlsvaNoDn9NgnsSndyFK4g9/lb8cKi9cGGwXhbcSxyAF5GHo5DXhXs
k1oLkY9kqNSaB8jJ0nZRTgGyLcmjsbkVOX13po6iDfmTQZeXyTtknGK9ntiF
/JRxyMHlPfKy38Tn0XFk+5vGx8jfkLNC2PHMSWQqv5tS8QPZM72GEzGPXJQ1
2VKygKzIMdklV/63p1BUb6NC/lDag/HWkY2qttiFG8hBdWcqhzTI9Y1RKq0W
+TcRhhwJ
           "]]}, "\"\[VerticalSeparator]1,1,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]1,1,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJxN0HlI03EYBvDfTDeLRmmHKcNjnZPCjcTKspngUTaPYeSBZtrcbx7ppqbW
8gzTnM2DrFCn4pmC2szMZHngXZIt/ygVUimdJaLzmE7nKsj32wsPD58/n9ci
KJLN0cEwjPUnf5sq1pRLTPkXsX/Xok8zi8DdmdvujK+vOIHfAPfS+VwiHgnu
F8ldVrhJ4AHbtNY5rhg8mDvGV3BLwFdkJLdpbgN4iGyzU9e/A+wgduyodu8H
c6zUZAZ5GMyicRYPOo+ApSP3YwfOfgGfN7Rs0E0aB3M38oorvSfAkb0zpxtY
U+BHvsSjmvDv4OC+eyEMfBrtJxl7hvkowAyD5ILZmJ/gwCW7k27hc+AySQ9F
lT0PbnpsOyZnL4Bj3tp5FF9dBLcPVioz/ZRgnvM5Gc97CVxUw2gOC10G5y7J
UqLiVsDTtbF3cMEquNsp71lqqgpMcB+dEievgbFLrwmlCevgDCMVS/5QDY7y
De5SpW2AJ1OsbzGfbIL35z8fzSzTgKv2Wib0FW6hfwnMHI/XacES81KKnRdm
v22ZUI3hw8gWrqTNw9cJ4FcfaVlfR5BFvVt0c38dcH70bGjgOLLwgOkeqs8O
8Aua3mDMBDJxmWDcGaALrqa/TJTMINOCat00EXrgscut0mu/kOXld08xo4ng
tSbPC1QlsvaNoDn9NgnsSndyFK4g9/lb8cKi9cGGwXhbcSxyAF5GHo5DXhXs
k1oLkY9kqNSaB8jJ0nZRTgGyLcmjsbkVOX13po6iDfmTQZeXyTtknGK9ntiF
/JRxyMHlPfKy38Tn0XFk+5vGx8jfkLNC2PHMSWQqv5tS8QPZM72GEzGPXJQ1
2VKygKzIMdklV/63p1BUb6NC/lDag/HWkY2qttiFG8hBdWcqhzTI9Y1RKq0W
+TcRhhwJ
           "]]}, "\"\[VerticalSeparator]1,2,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]1,2,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJxF2Hc4lt//AHCPPENKiIZQ0aKyk1Tex0glo6IyMzIeKyM7ojIaNhkRMhIJ
2SNbEZHsfSPZjyey5+/5/vHr8899X6/rvK9zn+u8zzn3/b4PG1rfNKano6M7
SLv8784buJEYy2Mr/Z2dtMFI4bpYQOI/aEVWhfLanI8Lt7ukK50zkk6Q9WBB
ewfJ4/aydKjEiM7OAFN4rb41uNeACb4K25oSyNYwNGM1c/T2PnDj2Crcin8A
q2xTlkLb+CA85JL0ur8TGDLFNwfrn4TMXX7Vy64PgVlWyvnVW1Go82u5smDq
AZXTj+KdbknCH68dY85pj8Fc0bpqrEEa3Ksz+Zfin0KMXv68Fb0cbKdXs3SI
8Abz2trHR+guQzhazPjr7wt+u1bVWfWuAZ9H1Kyt13Nw3hSpC991HbJKL4j/
cX0JR1g72iXjb8I3qadF06aBEPVAknBCTQM+XNj96ExmEAQKuolaOmjDbK9R
nH1aMKg6lI2J1t2FR5yk4bn4UFDd6C6L2jKEmiLNbaIxYTDH8ET006wRbNf8
cMQ24hWA6Z35zTUTiIhQMaX6R0CHwbNWYU0LGJCIfyb4PBLiLykpM6dbwZGO
2VQrryiQXTI2fcFkA1nsr6anXKPBZEWLWPvaDuqDe23HTePg83R56eBVZ3gW
Gf4tVCQeJCjlez+3usApMmiJZcbDt+8hF6PNHoIdMfihXdpbmFwvktAuegSb
l8TL/sQnwrC1AEVp/gm85ehXCeJJghweAuOxiacg/9sbE4pJgqnoZePFX17w
0quTzjoiGTzsvUYcp3xgX7WrHMU/BdIrQrc1yLyEkhC+Nj+m97CHM9xR1MQP
7hp+Nzr1/D1k8IjKegX5QxKOx8fCKxWcXh+vxhYDQQRV1k24foAglxtXD3uH
gGIpUWXUNBPergq+2TgSCSJbhgt7/mTCobtZ56wXI8HvkF4T34UsGNGUeHy5
IQrsDYsd1GuyQKvg3v5jHtEgP2pTk9f2CWpvMd2w2RUHw5R+A+eFHAhve7jL
hJwIHQEv84LO5UJ9cpXF/FQi1AudY0x1zwWF5oTmE7ZJkG0bltWNz4N+8Ypl
D89keLyguCW1Jx9++Bxc/56dAoc2CmI2JArhbqgukd44Hdhjjf9wPCwE+k6T
UVf6j0CC3fKC5YUQ38UZ+PztR6B63p+6e7kIQh3kv90byYAyhqNSFXeKYULu
EKNjWRbo7gjpfOL8GTRWz5/kdcuBxp0SjAy6FaBamDyV6FsELdfYIpvcKqCu
gsRUMFYEXc9njkXFVEC8T4ui2ZViGMGnyAv2VcBqcnbze6YSWN/Y66mhXQme
6ksyT6M+g8DMymK6ZhWYFXL+5moph2dNpSO3btdA309hhjOa1SAbeKkiRbUO
/Ps+GpkyNICnYm5qy/06+E2QEbSVb4AyPF/ohn8dMB+d2/zk1QBSbnQmat9p
7SJaZzrx30HMrIRp68o3sHTL0E/e3ghH5ETu3JatB89gg7FV7h9AWOKaYTjz
Hc4mcoQZ5/4EY6HVnSI7m+GprmoXx4UOUOr1Td7H0wxqHybXQ406QNyX4yKd
UDPEzYax8Pl3AAMmbPnjejOMu54ZtxvogIQA03qrsGbYxero8/NxJ2CUNp+0
Az/BQmu387WGLtBMz9ziE2iB6wX3tMVMewFpXIxgOt8CAy/0VmSDe+EEQ4Pg
32stwBK9n6xV0gvL2qO6VVYtUKWLD4zb1QfhTNyf9T+1QAFZYtC1sA8eFaSp
XalqgZqGa8MVw31gfE9ySqi1BT69kjLYsbMfxEvUOLfmW6DY92patkE/tJq/
cH4j2Qrz75C8ONMAFO/Zx+J9tRVkl78wxJ4ZgISq5BRLrVZgGSqlbNcfADvO
yo7zbq1gp3GCmZI7AFpfVe7z+bfCzln6LANsAGTs+vBMsa2w2H1ItYsRA5b6
JfGe8lbAPC9r1t/FYNnB+3tlcytw+0gJXnqOAXZ4t1HqUCsksCi0VeRg8LUx
fi1ojvb8ICm6iwMYZLgIhjpva4P0dUm9rS0Mwo9+FtBnbwPz0wmuUzQ/+nm1
6vLRNgCLDYMSmk3cOzWFJNrg51IUhzXNyvzGs3sut0GFJXs4gebVlw4l/bfb
YHLpS9zLTQzez3h7J5m0wUrE/gPLGxjcvhGuauHYBrf3/yIp0cyQ+26/qE8b
pCoTzX3XMcjeU/Br+VUbHNCgQ2lrGOi51H4sT24DiWR+v9xVDHb0dTr55LXB
+8lZ1XcrGBRLj8sof2mD49wjfh7LGJDfLjOxt7fBCesUebSEAQcDY0fPSBtk
qG45jy9gYPON35zM0A7Ngdx61DkMeE5JiQuxt0Pj7XUOlVkMGgIUNxf42iFg
crdaGBWDY+oWIU/l2oHbQ8+8cwqDtvyHOopq7SA4zqbYNoHB4/1+x1jvtcPk
xEZx4RgGfQPpxbFP2uH002wdyV8YvJAp9TIOaYe0nYVhrYMYSCY1qpxKaAf1
V1csb9PmP9RsZriosh36fEQYd3djgL5vpnv+bId2u3sdSh0YzAjucro81A5X
NFtv3m/FQHFeiKmdrgNKiOrm5EYM6Dxsxf5AB5zNqYo5V0HL59DjjXzVDpi0
XTb99BkDbfmQWne9DiBL1TGyFmGQz5ijzeTRATn130d9P2FgGTb/9FhZB7D/
ffZe/S0GnEsMKpTGDqijnKtneoNBrSbHvtz+Dujjv/43LRID3oMS6TIbHfCD
mcfpbSAG3alObToXOsHcVZPJxg0Dnx3PYvmUOmF6d8BpshMG4taR5EntTkho
agm6YodBkHjRutPDTtDMJZ+rMsVAoXz1SGhxJ9TSsc9F3aDlv83d4ZtkF7R0
638ePkRbP95GhsNXu4Bt+FtIx34MYiWuqa5pdcG90gbBTDba/Ebu4z/t3gXb
XaonmRkwuKeT0xdU2QWC0mlDz38PAPvIuJyGYjekj1/nd00cgO2vfgjbancD
xx6HhorXA0CnkM/9wrIbjB8u7KUED8B0ytOlkoBu0KkbnFn0GIAvFjwfDrZ2
wz53Zu2fWgPg+FeNbUy7B9YWDc5k0fazZZLU1pZlD0wzP9DSxA2A4a3D0/se
9QBXhor0xGI/qBTMfFGM74EYvgq/0qF+OP7wuUvGSA+cZGfSl8rvhy768kEH
q16ws08yCdfqh/NsApkMHn2gXV930SK4D5pwWt8aA2nnUHHQs5tefaA/+/xX
eHwfOHPLsB9x6gOv5om9/FV9oCnyUtFHhxYfkOqpjO+HGfmp0qvHaPFM/DfD
X/bDYFyc9VBeL3gxnFg4HjkA5zkV07e+9IDpWsibZI1BmEtV6+7O7IIwlelq
F/1BSO2MvK4c1wUVby9NKpMH4bVuTmlOQBfsu7Isseg0CKrhnJimVRfUhek2
K0QMwmKqGCOzQBfwC57YNt4+CBJzxx1Ove2EKf1SsoDaEEwkc9Qv+XSA9dcx
sUzlYWhhepTykXaOvNAiHN2wHAEx9bFfQX2NcK/2oYkIeRRMuRLtZ4VqwOjC
MZVF61EQ/uzKk8lUAyafms+UOI1Ckmht8KOxaiBHH8Vf8h0Fj+kbaWpx1XDf
+keixrtReDd+yq9vVzW47uUb8hgZhTaDU/si5yshxLReu0l/DI4JTPUox5RD
WJ+9XCh5DLL+niQyapbDqxsHT2rYjEEM9/OueY5yiDxvvzrkMQazppIrekFl
ELuLJ2ohdgyEE5cJgb6lkFZg28HVPwZep+0mkj1KoJK4/4aF5jjcv/Xe4mZU
AYwmCip2G4xDzrFCu893CmAHkpe7bD4OVkWFFVZ7CkDD2foM38Nx6HlovZES
lg/U8S/7e2PGwfbdh/u+YXnAXW83rDg4DgqjCjvVE3LAxe/7AwHTCXCbhdyT
c5kQe2LYMtJ6AsYP8R1zfZIJNTVLxgTnCbhToV1juzsTWDZ4NYafTYD8qpmf
3tkMSLFyufA6bQK+Vz6QUPRNh3aVY/jtMxMg55vrsnU5FURYPcMn7CeBRamA
qelGIhSTOk/Uuk1CQqnzmVebCSBLJ1iS5DUJ/e/nv9KnJ4A6tRfTC5uEdR7N
fa2kBHBsPMvfkTMJP1Q0N2/Vx8Pn59SSqrlJME968iK6JwYuPVZQiV+dhGxV
6efkqzHQ5Pxm0J1+Cn7kb/EGF0UDZnoNf45tCoQ5J4OX37wGeoUUlUyRKXDc
a9R81ikSrtDrDUXbTMHvsFGPU5Zh8HMl74GL8xQwrRUqcsyGgtbsDsIdzykg
u14nmziFgsVgsQBb0BT4upn5yj8LgYCyPfbPMqeAnriHn6EkCPbmWxFMCqZg
NirTWe5aEMR/rImUK5+CiZZvBkNFgfApxq50s2kKqr3eLQoyBkCbaxPBYWYK
WkuoxdfrX4Cu3dGom4tTtHPsYuNP3AsYNXM7Kbw5BWkf+MokLzyHJQ2B61M7
p4HZv5vyucgXOM/6RBmcnoZwuTdmZZ1eoP/34ikVy2m4nijgc0rGA3ay0TW3
2U9DVFp1r/m8OxQLVz3Qdp8Gt4GpffEZbsB+X6GEHDAN9WCqs3zWFerGVRSf
Zk3DzQc7GmNiHcCByDrDWDQNnOD28Mdze+A91hocVPm//gpmGd0egNu9O91v
Wqbh0vzFijcOtiA8oEcunJ+GC3ze3r9dLaB//fAO2JiGlaSVXyerzODFgZHM
L3gKXNx7/NabvWQY0SAvteyhQIu//bWdFCMIdhKI1jxIAct3WY9Yre6BdPi0
9OBxCsQ7dx5SWjOAyFYbH4okBYyPWE/2e92FS3OiAvYyFFhqNGUrXNSGOZaF
xtWrFEg5fTaOzVsTlFRcOEjatP50Es9rLanDiuX5ooB7FPjFZOyg2nsT3r3c
0OGwpEAEkzS5vfc60H17nMTrTgFZ6x4xOWNF+DgmdyXVmwLb0cTPPtbLoEUg
TAsFUCBsuo83e0kOiEfrAvPDKWARZ5tft0cGcuVeiF2Mo41P2tvi2sAFMDBU
6qxOocCnnc+/RuMkgfkx80PFLAqUDHmceRkhBiVxzTw/CymQfVv0khwSAnJZ
SNWdSgqUPxC79V3iBHD0q5sMfKPAH9+Uc2VsvFC1tme7cQsFxLQ8pi+/3w/W
nN0fp3oosCtFa2znIgtwnYu+YfeLAl8G726WcDPAtzu6C8tTFMiQjDJia/gr
7eh4MMpjngJmkjJyGVw90nyvhi4QNijwQ8BrV/ditHRzTuKgH34GDGLc2oPd
bS9IpuZuVl79z29jv3At+f9nhrtvzJqiqP+cEyDV23Lzzz/bF1+8/kZp9p/L
65PnnmvP/bPZ5XOlZhp//znmvUiehfn8Pwf/LX1s47Twz6NpDo5ku8V/rlEI
iXzyZOmfcao9w4Gey/9MJ5OPi3dZ+edne5eUW3xX/9lG617V0tO1fx56LG4E
r9b/mT00quf5241/fsci4FIbvfnPlXYHLx3/sPXPsYfiuS6q06H/d6nbKh25
+T8fvkZc57uD++fc6KmPPSb/WWH6h16w4382p7u6w8P1PweyVxVaPvrPCbGb
Afc8cchNxurHn+BH0rknzhtrPcEhY/UBmSa3n9Jfs53O3/DCoZMhfcrT9ynS
XRdyWa/44JDOlmGo8vEt6cmvf8akn+HQtZwafpXO7bB+/XTZmRc4FCDSePd6
KDsw95qFnfLDoWSDW4VfEDccNn5nzheAQ3P1Ft5rRXwgTh1GnEE41GbeymwZ
zg8KLgf3sobgkLT7ErmDUxg0tulQiGE4pJXnWtvdIAbm/pHVm69wKCr8lpPU
wFlw29setRCBQx8+uRyeu3EBAt6y2kxH4ZCfcsGQWyiC+JMqCr+icYg5Lb0z
SVAOcvJecPW8wSHvc/RfLVcvwVeonWuOw6HHj+wFmhevQNe3bd9q3+IQP0+p
az2fEqz3uznkJeNQZxpHSaHvDWAmF11LT8EhskjOd0ZTNTg8t3A4MRWHzh/b
vhV99xYoEKybgj7i0AJvVpJTuCYEChoct8zDIS/7Sbc7YQaQUPhmw7AAh45k
3PLvGDGEXNmeVs0iHGJR/HGaLGMEXbfVPC+X4hBBPriimMcUeD0udfN+wSHO
HUKvBsysQJzxSeb+Whw6qFSwK5fTGhRCy7xZvuHQ66+ZFTUWNmCRclZ08zsO
hTiFN4dJ2UHuD/6X3W04BBzRnMsHHSGIrzJ5tYOW3/CzhQXSTmDhpFFxoBuH
lj7MxzoaOdO+p30XdPtxyJU7lWGyxhUC74/oDf/Gob33z70x7/YA86qHrtvG
cYinh+7IfIQnKOzZ/erIJA69X2EuTFV4DOulMvUmMzgkWPRM1D7jCZjvjBOf
WsSh5vHoHMMUb1AwkFDdsYJDSXPvKGL3feBwXqPZ6TUc+r296YGtpC906azH
Wm/hULjt1/yTnc/gUrom4zyRHn182rH14KIfHLrGPrC+jx7t1X1pvtYeDOux
H5a5D9CjiA9G4+bqIdA5J7sbuGnxOabNT9to79fXtlceH6ZHL+eZLmd0h8La
RFM2XoAebRYK0X1fegUdz577Mp+nR0rlZrY3n7wGv6+bwod06VEb5J+PMkoA
ZDsqwq1Hj2roWPi9CxJg/kCTKKcBPdJjiEo+wJQIOrZvxNmN6VHsbxsZhdxE
OM11QZJkRY9cX/m7P2VOhiZbF/jjRo8eOm7dPDacAizc88oVMfRo6wDdGBd9
BtTU9qqUxtIjU80GLUWzDHC2q1YtjqdHjIyiB1l+ZsBgbciN3CR6xDcdxGKY
kAmf7ERuvU+nR7d+WP0gvMuCm3X3dYI+0yMt3NsrzrrZEPpgwly/jx7Na/p/
YsHlA6eCq63aAG38hvTvb1/Ih4R9TM4Kg/SotNJModcpH7JLT3mfGqFHyj3r
HHHUfGgm2sQtT9EjF3XiceJwATDHLLYGrdGjjq5KPGNLETyr2XaxknMb2r3L
nhH1lYIbB88uXs1tKEg4YX5WphpS+fH19oPbUF579EETn0YgzOP2V95lQD9P
WXtuZbbCclZkwIg+A1odvRg0VtMKU1ZCDKR7DMg85V1bXXcrNI/pUFVMGZCW
kJix47Y2eN1b8KXPmgENcHx56UKr4wWrreyWPRnQ7olV8a1VWt0e0t0glMiA
3nr0PNx2sQOuqNrIqCXT4n9GYN+ud8D5HcQCxxQG5CEa1eFl1AGHfMQTSj8w
ICOGPX87X9LqUpdA52u5DIhu8O1+ancHPDK4dNT0CwOyKHUcq3rQCSnCnx7F
jjGgtGThXtY3XXCfY3alYIIBGbT2LrVmdIH4qrDDzykGNNobuupTQatPqrMs
GP4woPH+uDPlv7po+zlLw3yZAY2cw/M48HcDyT1TVIIRj+R2n//R+6kbyN8+
jjYK4JFIQJnrl7weEMygGIydwqOfXMwy5rR6aD7kdD+dEB5t7rt7bb2tBzx1
PraKieGRdPOeyrG/PRBJTa+IOo9HXAUxV7uFe6GOI/21sRIefRW1H9qV0gv8
hmkqG1Z4ZHB+JnsfrV6reyOVNWeNR6mkPQpqQX1g0l3POm6LR5wrm99dY/og
6fpUW4sDHk1SbpgF5fbBITil/d4dj4alZIZaf/XBHq4MUzV/PPrLozSZLt0P
eXekv10JxKNnAX3OGVf7QT20SUA6GI/EWCQmotX7IXg7lXLiFR7tSsUEpcz7
YceKkP1mDB5tP30u6ElYP9B3fPJMTcejKGoL4czvfnjLKjscm0GLR4y3KDP9
gJRb5MKy8MhMu9I/aLkf3GvmCB65eHQwaLtXBK3eXc4W81f/jEcJB8gzycID
MBOYF7XVgEcvjQa0Ch0HwL/h0tp8Ix6ZOGW/3Uern08RO3Qmf+CRVi3pr6Hv
AJg9WjzY3kqbj6+ennkRAzBiefZdWi8eaRY09VwvGIDeq0XZt6bwiN90dv/t
uQGQVU3ScKDgEcHQ78/oygCkqQduhlHxyJyunksXh4GrnrFi2188kkF35VZ2
YcDpwDp8cx2PDjRst6KexOCJ67qv3SYeHesZDk0VxWDSY+x0CB0BxYnezbhy
DoOiF6UuPxkIiBg8GnhGAQONeDPW6zsJ6Hdudl3dXQwqktULrHcR0Bf8QdVU
IwxOfADdQFYCuvvlmM19cwyW8zhSmzgIKMxNTOOdAwYRDZVImYeATswYJDa8
wGCzOX3U8hABLZh8H/wRiIFJR4SfHy8BqZT3kAvDMJAYsupqOEZAux+/EZOI
xaBjcb+NohABBQ735//KxEB6nWGPuQgB3fAducaYi8E73J+S52IE9O1a7ihb
IQaOO74Sv50lIC91T/aWcgwGWD99HD9HQHfmZaN9qzFQ2BujRrpAQLcfaO86
XIsBB69d3GVEQN4/C95vNWLgdlz3kqksAbH4zlTJ/8Rg5NSVKR95Ampv1s+1
asMg9yzP2a9XCEg0+CHJogcDrouM/b8VCShlQM4A+jHwkp1/glcmICdHX/cl
DAN15fom+RsEpJxxd4btNwafb+bZG6kRUNAHkHIcw+CIRjyn1y0CWsuTkCyd
wGDe0NGkWpOAFAbjpRYpGOiQDXb80iagaLPAs+NUDGqslLLp7xKQfu+LztJZ
DEKdeTdlDAmoWwL+7l7AYNV9Z5KBEQEJciWQwxYxMHy6fPWxCQHFThjbLy9h
UP/sFzWeTEBHlcp2oxUMRAOaXlWYE9B6J4O8xSoGr0OLzg9aElDNjiJ61zUM
6KOShrbuE1C+pqey5ToG5rGBvgdtCajx8DFe2Q0MWhJdT8MDAiJVRD9ao5mN
Lr9IyoGWH3amroBNDNR0Zi9JOBHQyeRVXcYtDMIKT7WIuBAQc8TeXRY0t7GT
755+SEAzcycnc2jmsE2cPOFOQKdSeWZ+0Xy7ccDxiAcBJYf93b/2v/+x/Jzb
Dj0moB7u8i5lpkHo9L4VeOApAT1s1Be5cHAQ9g0HHdjrTUCHrYY0BcQGQUP6
ewqbLwH9mcOL7bs8CD2LshWMLwlIVj7Hde7+IPSZCs8uhRDQO2kfutiyQeCq
sXD/G0bL30ruNZ+WQdA9lMJIDSegiR7x61ajgzDQxc07+pqAtrqdGM8yD8Hg
VSa1tgQCYj/M0J2nOwS/T47mZmUTUJaN6Q6F9SE49uywTHouAWVzb7kwsQyD
yYhOY0o+bf3XBuY28g3DeEzr79hiAlq2y+a4cm0YJndW7vGvIqDjst4nWV8P
www12tmshbb/DFRbuiV+wXLOjQu8cwTkoXFa2dZyBHZISjTtniegtMCnPGc8
RuDQZ059/CIB0fHySs0Fj8CVml9Px1cIqDyzefBOwQhEtTk0ZOCIaKI/4ncj
7jdILURpnWclovbdKR+UXv0GN4lhZ3VhIpLNonq0541CUPHX7QqiRLT9QxzZ
v3YUkqQ/xJwVJyJsUf/M+e5R+K5gX8EpSUQZV6iszuujwH2HQBoCIpK6xLXy
QHYMypwEIqxUaf3NOn/U/T4GW4V2eT73iWhWv6H9Uuc49BGyXybYENFSTbTm
xPg4FKvPGpTZEVEVye2c++o42P+xZl50JCLT/nPBDtwTMH7cytTYg4gmG8Kk
kw0noCXcdL98EBHp4xiZRicmINlexx2XTUT3Zrd9PTw1CU+qotW4c4low5t8
JmJ1EvRZevnP5RNR7qch3RXGKeBM1+ywKSYiYpWc5dMTUxDw67bQYBUR4fyn
fT4YTYHzzRtDZa1EZOP0m3imewquCStcclsgolvBh/sfZU8DXXs7zn6JiOJa
BR4/KpuGfBfjMosVItIcxd6b108Db7XXWe0NIkq5/EmSNDwNq7eq+aXwJBTM
tl3vNgsF0h4i5mV2Emo6EF8jZEYB/UPN9dQ9JPTF4oMR9QEF9nzR8x3bR0LH
TXMdXj+iwBNmD7pOLhJa4FtLzQ6lgNbb0rm8IyRUuUSInvhMAcZaqc4H4iTU
SRc5fo9pBsos6kMtJEhI4ImdSCv7DNizaF2/J0lCxQer5k7xzMCgpsu3mxdI
aFCpMzFOeAYKpwtKRORJqC56WdhTfQbIbGfiqWokNMk384A3cgZ4Cmp0xm6R
kLFLxKBo/Ay0aavvx+6QUMaY7N9T72cAJT8IadKmjfcQuae/YAb2SWZ7fbxH
Qsxas/dEOmagVlfIzOIBCVm1Dt55xUwFtnvkkjcOJGRrSmTb4qDCXfLbnc1O
JPTcwIxZiZsKi3a7s8XdSGiffGdo4EkqHHm2tLrhRUJXYUW1RIEKNv7CysK+
JGRgXP/6ojIVSkLM4gyfk9B3bunyBDUq3HzTK1frT0LlDFEmHPpU8Mwu9wsK
JyF1b6a/r52o8L1geaAqkoQuepY2irpTYW+piMjCaxJiXTDm//iEChm1ie2a
cSQ0tV9P6qo/Ffr7fHn43pNQWKj3B+63VDgxXGFzK42E2Mw0HeqSqWA/tlLl
m06L9/hreyuNCjvmLEyns0ho5qYXxpFDBSni9ay8IhJqsE6KEqqmgs+O5/Tj
JSTUeoeZMPWVCj9Zq9Q5y0jIcnnN4Fk9Fchc4iuPqkjIfS62lfyTCrmHra59
qiGhKKXL/R/aqEB3/N2bX19p/c14lDd3UiFCZJ/slQYS2muXsljeT4VhiRth
ro0kdKPYC70YpILghRej6T9ICB39oSTxiwpfFdZfsLaR0KfXhpFi47R8KJ3p
l+ugPU/0b6PXJBV0b9wXcuwiob7dntkF01SY1x5s7ekjoUaFFceqP1RABvuP
7cRI6G2Kr8rrOSq8NLnpDEMk9OhLTI3aPBU6LF7W2/4iIS5j+Y6ZBSrw2tZw
Jf0moSOSXzwtlqhw33HjfscYCeUZBld+W6ZC8UOJStIkCVm4K4QzrlKB8Nh6
9/lpErof8XFdYI0KN3zeG1vNkNBjyZK50+tUiHk5VBD3h4QI9wId2TaoMB7E
ub1ljoRYwh18umgWD1fTYVggIbMfI4c8N2n5j/bLkFiirVd/D3nGLVr+47/Q
ma2QkGzL7j8PaN77bvNm9BoJ2fBF81bQbPjhbHLjBm19Bkj1UmjOyLJZ2tqi
tafK7t+g+f8AlD12aQ==
           "]]}, "\"\[VerticalSeparator]2,1,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]2,1,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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

           "]]}, "\"\[VerticalSeparator]2,2,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]2,2,0\[RightAngleBracket]", 
         "Tooltip"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[VerticalSeparator]1,1,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]1,2,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]2,1,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]2,2,0\[RightAngleBracket]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.723030149555186*^9, 3.7230301821068244`*^9}, 
   3.7230747885429745`*^9, 3.723080606090536*^9, {3.7230878369168177`*^9, 
   3.723087865894834*^9}, 3.7230883473875165`*^9, 3.723115343213748*^9, 
   3.7231192478322*^9, 3.7231555066123443`*^9, 3.755330171048073*^9, 
   3.755349395336216*^9, 3.7553919708200274`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["MS Gate", "Subsection",
 CellChangeTimes->{{3.722911922999399*^9, 3.7229119270975904`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TrappedIon", "[", 
   RowBox[{
    RowBox[{"{", "2", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.722912581967486*^9, 3.722912613981905*^9}, {
   3.7229126621168237`*^9, 3.722912666549165*^9}, 3.722912706819845*^9, {
   3.7230185175980883`*^9, 3.723018532654464*^9}, {3.723155538154174*^9, 
   3.7231555435574903`*^9}, {3.7231569421408052`*^9, 3.723156952605976*^9}, {
   3.7553494027134047`*^9, 3.755349415651263*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"T", "=."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"defs", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.01", ",", "0", ",", "\[Delta]"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.01", ",", "0", ",", 
           RowBox[{"-", "\[Delta]"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.01", ",", "0", ",", "\[Delta]"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.01", ",", "0", ",", 
           RowBox[{"-", "\[Delta]"}]}], "}"}]}], "}"}], ",", "T"}], "}"}], 
     "}"}], "/.", 
    RowBox[{"\[Delta]", "\[Rule]", "0.1"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.723155569565195*^9, {3.72315685639832*^9, 3.7231568599328847`*^9}, {
   3.755330176560142*^9, 3.75533018782895*^9}, {3.755330500967136*^9, 
   3.7553305127351847`*^9}, {3.7553310032177277`*^9, 3.75533100885953*^9}, {
   3.755391980220697*^9, 3.755391982178898*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Frequency", "[", 
    RowBox[{"n_", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "]"}], ":=", "231.3"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Frequency", "[", 
    RowBox[{"n_", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "1"}], "}"}]}], "]"}], ":=", "234.7"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Strength", "[", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "]"}], "=", 
   RowBox[{"0.5", "/", "30"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Strength", "[", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "1"}], "}"}]}], "]"}], "=", 
   RowBox[{"0.5", "/", "35"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Strength", "[", 
    RowBox[{"2", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "]"}], "=", 
   RowBox[{"0.5", "/", "40"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Strength", "[", 
    RowBox[{"2", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "1"}], "}"}]}], "]"}], "=", 
   RowBox[{"0.5", "/", "45"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.755330284652072*^9, 3.755330408237938*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Wave", "@", "defs"}]], "Input",
 CellChangeTimes->{{3.75533026384265*^9, 3.755330265622992*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "231.4`", ",", "0", ",", "0.6`", ",", "0", ",", "1", ",", "Null"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "234.6`", ",", "0", ",", "0.7000000000000001`", ",", "0", ",", "1", ",", 
     "Null"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "231.4`", ",", "0", ",", "0.8`", ",", "0", ",", "1", ",", "Null"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "234.6`", ",", "0", ",", "0.9`", ",", "0", ",", "1", ",", "Null"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "T", ",", "1", ",", "0", ",", "1", ",", "\<\"[0 1 2 3]\"\>"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7553309400597486`*^9, 3.755330961740292*^9}, 
   3.755331011647732*^9, 3.7553494213206377`*^9, 3.755391991737659*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"Hamiltonian", "[", 
    RowBox[{"defs", "/.", 
     RowBox[{"T", "\[Rule]", "500"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Evolution", "[", 
     RowBox[{"H", ",", 
      TemplateBox[{RowBox[{"1", ",", "1", ",", "0"}]},
       "Ket"]}], "]"}], "+", 
    TemplateBox[{RowBox[{"2", ",", "2", ",", "0"}]},
     "Ket"]}], ",", "1*^-3"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Evolution", "[", 
     RowBox[{"H", ",", 
      TemplateBox[{RowBox[{"1", ",", "2", ",", "0"}]},
       "Ket"]}], "]"}], "+", 
    TemplateBox[{RowBox[{"2", ",", "1", ",", "0"}]},
     "Ket"]}], ",", "1*^-3"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Evolution", "[", 
     RowBox[{"H", ",", 
      TemplateBox[{RowBox[{"2", ",", "1", ",", "0"}]},
       "Ket"]}], "]"}], "+", 
    TemplateBox[{RowBox[{"1", ",", "2", ",", "0"}]},
     "Ket"]}], ",", "1*^-3"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Evolution", "[", 
     RowBox[{"H", ",", 
      TemplateBox[{RowBox[{"2", ",", "2", ",", "0"}]},
       "Ket"]}], "]"}], "+", 
    TemplateBox[{RowBox[{"1", ",", "1", ",", "0"}]},
     "Ket"]}], ",", "1*^-3"}], "]"}]}], "Input",
 CellChangeTimes->{{3.723031745147663*^9, 3.7230317667135434`*^9}, {
  3.723031852192443*^9, 3.7230318836067853`*^9}, {3.723031929058756*^9, 
  3.723031953809595*^9}, {3.7230320051732273`*^9, 3.723032005748581*^9}, {
  3.7231153508496656`*^9, 3.7231153556555605`*^9}, {3.723155410051357*^9, 
  3.7231554296896605`*^9}, {3.723155527159803*^9, 3.7231555812737722`*^9}, {
  3.723156863098302*^9, 3.7231568652159963`*^9}, {3.7553309811119556`*^9, 
  3.755330982019557*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.723031734273387*^9, 3.7230317673909607`*^9}, {
   3.7230318569820757`*^9, 3.7230318841541805`*^9}, {3.723031937690183*^9, 
   3.7230319543564653`*^9}, 3.723032006400135*^9, 3.7230322870363073`*^9, 
   3.723080614621768*^9, {3.723087841781721*^9, 3.723087868969355*^9}, 
   3.7230883311699915`*^9, 3.72308884602066*^9, 3.7231153562765856`*^9, 
   3.7231192528357863`*^9, 3.7231553796969156`*^9, 3.7231554302609158`*^9, 
   3.7231555113677397`*^9, 3.723155548448149*^9, 3.7231555834272985`*^9, 
   3.723156177939559*^9, 3.7231568675053377`*^9, {3.723156945495688*^9, 
   3.723156954628773*^9}, 3.7553288394937162`*^9, 3.755329014164255*^9, 
   3.75533019061471*^9, {3.75533098923575*^9, 3.75533101348617*^9}, 
   3.75534942496288*^9, 3.755391993117543*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.723031734273387*^9, 3.7230317673909607`*^9}, {
   3.7230318569820757`*^9, 3.7230318841541805`*^9}, {3.723031937690183*^9, 
   3.7230319543564653`*^9}, 3.723032006400135*^9, 3.7230322870363073`*^9, 
   3.723080614621768*^9, {3.723087841781721*^9, 3.723087868969355*^9}, 
   3.7230883311699915`*^9, 3.72308884602066*^9, 3.7231153562765856`*^9, 
   3.7231192528357863`*^9, 3.7231553796969156`*^9, 3.7231554302609158`*^9, 
   3.7231555113677397`*^9, 3.723155548448149*^9, 3.7231555834272985`*^9, 
   3.723156177939559*^9, 3.7231568675053377`*^9, {3.723156945495688*^9, 
   3.723156954628773*^9}, 3.7553288394937162`*^9, 3.755329014164255*^9, 
   3.75533019061471*^9, {3.75533098923575*^9, 3.75533101348617*^9}, 
   3.75534942496288*^9, 3.7553919933268843`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.723031734273387*^9, 3.7230317673909607`*^9}, {
   3.7230318569820757`*^9, 3.7230318841541805`*^9}, {3.723031937690183*^9, 
   3.7230319543564653`*^9}, 3.723032006400135*^9, 3.7230322870363073`*^9, 
   3.723080614621768*^9, {3.723087841781721*^9, 3.723087868969355*^9}, 
   3.7230883311699915`*^9, 3.72308884602066*^9, 3.7231153562765856`*^9, 
   3.7231192528357863`*^9, 3.7231553796969156`*^9, 3.7231554302609158`*^9, 
   3.7231555113677397`*^9, 3.723155548448149*^9, 3.7231555834272985`*^9, 
   3.723156177939559*^9, 3.7231568675053377`*^9, {3.723156945495688*^9, 
   3.723156954628773*^9}, 3.7553288394937162`*^9, 3.755329014164255*^9, 
   3.75533019061471*^9, {3.75533098923575*^9, 3.75533101348617*^9}, 
   3.75534942496288*^9, 3.755391993584847*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.723031734273387*^9, 3.7230317673909607`*^9}, {
   3.7230318569820757`*^9, 3.7230318841541805`*^9}, {3.723031937690183*^9, 
   3.7230319543564653`*^9}, 3.723032006400135*^9, 3.7230322870363073`*^9, 
   3.723080614621768*^9, {3.723087841781721*^9, 3.723087868969355*^9}, 
   3.7230883311699915`*^9, 3.72308884602066*^9, 3.7231153562765856`*^9, 
   3.7231192528357863`*^9, 3.7231553796969156`*^9, 3.7231554302609158`*^9, 
   3.7231555113677397`*^9, 3.723155548448149*^9, 3.7231555834272985`*^9, 
   3.723156177939559*^9, 3.7231568675053377`*^9, {3.723156945495688*^9, 
   3.723156954628773*^9}, 3.7553288394937162`*^9, 3.755329014164255*^9, 
   3.75533019061471*^9, {3.75533098923575*^9, 3.75533101348617*^9}, 
   3.75534942496288*^9, 3.755391993795589*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"Hamiltonian", "[", 
    RowBox[{"defs", "/.", 
     RowBox[{"T", "\[Rule]", "1000"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "\[LeftDoubleBracket]", 
   RowBox[{"1", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"part", "=", 
   RowBox[{"Part", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Addr", "[", 
       RowBox[{"1", ",", "1", ",", "0"}], "]"}], ",", 
      RowBox[{"Addr", "[", 
       RowBox[{"1", ",", "2", ",", "0"}], "]"}], ",", 
      RowBox[{"Addr", "[", 
       RowBox[{"2", ",", "1", ",", "0"}], "]"}], ",", 
      RowBox[{"Addr", "[", 
       RowBox[{"2", ",", "2", ",", "0"}], "]"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"EvolutionPlot", "[", 
  RowBox[{"H", ",", 
   TemplateBox[{RowBox[{"1", ",", "1", ",", "0"}]},
    "Ket"], ",", "t", ",", "part"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"EvolutionPlot", "[", 
  RowBox[{"H", ",", 
   TemplateBox[{RowBox[{"1", ",", "2", ",", "0"}]},
    "Ket"], ",", "t", ",", "part"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"EvolutionPlot", "[", 
  RowBox[{"H", ",", 
   TemplateBox[{RowBox[{"2", ",", "1", ",", "0"}]},
    "Ket"], ",", "t", ",", "part"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"EvolutionPlot", "[", 
  RowBox[{"H", ",", 
   TemplateBox[{RowBox[{"2", ",", "2", ",", "0"}]},
    "Ket"], ",", "t", ",", "part"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7230303173678503`*^9, 3.7230303243643513`*^9}, {
   3.7230303614204807`*^9, 3.7230303986579323`*^9}, {3.723030471501274*^9, 
   3.7230304919274826`*^9}, {3.723030555594061*^9, 3.7230305625596576`*^9}, {
   3.7230306377013474`*^9, 3.723030643527264*^9}, {3.7230306863977156`*^9, 
   3.72303068948077*^9}, {3.723030758699414*^9, 3.723030795413401*^9}, {
   3.7230308512237453`*^9, 3.7230309494222517`*^9}, {3.7230309800116453`*^9, 
   3.723030989279727*^9}, 3.723031024252885*^9, {3.723031056261482*^9, 
   3.723031091643697*^9}, {3.7230311250815873`*^9, 3.7230311271230764`*^9}, 
   3.7230311794846983`*^9, {3.72303153056734*^9, 3.723031621790435*^9}, {
   3.7230316554577065`*^9, 3.723031655832778*^9}, {3.7230317241194267`*^9, 
   3.7230317268372307`*^9}, {3.7230317815976505`*^9, 3.723031782420367*^9}, {
   3.7230319001209836`*^9, 3.723031900832448*^9}, {3.7230743585000396`*^9, 
   3.723074389372169*^9}, 3.7230744551449814`*^9, {3.723074551370192*^9, 
   3.7230745622317085`*^9}, {3.7230746023015757`*^9, 3.723074715508398*^9}, {
   3.723115360540688*^9, 3.7231153653765864`*^9}, {3.723155390598377*^9, 
   3.723155405155443*^9}, {3.7231555523321886`*^9, 3.723155557117605*^9}, {
   3.723155588811962*^9, 3.723155597203271*^9}, {3.7231556350963936`*^9, 
   3.723155640611993*^9}, {3.7231568714505224`*^9, 3.723156873382931*^9}, {
   3.7553310173229218`*^9, 3.755331017530025*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", 
      RowBox[{"0.031415926535897934`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", "0", "0", 
      RowBox[{"0.031415926535897934`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", 
      RowBox[{"0.031415926535897934`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", 
      RowBox[{"0.04442882938158367`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", 
      RowBox[{"0.031415926535897934`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", 
      RowBox[{"0.04442882938158367`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", 
      RowBox[{"0.04442882938158367`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", 
      RowBox[{"0.05441398092702653`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", 
      RowBox[{"0.04442882938158367`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", 
      RowBox[{"0.05441398092702653`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", 
      RowBox[{"0.05441398092702653`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", "0", "0", 
      RowBox[{"0.05441398092702653`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", "0", "0", "0", "0"},
     {"0", 
      RowBox[{"0.031415926535897934`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"0.031415926535897934`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", "0"},
     {
      RowBox[{"0.031415926535897934`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", 
      RowBox[{"0.04442882938158367`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"0.031415926535897934`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", 
      RowBox[{"0.04442882938158367`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0"},
     {"0", 
      RowBox[{"0.04442882938158367`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", 
      RowBox[{"0.05441398092702653`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"0.04442882938158367`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", 
      RowBox[{"0.05441398092702653`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}]},
     {"0", "0", 
      RowBox[{"0.05441398092702653`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"0.05441398092702653`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0"},
     {"0", 
      RowBox[{"0.031415926535897934`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"0.031415926535897934`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", "0"},
     {
      RowBox[{"0.031415926535897934`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", 
      RowBox[{"0.04442882938158367`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"0.031415926535897934`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", 
      RowBox[{"0.04442882938158367`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0"},
     {"0", 
      RowBox[{"0.04442882938158367`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", 
      RowBox[{"0.05441398092702653`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"0.04442882938158367`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", 
      RowBox[{"0.05441398092702653`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}]},
     {"0", "0", 
      RowBox[{"0.05441398092702653`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"0.05441398092702653`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0"},
     {"0", "0", "0", "0", "0", 
      RowBox[{"0.031415926535897934`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", "0", "0", 
      RowBox[{"0.031415926535897934`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", 
      RowBox[{"0.031415926535897934`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", 
      RowBox[{"0.04442882938158367`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", 
      RowBox[{"0.031415926535897934`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", 
      RowBox[{"0.04442882938158367`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", 
      RowBox[{"0.04442882938158367`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", 
      RowBox[{"0.05441398092702653`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", 
      RowBox[{"0.04442882938158367`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", 
      RowBox[{"0.05441398092702653`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", 
      RowBox[{"0.05441398092702653`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", "0", "0", 
      RowBox[{"0.05441398092702653`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.6283185307179586`", " ", "\[ImaginaryI]"}]}], ")"}], 
         " ", "t"}]]}], "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {16, 16}, 0, {
     1, {{0, 2, 6, 10, 12, 14, 18, 22, 24, 26, 30, 34, 36, 38, 42, 46, 48}, {{
       6}, {10}, {9}, {5}, {7}, {11}, {10}, {6}, {8}, {12}, {11}, {7}, {2}, {
       14}, {13}, {3}, {1}, {15}, {14}, {4}, {2}, {16}, {15}, {3}, {2}, {
       14}, {3}, {13}, {15}, {1}, {4}, {14}, {16}, {2}, {15}, {3}, {6}, {
       10}, {7}, {11}, {9}, {5}, {8}, {12}, {10}, {6}, {11}, {7}}}, {
      0.031415926535897934` 
       E^(Complex[0., -0.6283185307179586] $CellContext`t), 
       0.031415926535897934` 
       E^(Complex[0., -0.6283185307179586] $CellContext`t), 
       0.031415926535897934` 
       E^(Complex[0., 0.6283185307179586] $CellContext`t), 
       0.031415926535897934` 
       E^(Complex[0., 0.6283185307179586] $CellContext`t), 
       0.04442882938158367 
       E^(Complex[0., -0.6283185307179586] $CellContext`t), 
       0.04442882938158367 
       E^(Complex[0., -0.6283185307179586] $CellContext`t), 
       0.04442882938158367 E^(Complex[0., 0.6283185307179586] $CellContext`t),
        0.04442882938158367 
       E^(Complex[0., 0.6283185307179586] $CellContext`t), 
       0.05441398092702653 
       E^(Complex[0., -0.6283185307179586] $CellContext`t), 
       0.05441398092702653 
       E^(Complex[0., -0.6283185307179586] $CellContext`t), 
       0.05441398092702653 E^(Complex[0., 0.6283185307179586] $CellContext`t),
        0.05441398092702653 
       E^(Complex[0., 0.6283185307179586] $CellContext`t), 
       0.031415926535897934` 
       E^(Complex[0., -0.6283185307179586] $CellContext`t), 
       0.031415926535897934` 
       E^(Complex[0., -0.6283185307179586] $CellContext`t), 
       0.031415926535897934` 
       E^(Complex[0., 0.6283185307179586] $CellContext`t), 
       0.04442882938158367 
       E^(Complex[0., -0.6283185307179586] $CellContext`t), 
       0.031415926535897934` 
       E^(Complex[0., 0.6283185307179586] $CellContext`t), 
       0.04442882938158367 
       E^(Complex[0., -0.6283185307179586] $CellContext`t), 
       0.04442882938158367 E^(Complex[0., 0.6283185307179586] $CellContext`t),
        0.05441398092702653 
       E^(Complex[0., -0.6283185307179586] $CellContext`t), 
       0.04442882938158367 E^(Complex[0., 0.6283185307179586] $CellContext`t),
        0.05441398092702653 
       E^(Complex[0., -0.6283185307179586] $CellContext`t), 
       0.05441398092702653 E^(Complex[0., 0.6283185307179586] $CellContext`t),
        0.05441398092702653 
       E^(Complex[0., 0.6283185307179586] $CellContext`t), 
       0.031415926535897934` 
       E^(Complex[0., -0.6283185307179586] $CellContext`t), 
       0.031415926535897934` 
       E^(Complex[0., -0.6283185307179586] $CellContext`t), 
       0.04442882938158367 
       E^(Complex[0., -0.6283185307179586] $CellContext`t), 
       0.031415926535897934` 
       E^(Complex[0., 0.6283185307179586] $CellContext`t), 
       0.04442882938158367 
       E^(Complex[0., -0.6283185307179586] $CellContext`t), 
       0.031415926535897934` 
       E^(Complex[0., 0.6283185307179586] $CellContext`t), 
       0.05441398092702653 
       E^(Complex[0., -0.6283185307179586] $CellContext`t), 
       0.04442882938158367 E^(Complex[0., 0.6283185307179586] $CellContext`t),
        0.05441398092702653 
       E^(Complex[0., -0.6283185307179586] $CellContext`t), 
       0.04442882938158367 E^(Complex[0., 0.6283185307179586] $CellContext`t),
        0.05441398092702653 
       E^(Complex[0., 0.6283185307179586] $CellContext`t), 
       0.05441398092702653 E^(Complex[0., 0.6283185307179586] $CellContext`t),
        0.031415926535897934` 
       E^(Complex[0., -0.6283185307179586] $CellContext`t), 
       0.031415926535897934` 
       E^(Complex[0., -0.6283185307179586] $CellContext`t), 
       0.04442882938158367 
       E^(Complex[0., -0.6283185307179586] $CellContext`t), 
       0.04442882938158367 
       E^(Complex[0., -0.6283185307179586] $CellContext`t), 
       0.031415926535897934` 
       E^(Complex[0., 0.6283185307179586] $CellContext`t), 
       0.031415926535897934` 
       E^(Complex[0., 0.6283185307179586] $CellContext`t), 
       0.05441398092702653 
       E^(Complex[0., -0.6283185307179586] $CellContext`t), 
       0.05441398092702653 
       E^(Complex[0., -0.6283185307179586] $CellContext`t), 
       0.04442882938158367 E^(Complex[0., 0.6283185307179586] $CellContext`t),
        0.04442882938158367 
       E^(Complex[0., 0.6283185307179586] $CellContext`t), 
       0.05441398092702653 E^(Complex[0., 0.6283185307179586] $CellContext`t),
        0.05441398092702653 
       E^(Complex[0., 0.6283185307179586] $CellContext`t)}}]]]]], "Output",
 CellChangeTimes->{
  3.7230743909997816`*^9, 3.7230744598982525`*^9, {3.723074559015658*^9, 
   3.723074566777589*^9}, {3.723074608785977*^9, 3.72307467516138*^9}, 
   3.72307471663338*^9, 3.7230750233165736`*^9, 3.7230806173960295`*^9, 
   3.723087871331875*^9, 3.723088334036587*^9, 3.7230888487210703`*^9, 
   3.7231153663274465`*^9, 3.723119254498129*^9, {3.72315538292992*^9, 
   3.7231554060162644`*^9}, 3.723155514650848*^9, 3.72315555794882*^9, 
   3.723155598023074*^9, 3.723155640962448*^9, 3.7231561802622614`*^9, 
   3.723156575666983*^9, 3.7231567142923455`*^9, 3.723156873904045*^9, 
   3.7231569566915045`*^9, 3.7553301932267513`*^9, 3.75533101785052*^9, 
   3.755349427465087*^9, 3.7553919968830357`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
FtZt6JkF4wqP2tMGbpjLXMlb1ToLpHXUwdfObmgU8+eL/aNZuOdZxHYg2A0v
1DM93VkzC19aWmVTE9wwzP7fRoGqWRD5b9yWftUNqz2GLvAS2DSSNcbsnhvW
01Sd++7NAnlAovTWMze0Dw29vL5uFmqVdF9xDbnhuz7hh7ItszCd7v3jxDc3
bGqJZqp9NgspYa08k6zuyKtT7bf2ehaky94WZfG447SI3kn7j7PQ2jumrCvi
jmm3YjoFx2fBiXWpa0nCHTfuOn8zdXYWvsuzuhXvc8fvjiptu78S+7lvXrJW
c8dtBQ2z9kvEfqkSCSy67rhSuWWgmsCtTYpb75m7I/fN/YZ0wt95Xueuh4M7
FgtervpC7LcsaquzydsdcwvVS/M+z0KakffA4wB3fFOgUKHYNwsy4WdOBkW4
Y5D2hryfHbNwzCRywbPHA6v2JNkVjsyAVv0KW0+AN27dPDbEyzoNqp5TStnh
3pjmti7ZijEFBzgHvD2o3thQ/uy4xeAU7L73NEsm2RuTvi+mhXdNgZjjg/al
S97Ikmk8e6B+CgRZyr435nsj+DAOdN+cAu4blyTjK70xaJOT/KX8KWC1jrO1
qPHGnCa++oeXpuDX6pnzwk3e6FrQuGCdMgWLhd61n5964+8dtzYHJE3BtJHt
xI3X3qiVdf7Qr/gpGF3UETjz0RtjjvepvyXwQI6i7uEJb3RnrS5sSJyCbi2J
M+x0b5yTTnT0S56CpzP8JT0rxH7Bub/D06egKZ2lN5v5GB7Je72RfGUKatW+
sXpyHcOv2v81r7s+BVKP5ll+lB/De/RpXquDU8BV95lp62cfPMF8Z3HO7Qt8
tbwS/3DOB2kpp965GX+B3hlTbttlH0za1KvbqfQF6qgsGV+ZfHFbn87Xxu1f
4NrWOqGLXL7InO6s9ZzrC1BrT13bs8UXnS49l/ZfnQQfMwmJpzt8cfE7p6nw
zCQYf3lf4bnXF6vF2YV3f5qE/bEp+/4d9EXuVyXqH3smQUBYtzYPfdH6vdzh
o88m4WfVqpqqCWFf0k6/8WQSBo3utvTa+WLGm6B/jc2T8GTMW++0uy9qOZFq
XQhcFiX6YuNJX9zfbjWu+XgSaAKvLW+E+uIsW4zaatskBNyO69cn++I017EJ
3s5JsNHXcB6n+WIxa13oj+5JyOvNenhTyQ9H3LrqHcwnYe+iQcChxONYrht7
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
FoisOiVymS8WWX1CxnvXeEHp9/oTIYKxWLE22sGUtQ7oBkX1lqKx6Fl8c6mC
vKZZkXmIa9/2WPzw2+FJjuVXTc+RficuyVjsp7XUOBR+1ty29/StaelYvK4k
kZjX/lqz/yzXnw65WKTfnJV4FFavmdZaalasEIungzZ8DZy9rmnMg9fJKrHY
wPsi8bTlGU02x490l0OxuOtf9ZixgJRmc+kZ0NCKxW+P44fNNg0fDl/kSRPW
j0XN2kRGTL+9psLhytEfxrGYZNtz3G8tWXM+UUf+nUUsdnVdVnOduKNZ1jtE
qbKNxXfmz2r1/3uq6b4j/O1Fh1i0XnbYOib5QVPUn1/ipGssLrF+GvTMnNbs
fXgrxNArFl9dSh+JzfihmcJq0L7LLxY5hxcKysKYwdDiswDrqVjU4z5ON0jh
BJa8qGOjp2PxDj9f38N9m6Hxi+CDprOxaKZpXTWWJgpnFarY86JisXBU/vZQ
y044QDI+Ek4m8t/4bz7/nxTMdk6U28XFYr5kjw8nixyUCMb+VKDF4vhO+bzG
QXnie0rEiC81Fn+ZnFQ9kHgQhG/X5CxkxuL5l41/hs+oQbLutHrFtVh8kmFw
YmwcQT+NeiGuKBb332T648asA0yD2wY9y2OxmvTMh09QD+p3P5TFW7Go84mR
ybXZAM6EWMX8Vx2Lb4pUVegMQ9jXMvfq1/1YfC18MTS40BimOePF3tcT/Pdn
rN+w3RSK7HcE3m8h6uX4t3RPTzNwLqpvyWiPRdt7IleXfM1hC92WL6iTiCdR
WMx2vwW8VmO4m3UT+ZLlLlAbLIAWl1Qt8y4WH7ItXyRvsATdNxIsHO9jsePp
bRjZbgmhgoV/zIdiMZXnbUPBbksocxBbvTQWi5ERpizSRH/3X8v7PjgVi5eO
LLCJylnC+jHhrxILsXjU7IsJmw7R/1KX5058i0VvoZdWzWctwe/E5qnqlVjk
KDZXbu+1hJw7aWM/f8eiz54tOel+VnBslZ2xnZmM2QKKo5yHrIGU1+HfxkrG
YI5m42V7G7h8+PysDzsZHTYbrmY028KdEW0/zg1kbCT9Z2oYag9PKcxfbnOR
0V9AVyAy8igMSzz2suIhI8sOzV9nuxxhpYP0+TsfGXk22xhdcHUBac7fgxpb
yDgdeH5S/JIH4K16xxFhMqpy8HC8kvCCo+YR76lbyVh8bNC3sN4bgr6q2EuJ
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
P5tLY0lKde31fAmE28wNNTOhMWAgQWliFvFzeDCXs5DG54OD7hmpEtDKKXUy
XkzjgiXdq75ekcCBjjHlaUtonOKe/1knSQIlU7aZ6QCNR5Tt+p+dl8AE25S0
ZEsaj+oUzv1J1h4R/GTV5TSe0+IPdZPzuTmmJ+OtaGxTmXzr0TUJDOuMHFBe
TWMUXbJ69W0JbJ5a6XnSmsbY3iM1hx5I4JbtpHo5Gxqv2iyOHfZcAr8idlqF
2pH3Q3YFpdZIYE3u7ZwBB5JP4DSmu10CFzr7tAM20DhdJm/U3gEJSKZaxnOb
aNxqlHkwQZGDJXaUnNdWGlNN2kY1T+OAiaz1b3WiUXRp3Mi8ORw05aq3OrnQ
eOnEjsnxyzgwEu22r3elMczcsJ9bz0GY2v2n9m40nh2u9XvdTg6q7AaNyj0I
vnFB82z3cqAZtSrZajeN4OJ9/9phDvwfnFZ+todGYdEv00mhHBSJPoWY7aXx
vNYQ04RwDsZPm8Hl+NGoOX3tZJ0IDtzs9zsZB9C4BmbkdR7jICfqUVnaQaJ3
SkKJdhAHCnlDzXSOED8a3pUaHeBgo9g2Lfkoyad2sDpwDwc3p52frBpCY8e9
RtdwVw4G7Nti4o8Rv4+UPVy1kYNVx2cPKEcQf9lv39pnzUFi3hHPk1E0Hmvc
bhBhyYFIXFQnd4LGiJLo5L8LOTBTV7IKPUmjyoplIzuMOKAdNuUMUDTaeISY
3pvFwafjV7QDWBpnG6fm5OtwYPhQHMedonHWmV8/1mhzECoxkfOKI/HTVXXP
kP1K9TD/1jPED9Pa7v4/Xn39689O52j8qdgrvGbMgV+0in39eVLfZ66r2izm
4NnD7U/tk0j83MTqY1YcjONSjcqTSb1nzrsldeRgp8aPS1ZXabzc9EzPzJ2D
7PXmys+u02i41CbgxyEO5E+cCDG7SWNT06iihJMcOOa/leTcovH4x96exIsc
9Gl4lKVl0Kg1ryE35BkHo0uLn03KorHObdvR7rcczNyjmRedTePL0S+L7rZw
YDnmWEZPDo3yp+SS1nIcbM35dH1nHo0uyoubA/o5CNi6+EJVPo35a3JSvg0S
vv6djbV4TKNt+c++SDkp3Ljee+J2IcE77J8vDpVC4er1oapFNN6pH+VkLC+F
99LMAzElJP/qaWoRMlLojlPe01dKo4N36UDwLw4UTX1c3V7R6GForxTazYF2
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
aW3vPxAiFdSyceAfD/8DJBdg8Q==
           "]]}, "\"\[VerticalSeparator]1,1,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]1,1,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJxF0GlI0wEUAPClK1ySOs3wKI9G5FULTSpz80zRppKJVJSWx0wZm3fTqaU7
1Mw80073n6VGl1JYumyFjiz74BHJzANUiq6lbl41Wwfkew8ejx+P9+A9xzhe
ZKIBiUQK+5v/6lfNCiuIvcAk/Y/0phyPQNlbn1XzjdVsa9k0WKBoJpFlWvCv
emHYD8LQd9UKskarJSzAdvudg+cIGjh8WDk7Q3iAfauExgcyA8FUbXRbVXw4
mPmUfyjfLApMZCjujx05Cp4IGR/SBcWAEw/mquP6T4H95Evkfm4C2LhjkmQ7
yQa7zgVzvUuSwV6dNi8YBhxwa0jstpc8LvjZejM9tTQVbNPRPNrWkwbeKtSl
ya0ywDHulOripEy8zznsllKaBeYxIngcTTY48Eqxm2gnH6w0L2hcJ84Bn0nd
0ch6lwuWWVrUGpjmYV/1mEmLz8f5qcrRR0QB7h+kGRipzoI7uPLU6dpz4FKr
gpFc90LwrkGiIXgcPauTOi2KisCcUPnd445C/E+LR9lyH7rP6VU8K1kEnrPd
t6aILAart1B03+6hmwLm1aahErA7n8k4PY8WDNwU82uKweNXP1Sn0EvAlpmS
lSoVmpLmH5uWXQoeyjthJ3E8D27/GdWY9xp9+HqSvSu7DNzLGlk2MbsAXnRg
v7nzAO2T1B/nFFoOjumqjx7VoPd6CgKCKi+ChwX+Lmtr0FndFKryEvphxOUJ
v2tot5T2HEYz2kE607q7C02hJGymfULfjnA1nPqCDqrTfCbUaBGt8ImdFq1n
NETa6NGadFUJdWMFuLJTyhvYhKaTkqIrrNGc8gXaBnv0xxbz50YuaNH3kaZe
NzTNU3ZBQkef7KYfI3ui9UZLvj170DciFNuLvNDedWITPwb6/Rhr4bcP+g9K
cRxt
           "]]}, "\"\[VerticalSeparator]1,2,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]1,2,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJxF0GlI0wEUAPClK1ySOs3wKI9G5FULTSpz80zRppKJVJSWx0wZm3fTqaU7
1Mw80073n6VGl1JYumyFjiz74BHJzANUiq6lbl41Wwfkew8ejx+P9+A9xzhe
ZKIBiUQK+5v/6lfNCiuIvcAk/Y/0phyPQNlbn1XzjdVsa9k0WKBoJpFlWvCv
emHYD8LQd9UKskarJSzAdvudg+cIGjh8WDk7Q3iAfauExgcyA8FUbXRbVXw4
mPmUfyjfLApMZCjujx05Cp4IGR/SBcWAEw/mquP6T4H95Evkfm4C2LhjkmQ7
yQa7zgVzvUuSwV6dNi8YBhxwa0jstpc8LvjZejM9tTQVbNPRPNrWkwbeKtSl
ya0ywDHulOripEy8zznsllKaBeYxIngcTTY48Eqxm2gnH6w0L2hcJ84Bn0nd
0ch6lwuWWVrUGpjmYV/1mEmLz8f5qcrRR0QB7h+kGRipzoI7uPLU6dpz4FKr
gpFc90LwrkGiIXgcPauTOi2KisCcUPnd445C/E+LR9lyH7rP6VU8K1kEnrPd
t6aILAart1B03+6hmwLm1aahErA7n8k4PY8WDNwU82uKweNXP1Sn0EvAlpmS
lSoVmpLmH5uWXQoeyjthJ3E8D27/GdWY9xp9+HqSvSu7DNzLGlk2MbsAXnRg
v7nzAO2T1B/nFFoOjumqjx7VoPd6CgKCKi+ChwX+Lmtr0FndFKryEvphxOUJ
v2tot5T2HEYz2kE607q7C02hJGymfULfjnA1nPqCDqrTfCbUaBGt8ImdFq1n
NETa6NGadFUJdWMFuLJTyhvYhKaTkqIrrNGc8gXaBnv0xxbz50YuaNH3kaZe
NzTNU3ZBQkef7KYfI3ui9UZLvj170DciFNuLvNDedWITPwb6/Rhr4bcP+g9K
cRxt
           "]]}, "\"\[VerticalSeparator]2,1,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]2,1,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
MMGqcd6FjDZV9EsFBQwwi+nYGOxOxheFXby3qhjwfXPGtP0pMiZN6HybfsSA
iLt2T/AsGVO0qiu5XxJ86+7I3RNERoOFL/sKPxB8fx4P4g8no/8ONrWwrwTf
AZVGC2QyMi10ihwHCb45wyX6qGT89pmPy3CI4DtP63dbPBl9JAuNLAcIvpU4
u++kEPhX3a0p/Ezw3fn6TnoaGUs+b9uc0k3wffISLTyLjP2vdrp4dhB8/3Ky
d8kmY8yR5tw7RH76qVIKR/LJuFLTs+nzfYJvqRku2UIyXpVgX6QUE3w3Vg8J
lhD4dv8dlckh+LYi1y3fJeM6x6SbXqkE3xM66UP3yKh+OPZHwzmC7xieU+0P
yJgo3sZ3g9Bv2+ZuqGgk431OltpzhN5t7mZvvdRKxq52fNXgR/Ctc5JJfkbG
FmupwSRfgu/P0u1unWTkGareI3yW4DtgNt/wLRn/HvxmRwkg+OasC5P/QMbg
zjsH74cRfOfFmG39TEaLnUaJl2IIvpWO7l7tJ+OpTT1ScykE3538qyPDZMw7
kOMUfpXg+0Rvz8txIv9mPvXntwm+f+WV358ho+LLQ6k+dQTfqZ7x2XNkrDWw
pHwn8GqQ2u9MXSQjy++EyWKCH7PGeWXvFQKvwo2Ku+kE35ZNfGYsUZi2UzTm
/V+C74lzI8provDAKsf2PeuYwBdj3CTKE4UfAuP/3RJhwo3NG7PYBKIwir62
9NsuJty91bzl2KYo3MX679OOA0yoUzqVXSgchQrpb5bXHmTCkzZBsXnxKHw+
OdsdoMqEN5bN+XpSUXhDNTTDWYUJX4a8d16SiUJh6r9HSwpMGPUXvDUqF4Xm
HjL/MvcyYXa1abeKchRO8W9ju76DCX8ueN9JUIvCSu/Ia2WbmLB2m6DsR60o
FKnufeO0lgmCd5sq9uhF4cOhO73uywwQP+ytEGEYhcssrPzh0wyQ6dxQ88Is
Cv3+VI4YEvpTtm9SEbaOQn53pmU8oTec8Ko/bR+Fpg7ihx+/YIBx+AaNBpco
HIz5kE15TPDP2fSIxyMKlUqdBCSbGeB2yUvb8XQUrt/9T36hkQFnpTY8LfOL
wumNh71F/l8/1Y36f4Kj0ODnit+lJwyI0/HqMImMwhju0/76rxiQ1rXeJI8S
hZOSbxumPzIg50TjG/q5KOwXnRWXGmNAMdPTUis5Cq/K83IHLRL6p6z/kJoa
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
           "]]}, "\"\[VerticalSeparator]2,2,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]2,2,0\[RightAngleBracket]", 
         "Tooltip"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[VerticalSeparator]1,1,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]1,2,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]2,1,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]2,2,0\[RightAngleBracket]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7230743909997816`*^9, 3.7230744598982525`*^9, {3.723074559015658*^9, 
   3.723074566777589*^9}, {3.723074608785977*^9, 3.72307467516138*^9}, 
   3.72307471663338*^9, 3.7230750233165736`*^9, 3.7230806173960295`*^9, 
   3.723087871331875*^9, 3.723088334036587*^9, 3.7230888487210703`*^9, 
   3.7231153663274465`*^9, 3.723119254498129*^9, {3.72315538292992*^9, 
   3.7231554060162644`*^9}, 3.723155514650848*^9, 3.72315555794882*^9, 
   3.723155598023074*^9, 3.723155640962448*^9, 3.7231561802622614`*^9, 
   3.723156575666983*^9, 3.7231567142923455`*^9, 3.723156873904045*^9, 
   3.7231569566915045`*^9, 3.7553301932267513`*^9, 3.75533101785052*^9, 
   3.755349427465087*^9, 3.755391997543268*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJxF0GlI0wEUAPClK1ySOs3wKI9G5FULTSpz80zRppKJVJSWx0wZm3fTqaU7
1Mw80073n6VGl1JYumyFjiz74BHJzANUiq6lbl41Wwfkew8ejx+P9+A9xzhe
ZKIBiUQK+5v/6lfNCiuIvcAk/Y/0phyPQNlbn1XzjdVsa9k0WKBoJpFlWvCv
emHYD8LQd9UKskarJSzAdvudg+cIGjh8WDk7Q3iAfauExgcyA8FUbXRbVXw4
mPmUfyjfLApMZCjujx05Cp4IGR/SBcWAEw/mquP6T4H95Evkfm4C2LhjkmQ7
yQa7zgVzvUuSwV6dNi8YBhxwa0jstpc8LvjZejM9tTQVbNPRPNrWkwbeKtSl
ya0ywDHulOripEy8zznsllKaBeYxIngcTTY48Eqxm2gnH6w0L2hcJ84Bn0nd
0ch6lwuWWVrUGpjmYV/1mEmLz8f5qcrRR0QB7h+kGRipzoI7uPLU6dpz4FKr
gpFc90LwrkGiIXgcPauTOi2KisCcUPnd445C/E+LR9lyH7rP6VU8K1kEnrPd
t6aILAart1B03+6hmwLm1aahErA7n8k4PY8WDNwU82uKweNXP1Sn0EvAlpmS
lSoVmpLmH5uWXQoeyjthJ3E8D27/GdWY9xp9+HqSvSu7DNzLGlk2MbsAXnRg
v7nzAO2T1B/nFFoOjumqjx7VoPd6CgKCKi+ChwX+Lmtr0FndFKryEvphxOUJ
v2tot5T2HEYz2kE607q7C02hJGymfULfjnA1nPqCDqrTfCbUaBGt8ImdFq1n
NETa6NGadFUJdWMFuLJTyhvYhKaTkqIrrNGc8gXaBnv0xxbz50YuaNH3kaZe
NzTNU3ZBQkef7KYfI3ui9UZLvj170DciFNuLvNDedWITPwb6/Rhr4bcP+g9K
cRxt
           "]]}, "\"\[VerticalSeparator]1,1,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]1,1,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
kKJu2cyA7c6LV1PCdLFsoKPt43YG1AxrvNyRp4uDJXZLurIMMPdOYLrXrYuC
Ma9/FKkT+z1g5/EXO/Vwl+CscTyxHwS+nrzpbKqHbUP9mzKJ/r0fVvtm9owe
Yg0nWy9xfxj+YmWPzNVDT0nSubyzDBgm2WhyduvhtaeyF2kxDDjLcivw6g89
LPqXqKRI9Adv0lyB5E591DfgF3EjMaBsg9rgQxN9dDyx1YEligGYfo7b4Iw+
+q1xDGidZsCzYQHtdTf0ceaN1bAIsY8s5W4Ht7TpY4vPsaPJR4n7L/JQYcy8
Psaw9+//Suw712ev+zW2GuAQxWxj70FiP/H5cK5oGmBndp7Vvb0MCPBa0azx
MsCq3fK6ooQ+UX925O17YIA8+f+kOVbpwGxW9Xb+gwHmKSbI5MzQISlbn62c
2RBNSvI2zHykw6apQTVfGUPcMuVp4tZLh6vKJ09I2BhiXAp3nU0nHUQpf2+M
RhD2TXrCzE/oUNKT3nszzxCfGHuKZDTSQX77nnVHnxtizvFUhU0ErjleqyL0
xRCzguYsAprpoPXYzK9f0Aj7dmmxx7bRoZV1JCcDjLBSqPbzv246mNqefmnl
Z4TNtk6C1/vo8CaX7d+GVCO8qv/PaXSEDkcWsxW7Hxnhhv0DTtYLdBjVlPNJ
HDbCOJk369x/0sEvqeWKPrsxvu/XSYxgJ+7jftsu5n3G2Cfyc4h9KwPCJKbW
mh2MUWjU9Fa4KLGfgyP3xcQSdnspFl2iv+ObN3hqFBtj2nq24oX9DODekJe5
/NIY7bhfl2w5QNwfTsqd1T+MMWTiipG/GgNESjtXg7eboOCzp3+aVBmQ/8Np
7z59E1wfs6d5HbGPpHUXXedPmuBXav1ZfWJ/VaSS08oyTTC03su5QpyY/09b
2441mODlmk+9FwSI9x/Z0iXxcRO8NDT7S5OTAQYRmtKjXKbIRwq9pkTo97Lj
lfNNJVN8ZyY+uDJFB/utnpecnU3xLLfdiHA/HbzuJ37rKzdF5VFR7qdVdJhd
E9mT8cYUbXQbt/rk0yHY5P5hq5+mqHbs+bXLGXRYvaJD27DLDA0/sx3sPE+H
uIm+xi5jM2z8oehnF00HdiV/RkKwGfr8TQuID6VDStzaLv1sM3xxcNQ2KZAO
/K9S7JmfEP4DEufOBNDhhoh4YvO0GXIV+U3qnaKDhP/DumheczzTRts1GEyH
2w+NF9TVzLGsUUFt6SwdlFiGRJfdzLGuYUHRIo4OddZBNtUJ5rjeaZIakUws
rlvr4oPvm+Ohi7yyf7Po8Hz+8iP5AXMM/7rU60jUM5DQuK1sjwVqBodWqNfT
wa3PyvKYhQU2pxR3ZHfQYXLXOFk8zAL5dxdbnCf6OSDobPXIDQvc4/NTOm6Q
Dj8a10/daLdAYX0rdpFPdIjmuinkvGCB6wMF55lG6bDuiIKZIJ8l0r1Pif4i
+o9W3Bbbp2WJnVzSkbNDdNj83bEy3dsSZVQv570ZIObDdZd9Is0S0x7mPOLo
oYPcs/mVmCpLXBl+eft+Kx00FR9dP/3eEu9OBnUJPaSD8XUy+P+zxALKi+67
xXRwZDMbd5W0QnsWu6LPRL3eQfyJdhZW2Bsh36Bxjg4kvds92tetMEHk879w
dzpcvHfmtEqrFZrvOd4aaEmHHEEQkJ21wo0rvmfytOnw7gnrJ15Oa+wKZd0T
p0CHj0uz92nbrPHS3nW7T+2mw2fZXjLbfmuUqjGbqxOhw4x7jS1Z1xqDlfOH
c7fSgZGVs3vNwRqN1/vd0uWlw3IXaTnsuDVWa719fW8jHf789X7+JcYa3Ti3
TfXx0IFVxeTayTRr3JFxXzxzCx24ju8LmCq0xs87H+XdFSL4urVV2/OxNdK+
nWH0itFB6N0q71C3NZ7mdLDKliX44xz+7DhsjW1nfWbTDhD8nS47b85mg+7z
GSNsFnRQLr10+JmQDa7dz/0UcITgc+i0jK6cDTayjKePe9FBZ/ORtUawQbNQ
9/rpkwS/hodeqdnZ4IsiY2ZWon+tosVzH/jaoFVp10BfOMF3JUeIfBRxXjYj
ZkMUHVwmF3TLLtng5YDcM2cjCf5F3vJJ5NvgkQbxiJ9hdDhh9XjqZo0NLgcG
ns8OIuYp/kat0HMb3LDnRO5pXzqE11Fomf/ZYMuzSamnzoRedF8XHoYN9m2i
xvSb0+G8hPm+5HW2OLo3zYT/EKHfEUUmVgFbnA0777K8lw7XWtcKfx60xWOU
wculHHTIXxkNO2NtizcibOyTlhahTK7TiOFtiwu1LhW7Jhbhvucd4RPhtrj0
R1H167tFeHglbX6CZotars1u/h2L0PgirMn9li2eSskTnq1dhFamo6kfq2zR
+pJmW+v9Reg6gJ4OHbbYelx1aH/pIrw+sUf59XtbTInf6WpfsAiDuVxsZgu2
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
/gMhXgpu2TDwj4f/AfUpWVg=
           "]]}, "\"\[VerticalSeparator]1,2,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]1,2,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
9enfCGJ5Ny9sqgNOlePK9uVsjEnu2zOuVwfvuJdyrFeyMVJq5rS8eB2sVOFJ
3V3Fxg6wjJN4VwuxO1ZFr1/LxoN1UeWS5bXQHRs1Vm1M66l+fjj3ZC1oVT90
XbmOjUKXLDIY5rVwjCfTXmzGRtOEhXVXZ2pAbmdBcY4lG1/orvlqcLQGPInP
Ssob2ehfp7VWXrcGaqpNz6ZYs7H+uyBH/3017FHt8Dq7jY15M+xLC5yroWin
Yq/QDjZa775R7qBQDVPEQetoOzburo7kM/qrYGtNSfUvBzaWB/LaiGtVkPnp
p3bobppPalflz/Aq4Ktapow5s9Gpe/Gi7fZVYGaXIOTtwkZyxc1TZSurgGS8
CBl0ZWOVanKjhEIVvKlRH3R1Y+PqNKNSYeEq+Knh2VZcysZFn+wEmj6WgfTD
5ruKN9kYtNVovOdRGej4adbFVbLxls2rOE5NGVjKnC79Uc3GrhbprQ4lZeBS
3X/lYB0bGeV3NpgVlkGoy7rMrno2esW/tV9FY/a/i0kWDWyU6RAL+VlUBlev
TJwpaWTjTeJNhcX1Mmjc4hitfI+NCy+dL2un633j5cfi77NxWeEvZ+blMviW
LOX38yEbx9klT2JSy2COqb/H4VY2qrE+mi6JLQPtN63O3W1srJT99XTlwTIw
ZyzdgR20P455J++YlIGTDmtjaRcb51/5ar5buAyCngyuU33GxjXn+S8/3i+F
+BA0PPeCjeHpAw3NEaWQp5C99FcvG4+4NFwvWlIK9benF3q+YmO7zL47Ba03
gC9aK7HhLRt3EdGxCVMlIFIiO6v8PRu3/O7a2JdQAmr2IZMLP7Kx6IjMog/K
JWCfufzjbx4bRX+6n1FZdx18MeGV1ygbE/yHFxl0FANziNf1Yoyef/HGjCKv
Yrh0zrrF6gsbTRYZh+vPLoaaFVcabn5jY+z+WbZyN4ug8/msKvUJep6FpU4x
h4qAd9KtmJxk47uVCl6rNIpglnpD7vRvNvo9u+SWyi0E5fvKF31m6M/bXCKu
5lYhrPYJJ3v/srEw9tiHdamFsF2qh7FpFolf9DQq/KIK4Ujl6ohKIRLnh3Td
MPIrhOg9ScGaoiSOiARlmnoUwsU/456c2STaB23x6HQthPL87fv/SJB45ut8
QoPGj22KHf3mknikNVHNaH8hfOCLbX0pTaL5Uquvcw8UwkzSEbSZTyIfNouX
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
           "]]}, "\"\[VerticalSeparator]2,1,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]2,1,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJxF0GlI0wEUAPClK1ySOs3wKI9G5FULTSpz80zRppKJVJSWx0wZm3fTqaU7
1Mw80073n6VGl1JYumyFjiz74BHJzANUiq6lbl41Wwfkew8ejx+P9+A9xzhe
ZKIBiUQK+5v/6lfNCiuIvcAk/Y/0phyPQNlbn1XzjdVsa9k0WKBoJpFlWvCv
emHYD8LQd9UKskarJSzAdvudg+cIGjh8WDk7Q3iAfauExgcyA8FUbXRbVXw4
mPmUfyjfLApMZCjujx05Cp4IGR/SBcWAEw/mquP6T4H95Evkfm4C2LhjkmQ7
yQa7zgVzvUuSwV6dNi8YBhxwa0jstpc8LvjZejM9tTQVbNPRPNrWkwbeKtSl
ya0ywDHulOripEy8zznsllKaBeYxIngcTTY48Eqxm2gnH6w0L2hcJ84Bn0nd
0ch6lwuWWVrUGpjmYV/1mEmLz8f5qcrRR0QB7h+kGRipzoI7uPLU6dpz4FKr
gpFc90LwrkGiIXgcPauTOi2KisCcUPnd445C/E+LR9lyH7rP6VU8K1kEnrPd
t6aILAart1B03+6hmwLm1aahErA7n8k4PY8WDNwU82uKweNXP1Sn0EvAlpmS
lSoVmpLmH5uWXQoeyjthJ3E8D27/GdWY9xp9+HqSvSu7DNzLGlk2MbsAXnRg
v7nzAO2T1B/nFFoOjumqjx7VoPd6CgKCKi+ChwX+Lmtr0FndFKryEvphxOUJ
v2tot5T2HEYz2kE607q7C02hJGymfULfjnA1nPqCDqrTfCbUaBGt8ImdFq1n
NETa6NGadFUJdWMFuLJTyhvYhKaTkqIrrNGc8gXaBnv0xxbz50YuaNH3kaZe
NzTNU3ZBQkef7KYfI3ui9UZLvj170DciFNuLvNDedWITPwb6/Rhr4bcP+g9K
cRxt
           "]]}, "\"\[VerticalSeparator]2,2,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]2,2,0\[RightAngleBracket]", 
         "Tooltip"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[VerticalSeparator]1,1,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]1,2,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]2,1,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]2,2,0\[RightAngleBracket]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7230743909997816`*^9, 3.7230744598982525`*^9, {3.723074559015658*^9, 
   3.723074566777589*^9}, {3.723074608785977*^9, 3.72307467516138*^9}, 
   3.72307471663338*^9, 3.7230750233165736`*^9, 3.7230806173960295`*^9, 
   3.723087871331875*^9, 3.723088334036587*^9, 3.7230888487210703`*^9, 
   3.7231153663274465`*^9, 3.723119254498129*^9, {3.72315538292992*^9, 
   3.7231554060162644`*^9}, 3.723155514650848*^9, 3.72315555794882*^9, 
   3.723155598023074*^9, 3.723155640962448*^9, 3.7231561802622614`*^9, 
   3.723156575666983*^9, 3.7231567142923455`*^9, 3.723156873904045*^9, 
   3.7231569566915045`*^9, 3.7553301932267513`*^9, 3.75533101785052*^9, 
   3.755349427465087*^9, 3.755391998937558*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJxF0GlI0wEUAPClK1ySOs3wKI9G5FULTSpz80zRppKJVJSWx0wZm3fTqaU7
1Mw80073n6VGl1JYumyFjiz74BHJzANUiq6lbl41Wwfkew8ejx+P9+A9xzhe
ZKIBiUQK+5v/6lfNCiuIvcAk/Y/0phyPQNlbn1XzjdVsa9k0WKBoJpFlWvCv
emHYD8LQd9UKskarJSzAdvudg+cIGjh8WDk7Q3iAfauExgcyA8FUbXRbVXw4
mPmUfyjfLApMZCjujx05Cp4IGR/SBcWAEw/mquP6T4H95Evkfm4C2LhjkmQ7
yQa7zgVzvUuSwV6dNi8YBhxwa0jstpc8LvjZejM9tTQVbNPRPNrWkwbeKtSl
ya0ywDHulOripEy8zznsllKaBeYxIngcTTY48Eqxm2gnH6w0L2hcJ84Bn0nd
0ch6lwuWWVrUGpjmYV/1mEmLz8f5qcrRR0QB7h+kGRipzoI7uPLU6dpz4FKr
gpFc90LwrkGiIXgcPauTOi2KisCcUPnd445C/E+LR9lyH7rP6VU8K1kEnrPd
t6aILAart1B03+6hmwLm1aahErA7n8k4PY8WDNwU82uKweNXP1Sn0EvAlpmS
lSoVmpLmH5uWXQoeyjthJ3E8D27/GdWY9xp9+HqSvSu7DNzLGlk2MbsAXnRg
v7nzAO2T1B/nFFoOjumqjx7VoPd6CgKCKi+ChwX+Lmtr0FndFKryEvphxOUJ
v2tot5T2HEYz2kE607q7C02hJGymfULfjnA1nPqCDqrTfCbUaBGt8ImdFq1n
NETa6NGadFUJdWMFuLJTyhvYhKaTkqIrrNGc8gXaBnv0xxbz50YuaNH3kaZe
NzTNU3ZBQkef7KYfI3ui9UZLvj170DciFNuLvNDedWITPwb6/Rhr4bcP+g9K
cRxt
           "]]}, "\"\[VerticalSeparator]1,1,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]1,1,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
           "]]}, "\"\[VerticalSeparator]1,2,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]1,2,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
z2cMEj4/ren5B0L8MOTrhv5/PPwP+gloqA==
           "]]}, "\"\[VerticalSeparator]2,1,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]2,1,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJxF0GlI0wEUAPClK1ySOs3wKI9G5FULTSpz80zRppKJVJSWx0wZm3fTqaU7
1Mw80073n6VGl1JYumyFjiz74BHJzANUiq6lbl41Wwfkew8ejx+P9+A9xzhe
ZKIBiUQK+5v/6lfNCiuIvcAk/Y/0phyPQNlbn1XzjdVsa9k0WKBoJpFlWvCv
emHYD8LQd9UKskarJSzAdvudg+cIGjh8WDk7Q3iAfauExgcyA8FUbXRbVXw4
mPmUfyjfLApMZCjujx05Cp4IGR/SBcWAEw/mquP6T4H95Evkfm4C2LhjkmQ7
yQa7zgVzvUuSwV6dNi8YBhxwa0jstpc8LvjZejM9tTQVbNPRPNrWkwbeKtSl
ya0ywDHulOripEy8zznsllKaBeYxIngcTTY48Eqxm2gnH6w0L2hcJ84Bn0nd
0ch6lwuWWVrUGpjmYV/1mEmLz8f5qcrRR0QB7h+kGRipzoI7uPLU6dpz4FKr
gpFc90LwrkGiIXgcPauTOi2KisCcUPnd445C/E+LR9lyH7rP6VU8K1kEnrPd
t6aILAart1B03+6hmwLm1aahErA7n8k4PY8WDNwU82uKweNXP1Sn0EvAlpmS
lSoVmpLmH5uWXQoeyjthJ3E8D27/GdWY9xp9+HqSvSu7DNzLGlk2MbsAXnRg
v7nzAO2T1B/nFFoOjumqjx7VoPd6CgKCKi+ChwX+Lmtr0FndFKryEvphxOUJ
v2tot5T2HEYz2kE607q7C02hJGymfULfjnA1nPqCDqrTfCbUaBGt8ImdFq1n
NETa6NGadFUJdWMFuLJTyhvYhKaTkqIrrNGc8gXaBnv0xxbz50YuaNH3kaZe
NzTNU3ZBQkef7KYfI3ui9UZLvj170DciFNuLvNDedWITPwb6/Rhr4bcP+g9K
cRxt
           "]]}, "\"\[VerticalSeparator]2,2,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]2,2,0\[RightAngleBracket]", 
         "Tooltip"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[VerticalSeparator]1,1,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]1,2,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]2,1,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]2,2,0\[RightAngleBracket]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7230743909997816`*^9, 3.7230744598982525`*^9, {3.723074559015658*^9, 
   3.723074566777589*^9}, {3.723074608785977*^9, 3.72307467516138*^9}, 
   3.72307471663338*^9, 3.7230750233165736`*^9, 3.7230806173960295`*^9, 
   3.723087871331875*^9, 3.723088334036587*^9, 3.7230888487210703`*^9, 
   3.7231153663274465`*^9, 3.723119254498129*^9, {3.72315538292992*^9, 
   3.7231554060162644`*^9}, 3.723155514650848*^9, 3.72315555794882*^9, 
   3.723155598023074*^9, 3.723155640962448*^9, 3.7231561802622614`*^9, 
   3.723156575666983*^9, 3.7231567142923455`*^9, 3.723156873904045*^9, 
   3.7231569566915045`*^9, 3.7553301932267513`*^9, 3.75533101785052*^9, 
   3.755349427465087*^9, 3.7553920007343082`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
MMGqcd6FjDZV9EsFBQwwi+nYGOxOxheFXby3qhjwfXPGtP0pMiZN6HybfsSA
iLt2T/AsGVO0qiu5XxJ86+7I3RNERoOFL/sKPxB8fx4P4g8no/8ONrWwrwTf
AZVGC2QyMi10ihwHCb45wyX6qGT89pmPy3CI4DtP63dbPBl9JAuNLAcIvpU4
u++kEPhX3a0p/Ezw3fn6TnoaGUs+b9uc0k3wffISLTyLjP2vdrp4dhB8/3Ky
d8kmY8yR5tw7RH76qVIKR/LJuFLTs+nzfYJvqRku2UIyXpVgX6QUE3w3Vg8J
lhD4dv8dlckh+LYi1y3fJeM6x6SbXqkE3xM66UP3yKh+OPZHwzmC7xieU+0P
yJgo3sZ3g9Bv2+ZuqGgk431OltpzhN5t7mZvvdRKxq52fNXgR/Ctc5JJfkbG
FmupwSRfgu/P0u1unWTkGareI3yW4DtgNt/wLRn/HvxmRwkg+OasC5P/QMbg
zjsH74cRfOfFmG39TEaLnUaJl2IIvpWO7l7tJ+OpTT1ScykE3538qyPDZMw7
kOMUfpXg+0Rvz8txIv9mPvXntwm+f+WV358ho+LLQ6k+dQTfqZ7x2XNkrDWw
pHwn8GqQ2u9MXSQjy++EyWKCH7PGeWXvFQKvwo2Ku+kE35ZNfGYsUZi2UzTm
/V+C74lzI8provDAKsf2PeuYwBdj3CTKE4UfAuP/3RJhwo3NG7PYBKIwir62
9NsuJty91bzl2KYo3MX679OOA0yoUzqVXSgchQrpb5bXHmTCkzZBsXnxKHw+
OdsdoMqEN5bN+XpSUXhDNTTDWYUJX4a8d16SiUJh6r9HSwpMGPUXvDUqF4Xm
HjL/MvcyYXa1abeKchRO8W9ju76DCX8ueN9JUIvCSu/Ia2WbmLB2m6DsR60o
FKnufeO0lgmCd5sq9uhF4cOhO73uywwQP+ytEGEYhcssrPzh0wyQ6dxQ88Is
Cv3+VI4YEvpTtm9SEbaOQn53pmU8oTec8Ko/bR+Fpg7ihx+/YIBx+AaNBpco
HIz5kE15TPDP2fSIxyMKlUqdBCSbGeB2yUvb8XQUrt/9T36hkQFnpTY8LfOL
wumNh71F/l8/1Y36f4Kj0ODnit+lJwyI0/HqMImMwhju0/76rxiQ1rXeJI8S
hZOSbxumPzIg50TjG/q5KOwXnRWXGmNAMdPTUis5Cq/K83IHLRL6p6z/kJoa
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
           "]]}, "\"\[VerticalSeparator]1,1,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]1,1,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJxF0GlI0wEUAPClK1ySOs3wKI9G5FULTSpz80zRppKJVJSWx0wZm3fTqaU7
1Mw80073n6VGl1JYumyFjiz74BHJzANUiq6lbl41Wwfkew8ejx+P9+A9xzhe
ZKIBiUQK+5v/6lfNCiuIvcAk/Y/0phyPQNlbn1XzjdVsa9k0WKBoJpFlWvCv
emHYD8LQd9UKskarJSzAdvudg+cIGjh8WDk7Q3iAfauExgcyA8FUbXRbVXw4
mPmUfyjfLApMZCjujx05Cp4IGR/SBcWAEw/mquP6T4H95Evkfm4C2LhjkmQ7
yQa7zgVzvUuSwV6dNi8YBhxwa0jstpc8LvjZejM9tTQVbNPRPNrWkwbeKtSl
ya0ywDHulOripEy8zznsllKaBeYxIngcTTY48Eqxm2gnH6w0L2hcJ84Bn0nd
0ch6lwuWWVrUGpjmYV/1mEmLz8f5qcrRR0QB7h+kGRipzoI7uPLU6dpz4FKr
gpFc90LwrkGiIXgcPauTOi2KisCcUPnd445C/E+LR9lyH7rP6VU8K1kEnrPd
t6aILAart1B03+6hmwLm1aahErA7n8k4PY8WDNwU82uKweNXP1Sn0EvAlpmS
lSoVmpLmH5uWXQoeyjthJ3E8D27/GdWY9xp9+HqSvSu7DNzLGlk2MbsAXnRg
v7nzAO2T1B/nFFoOjumqjx7VoPd6CgKCKi+ChwX+Lmtr0FndFKryEvphxOUJ
v2tot5T2HEYz2kE607q7C02hJGymfULfjnA1nPqCDqrTfCbUaBGt8ImdFq1n
NETa6NGadFUJdWMFuLJTyhvYhKaTkqIrrNGc8gXaBnv0xxbz50YuaNH3kaZe
NzTNU3ZBQkef7KYfI3ui9UZLvj170DciFNuLvNDedWITPwb6/Rhr4bcP+g9K
cRxt
           "]]}, "\"\[VerticalSeparator]1,2,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]1,2,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJxF0GlI0wEUAPClK1ySOs3wKI9G5FULTSpz80zRppKJVJSWx0wZm3fTqaU7
1Mw80073n6VGl1JYumyFjiz74BHJzANUiq6lbl41Wwfkew8ejx+P9+A9xzhe
ZKIBiUQK+5v/6lfNCiuIvcAk/Y/0phyPQNlbn1XzjdVsa9k0WKBoJpFlWvCv
emHYD8LQd9UKskarJSzAdvudg+cIGjh8WDk7Q3iAfauExgcyA8FUbXRbVXw4
mPmUfyjfLApMZCjujx05Cp4IGR/SBcWAEw/mquP6T4H95Evkfm4C2LhjkmQ7
yQa7zgVzvUuSwV6dNi8YBhxwa0jstpc8LvjZejM9tTQVbNPRPNrWkwbeKtSl
ya0ywDHulOripEy8zznsllKaBeYxIngcTTY48Eqxm2gnH6w0L2hcJ84Bn0nd
0ch6lwuWWVrUGpjmYV/1mEmLz8f5qcrRR0QB7h+kGRipzoI7uPLU6dpz4FKr
gpFc90LwrkGiIXgcPauTOi2KisCcUPnd445C/E+LR9lyH7rP6VU8K1kEnrPd
t6aILAart1B03+6hmwLm1aahErA7n8k4PY8WDNwU82uKweNXP1Sn0EvAlpmS
lSoVmpLmH5uWXQoeyjthJ3E8D27/GdWY9xp9+HqSvSu7DNzLGlk2MbsAXnRg
v7nzAO2T1B/nFFoOjumqjx7VoPd6CgKCKi+ChwX+Lmtr0FndFKryEvphxOUJ
v2tot5T2HEYz2kE607q7C02hJGymfULfjnA1nPqCDqrTfCbUaBGt8ImdFq1n
NETa6NGadFUJdWMFuLJTyhvYhKaTkqIrrNGc8gXaBnv0xxbz50YuaNH3kaZe
NzTNU3ZBQkef7KYfI3ui9UZLvj170DciFNuLvNDedWITPwb6/Rhr4bcP+g9K
cRxt
           "]]}, "\"\[VerticalSeparator]2,1,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]2,1,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
FtZt6JkF4wqP2tMGbpjLXMlb1ToLpHXUwdfObmgU8+eL/aNZuOdZxHYg2A0v
1DM93VkzC19aWmVTE9wwzP7fRoGqWRD5b9yWftUNqz2GLvAS2DSSNcbsnhvW
01Sd++7NAnlAovTWMze0Dw29vL5uFmqVdF9xDbnhuz7hh7ItszCd7v3jxDc3
bGqJZqp9NgspYa08k6zuyKtT7bf2ehaky94WZfG447SI3kn7j7PQ2jumrCvi
jmm3YjoFx2fBiXWpa0nCHTfuOn8zdXYWvsuzuhXvc8fvjiptu78S+7lvXrJW
c8dtBQ2z9kvEfqkSCSy67rhSuWWgmsCtTYpb75m7I/fN/YZ0wt95Xueuh4M7
FgtervpC7LcsaquzydsdcwvVS/M+z0KakffA4wB3fFOgUKHYNwsy4WdOBkW4
Y5D2hryfHbNwzCRywbPHA6v2JNkVjsyAVv0KW0+AN27dPDbEyzoNqp5TStnh
3pjmti7ZijEFBzgHvD2o3thQ/uy4xeAU7L73NEsm2RuTvi+mhXdNgZjjg/al
S97Ikmk8e6B+CgRZyr435nsj+DAOdN+cAu4blyTjK70xaJOT/KX8KWC1jrO1
qPHGnCa++oeXpuDX6pnzwk3e6FrQuGCdMgWLhd61n5964+8dtzYHJE3BtJHt
xI3X3qiVdf7Qr/gpGF3UETjz0RtjjvepvyXwQI6i7uEJb3RnrS5sSJyCbi2J
M+x0b5yTTnT0S56CpzP8JT0rxH7Bub/D06egKZ2lN5v5GB7Je72RfGUKatW+
sXpyHcOv2v81r7s+BVKP5ll+lB/De/RpXquDU8BV95lp62cfPMF8Z3HO7Qt8
tbwS/3DOB2kpp965GX+B3hlTbttlH0za1KvbqfQF6qgsGV+ZfHFbn87Xxu1f
4NrWOqGLXL7InO6s9ZzrC1BrT13bs8UXnS49l/ZfnQQfMwmJpzt8cfE7p6nw
zCQYf3lf4bnXF6vF2YV3f5qE/bEp+/4d9EXuVyXqH3smQUBYtzYPfdH6vdzh
o88m4WfVqpqqCWFf0k6/8WQSBo3utvTa+WLGm6B/jc2T8GTMW++0uy9qOZFq
XQhcFiX6YuNJX9zfbjWu+XgSaAKvLW+E+uIsW4zaatskBNyO69cn++I017EJ
3s5JsNHXcB6n+WIxa13oj+5JyOvNenhTyQ9H3LrqHcwnYe+iQcChxONYrht7
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
FoisOiVymS8WWX1CxnvXeEHp9/oTIYKxWLE22sGUtQ7oBkX1lqKx6Fl8c6mC
vKZZkXmIa9/2WPzw2+FJjuVXTc+RficuyVjsp7XUOBR+1ty29/StaelYvK4k
kZjX/lqz/yzXnw65WKTfnJV4FFavmdZaalasEIungzZ8DZy9rmnMg9fJKrHY
wPsi8bTlGU02x490l0OxuOtf9ZixgJRmc+kZ0NCKxW+P44fNNg0fDl/kSRPW
j0XN2kRGTL+9psLhytEfxrGYZNtz3G8tWXM+UUf+nUUsdnVdVnOduKNZ1jtE
qbKNxXfmz2r1/3uq6b4j/O1Fh1i0XnbYOib5QVPUn1/ipGssLrF+GvTMnNbs
fXgrxNArFl9dSh+JzfihmcJq0L7LLxY5hxcKysKYwdDiswDrqVjU4z5ON0jh
BJa8qGOjp2PxDj9f38N9m6Hxi+CDprOxaKZpXTWWJgpnFarY86JisXBU/vZQ
y044QDI+Ek4m8t/4bz7/nxTMdk6U28XFYr5kjw8nixyUCMb+VKDF4vhO+bzG
QXnie0rEiC81Fn+ZnFQ9kHgQhG/X5CxkxuL5l41/hs+oQbLutHrFtVh8kmFw
YmwcQT+NeiGuKBb332T648asA0yD2wY9y2OxmvTMh09QD+p3P5TFW7Go84mR
ybXZAM6EWMX8Vx2Lb4pUVegMQ9jXMvfq1/1YfC18MTS40BimOePF3tcT/Pdn
rN+w3RSK7HcE3m8h6uX4t3RPTzNwLqpvyWiPRdt7IleXfM1hC92WL6iTiCdR
WMx2vwW8VmO4m3UT+ZLlLlAbLIAWl1Qt8y4WH7ItXyRvsATdNxIsHO9jsePp
bRjZbgmhgoV/zIdiMZXnbUPBbksocxBbvTQWi5ERpizSRH/3X8v7PjgVi5eO
LLCJylnC+jHhrxILsXjU7IsJmw7R/1KX5058i0VvoZdWzWctwe/E5qnqlVjk
KDZXbu+1hJw7aWM/f8eiz54tOel+VnBslZ2xnZmM2QKKo5yHrIGU1+HfxkrG
YI5m42V7G7h8+PysDzsZHTYbrmY028KdEW0/zg1kbCT9Z2oYag9PKcxfbnOR
0V9AVyAy8igMSzz2suIhI8sOzV9nuxxhpYP0+TsfGXk22xhdcHUBac7fgxpb
yDgdeH5S/JIH4K16xxFhMqpy8HC8kvCCo+YR76lbyVh8bNC3sN4bgr6q2EuJ
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
P5tLY0lKde31fAmE28wNNTOhMWAgQWliFvFzeDCXs5DG54OD7hmpEtDKKXUy
XkzjgiXdq75ekcCBjjHlaUtonOKe/1knSQIlU7aZ6QCNR5Tt+p+dl8AE25S0
ZEsaj+oUzv1J1h4R/GTV5TSe0+IPdZPzuTmmJ+OtaGxTmXzr0TUJDOuMHFBe
TWMUXbJ69W0JbJ5a6XnSmsbY3iM1hx5I4JbtpHo5Gxqv2iyOHfZcAr8idlqF
2pH3Q3YFpdZIYE3u7ZwBB5JP4DSmu10CFzr7tAM20DhdJm/U3gEJSKZaxnOb
aNxqlHkwQZGDJXaUnNdWGlNN2kY1T+OAiaz1b3WiUXRp3Mi8ORw05aq3OrnQ
eOnEjsnxyzgwEu22r3elMczcsJ9bz0GY2v2n9m40nh2u9XvdTg6q7AaNyj0I
vnFB82z3cqAZtSrZajeN4OJ9/9phDvwfnFZ+todGYdEv00mhHBSJPoWY7aXx
vNYQ04RwDsZPm8Hl+NGoOX3tZJ0IDtzs9zsZB9C4BmbkdR7jICfqUVnaQaJ3
SkKJdhAHCnlDzXSOED8a3pUaHeBgo9g2Lfkoyad2sDpwDwc3p52frBpCY8e9
RtdwVw4G7Nti4o8Rv4+UPVy1kYNVx2cPKEcQf9lv39pnzUFi3hHPk1E0Hmvc
bhBhyYFIXFQnd4LGiJLo5L8LOTBTV7IKPUmjyoplIzuMOKAdNuUMUDTaeISY
3pvFwafjV7QDWBpnG6fm5OtwYPhQHMedonHWmV8/1mhzECoxkfOKI/HTVXXP
kP1K9TD/1jPED9Pa7v4/Xn39689O52j8qdgrvGbMgV+0in39eVLfZ66r2izm
4NnD7U/tk0j83MTqY1YcjONSjcqTSb1nzrsldeRgp8aPS1ZXabzc9EzPzJ2D
7PXmys+u02i41CbgxyEO5E+cCDG7SWNT06iihJMcOOa/leTcovH4x96exIsc
9Gl4lKVl0Kg1ryE35BkHo0uLn03KorHObdvR7rcczNyjmRedTePL0S+L7rZw
YDnmWEZPDo3yp+SS1nIcbM35dH1nHo0uyoubA/o5CNi6+EJVPo35a3JSvg0S
vv6djbV4TKNt+c++SDkp3Ljee+J2IcE77J8vDpVC4er1oapFNN6pH+VkLC+F
99LMAzElJP/qaWoRMlLojlPe01dKo4N36UDwLw4UTX1c3V7R6GForxTazYF2
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
aW3vPxAiFdSyceAfD/8DJBdg8Q==
           "]]}, "\"\[VerticalSeparator]2,2,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]2,2,0\[RightAngleBracket]", 
         "Tooltip"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[VerticalSeparator]1,1,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]1,2,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]2,1,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]2,2,0\[RightAngleBracket]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7230743909997816`*^9, 3.7230744598982525`*^9, {3.723074559015658*^9, 
   3.723074566777589*^9}, {3.723074608785977*^9, 3.72307467516138*^9}, 
   3.72307471663338*^9, 3.7230750233165736`*^9, 3.7230806173960295`*^9, 
   3.723087871331875*^9, 3.723088334036587*^9, 3.7230888487210703`*^9, 
   3.7231153663274465`*^9, 3.723119254498129*^9, {3.72315538292992*^9, 
   3.7231554060162644`*^9}, 3.723155514650848*^9, 3.72315555794882*^9, 
   3.723155598023074*^9, 3.723155640962448*^9, 3.7231561802622614`*^9, 
   3.723156575666983*^9, 3.7231567142923455`*^9, 3.723156873904045*^9, 
   3.7231569566915045`*^9, 3.7553301932267513`*^9, 3.75533101785052*^9, 
   3.755349427465087*^9, 3.755392002358083*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"Hamiltonian", "[", 
    RowBox[{"defs", "/.", 
     RowBox[{"T", "\[Rule]", "1000"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"part", "=", 
     RowBox[{"Part", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Addr", "[", 
         RowBox[{"1", ",", "1", ",", "k"}], "]"}], ",", 
        RowBox[{"Addr", "[", 
         RowBox[{"1", ",", "2", ",", "k"}], "]"}], ",", 
        RowBox[{"Addr", "[", 
         RowBox[{"2", ",", "1", ",", "k"}], "]"}], ",", 
        RowBox[{"Addr", "[", 
         RowBox[{"2", ",", "2", ",", "k"}], "]"}]}], "}"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"EvolutionPlot", "[", 
      RowBox[{"H", ",", 
       TemplateBox[{RowBox[{"1", ",", "1", ",", "k"}]},
        "Ket"], ",", "t", ",", "part"}], "]"}], "\[IndentingNewLine]", 
     RowBox[{"EvolutionPlot", "[", 
      RowBox[{"H", ",", 
       TemplateBox[{RowBox[{"1", ",", "2", ",", "k"}]},
        "Ket"], ",", "t", ",", "part"}], "]"}], "\[IndentingNewLine]", 
     RowBox[{"EvolutionPlot", "[", 
      RowBox[{"H", ",", 
       TemplateBox[{RowBox[{"2", ",", "1", ",", "k"}]},
        "Ket"], ",", "t", ",", "part"}], "]"}], "\[IndentingNewLine]", 
     RowBox[{"EvolutionPlot", "[", 
      RowBox[{"H", ",", 
       TemplateBox[{RowBox[{"2", ",", "2", ",", "k"}]},
        "Ket"], ",", "t", ",", "part"}], "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "2"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.755329037034*^9, 3.755329128234776*^9}, {
  3.755329237137632*^9, 3.755329238094406*^9}, {3.755331025770396*^9, 
  3.755331026112404*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{GraphicsBox[{{{{}, {}, 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1:eJxF0GlI0wEUAPClK1ySOs3wKI9G5FULTSpz80zRppKJVJSWx0wZm3fTqaU7
1Mw80073n6VGl1JYumyFjiz74BHJzANUiq6lbl41Wwfkew8ejx+P9+A9xzhe
ZKIBiUQK+5v/6lfNCiuIvcAk/Y/0phyPQNlbn1XzjdVsa9k0WKBoJpFlWvCv
emHYD8LQd9UKskarJSzAdvudg+cIGjh8WDk7Q3iAfauExgcyA8FUbXRbVXw4
mPmUfyjfLApMZCjujx05Cp4IGR/SBcWAEw/mquP6T4H95Evkfm4C2LhjkmQ7
yQa7zgVzvUuSwV6dNi8YBhxwa0jstpc8LvjZejM9tTQVbNPRPNrWkwbeKtSl
ya0ywDHulOripEy8zznsllKaBeYxIngcTTY48Eqxm2gnH6w0L2hcJ84Bn0nd
0ch6lwuWWVrUGpjmYV/1mEmLz8f5qcrRR0QB7h+kGRipzoI7uPLU6dpz4FKr
gpFc90LwrkGiIXgcPauTOi2KisCcUPnd445C/E+LR9lyH7rP6VU8K1kEnrPd
t6aILAart1B03+6hmwLm1aahErA7n8k4PY8WDNwU82uKweNXP1Sn0EvAlpmS
lSoVmpLmH5uWXQoeyjthJ3E8D27/GdWY9xp9+HqSvSu7DNzLGlk2MbsAXnRg
v7nzAO2T1B/nFFoOjumqjx7VoPd6CgKCKi+ChwX+Lmtr0FndFKryEvphxOUJ
v2tot5T2HEYz2kE607q7C02hJGymfULfjnA1nPqCDqrTfCbUaBGt8ImdFq1n
NETa6NGadFUJdWMFuLJTyhvYhKaTkqIrrNGc8gXaBnv0xxbz50YuaNH3kaZe
NzTNU3ZBQkef7KYfI3ui9UZLvj170DciFNuLvNDedWITPwb6/Rhr4bcP+g9K
cRxt
              "]]}, "\"\[VerticalSeparator]1,1,0\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]1,1,0\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1:eJwUV3VYVG8TBUlBwaBVRFBKUEpSmaG7Q0EaBFQkRKSX3RWJVWkVLLosQFBp
lFJQwSDUHwLSuWsRivHdb//Z5zwz79yZc2bmvXeXV5DtsXVMTEwlbExM//+f
//bb3NB3SVv00j/ix4DTxZHK+vnvYDR2+6vovwyI4F70Fc4fBx2ubS5/fzJA
TX9HTVrIIojXfl+t/saA6OYSJtb876D0X6j5xAwDPn7ULoXkVRC6MizNGGKA
5sqARXTIH8h43njcuJcBf66es/iZx4IZLIHf1ioZIFfSKybIz44k+zzJM/kM
cKnZ9kMlmRPv/Ll242QGAy62+j2z/cOFrXl2oyfjGdD4uvpacMhGfLbzTNj3
cAYsDP87lTLJi46k4sshpxiQslwsNiC3GZ0O9Q7qHmNAyR8zrknfLfjd8rDF
fXcGNLN++/49byt6TSVGjLswYIA7+9O6//gw7EfR+p8Epm/RfraZXwB5op7w
LBD+7CITlWJWgjjk/E8zj4gnuot2bX+yEMZ/sz4/SjxPVVohXrtNGJ0y7R97
RDDAcv/AKYs/Ish98GNlC5Gvr2rMYRe17RjX06hJI+qJPSSuczJkB5bykV9p
E/Vm6T+XjbojipJvN3faEHzcNQvkS57cieo3iy2VWhjgJcP170WqGB7JFCu0
ekXkJ/cp9J3cLmSq31Ag+pEBUQqVMx+7duEW8VHdnZNEvirnXMd8xXEP36Fv
nxcZkKHm+HaWRQJPePrpbPhB5K8lY/Q1TwItH2165rLCgNvavxtWD+3GLcId
0vcJrKrbq8D032686S6QuEr4txoUFHNE7MEGlar1tgyiPpMwEV5+SVwO7n28
OEXobW6cKvBAEhdNVOSFCb19rbexilpJ4Q0rfVMNQu9vdvSIPQtSSLUUedTx
hAGkw08X5ZKlMeFF9Dr9KgZwHc3yUpGUwajvjw/oEnxccfMb1GqTwSOvOGxt
0hkg7qVpruchi6ajuvR/FAbcP7bxqekfWdSrXVbqDyX66/joAdtre/H8M9UD
5n4M6Ayovu2kJocvTPq5XxN62gYn7PTsk8O4ufuxtfYM+BTqlOUfIo9TpiEW
RlYM8A+XWx/Msw8ZD1liSswZ8CPqX2z4nX2Y8oExPkVgMuntN5LxfrzK2jX2
j/DfQC32S5jcj9djD5zrdWDAS92DdEMdBfxAXTu8zY3gu724rDtVAYfstIwz
/BlwxJDX23JYASXG77X2nCH4fx6x462cIqpN+v5yojJgwmRs0CFaEa0SCkoq
0gg9XphlfOhSRFgKPKuby4Bgi4fmrkJKON92QoByj9CnV5Tjs68SvlnJyfiv
ngG/rZOe+jxUwgCttcnnnYReb79Gz7Ao4w/JkbiXrxmQZH9UNcBWGZ1rNEnR
7wn9Btq/MPKU8c6V2G2UTwyIG3F14llWxjSdE+fvjTCgcmb5qZyZCur3eRyx
GmbA6NdUWbM8FZRV07974gMDNq9JZx5fUkHRFUNLuTcM0GVtXUs0PYBmaixX
pzuI/bHxqE9J7gE8bybTvbmWAYUCP162/ziA85Jk+4NlDOjbeenAuIkqDu9f
F7TxKgPYZCRvMeeqoplrwGH180R9Si3sYj9UcevTw1vCCH19tY4EaZuoYffX
yZMRXgy4qv910OWWGr44coeyYMuA5xY0jP6uhlN7dX4dN2DAqqNEeY6xOvIL
7vM4rckAGY/GzbU31THa47TrSSUGOB93iBr4po7dX3gsrssz4MJp+tgPIw18
xJb4RFKO2C/RiWZbb2qgNUu5Fe8+Yr/Ei9UoftPAzbFKp5WVGbAjpW67tZEm
UqhPkq20CD6v2p4PvKGJ4+nh25gMif7Om1+8+FUTP8Wyy3QQ+VWUxzveMdTC
3vaRAXZPgs8HO1q6rmvh42LfbduCCT4bH0nNfNHCE12c2eZxBJ8dVmnshgcx
wUJeY+wSA0J7ZlZ3Xz+IAh90/KSuM6BokOKp9+Ug8kuYnT1TwoD+UZFuT4ND
OLnzabZqBTH/c9VK5GuH0Lfrr91KDcHnd/PrtxiHMEreWc/rMQP8fk+yNOlr
46R9b7nJIwZks8UF/JejjS/CB0PLiHl8ziPU/5OujWeG2koLyhnwU7DqkJA+
IMV5cue5WwyQ3WVaopoDmFZp2fOY6NejsuM8DnRAxn7TyRdkYv6EmxvqdiGS
i7s3eQYxYEX88O73ZxGFmbOoA6YMSCstPOKXj5jZwbVfQoMB0nJfLi6/QNQz
St9RL82AJ5UHn55fRnzL7jquJkLMz4HkJb5dOrhD86KRBA8DvtT1yxSZ6aC1
ZInDDCsDkrXF3ZTP6qAMj2dR3186iLcFZrTm6eC4W3gW32861Bs1dNq80EGf
rJ8zVQS2fcmxNrqkg1U+r9UymRgwb22/P1hMFyMLP72L4WBAfH+e9z9TXUzp
kKJu2cyA7c6LV1PCdLFsoKPt43YG1AxrvNyRp4uDJXZLurIMMPdOYLrXrYuC
Ma9/FKkT+z1g5/EXO/Vwl+CscTyxHwS+nrzpbKqHbUP9mzKJ/r0fVvtm9owe
Yg0nWy9xfxj+YmWPzNVDT0nSubyzDBgm2WhyduvhtaeyF2kxDDjLcivw6g89
LPqXqKRI9Adv0lyB5E591DfgF3EjMaBsg9rgQxN9dDyx1YEligGYfo7b4Iw+
+q1xDGidZsCzYQHtdTf0ceaN1bAIsY8s5W4Ht7TpY4vPsaPJR4n7L/JQYcy8
Psaw9+//Suw712ev+zW2GuAQxWxj70FiP/H5cK5oGmBndp7Vvb0MCPBa0azx
MsCq3fK6ooQ+UX925O17YIA8+f+kOVbpwGxW9Xb+gwHmKSbI5MzQISlbn62c
2RBNSvI2zHykw6apQTVfGUPcMuVp4tZLh6vKJ09I2BhiXAp3nU0nHUQpf2+M
RhD2TXrCzE/oUNKT3nszzxCfGHuKZDTSQX77nnVHnxtizvFUhU0ErjleqyL0
xRCzguYsAprpoPXYzK9f0Aj7dmmxx7bRoZV1JCcDjLBSqPbzv246mNqefmnl
Z4TNtk6C1/vo8CaX7d+GVCO8qv/PaXSEDkcWsxW7Hxnhhv0DTtYLdBjVlPNJ
HDbCOJk369x/0sEvqeWKPrsxvu/XSYxgJ+7jftsu5n3G2Cfyc4h9KwPCJKbW
mh2MUWjU9Fa4KLGfgyP3xcQSdnspFl2iv+ObN3hqFBtj2nq24oX9DODekJe5
/NIY7bhfl2w5QNwfTsqd1T+MMWTiipG/GgNESjtXg7eboOCzp3+aVBmQ/8Np
7z59E1wfs6d5HbGPpHUXXedPmuBXav1ZfWJ/VaSS08oyTTC03su5QpyY/09b
2441mODlmk+9FwSI9x/Z0iXxcRO8NDT7S5OTAQYRmtKjXKbIRwq9pkTo97Lj
lfNNJVN8ZyY+uDJFB/utnpecnU3xLLfdiHA/HbzuJ37rKzdF5VFR7qdVdJhd
E9mT8cYUbXQbt/rk0yHY5P5hq5+mqHbs+bXLGXRYvaJD27DLDA0/sx3sPE+H
uIm+xi5jM2z8oehnF00HdiV/RkKwGfr8TQuID6VDStzaLv1sM3xxcNQ2KZAO
/K9S7JmfEP4DEufOBNDhhoh4YvO0GXIV+U3qnaKDhP/DumheczzTRts1GEyH
2w+NF9TVzLGsUUFt6SwdlFiGRJfdzLGuYUHRIo4OddZBNtUJ5rjeaZIakUws
rlvr4oPvm+Ohi7yyf7Po8Hz+8iP5AXMM/7rU60jUM5DQuK1sjwVqBodWqNfT
wa3PyvKYhQU2pxR3ZHfQYXLXOFk8zAL5dxdbnCf6OSDobPXIDQvc4/NTOm6Q
Dj8a10/daLdAYX0rdpFPdIjmuinkvGCB6wMF55lG6bDuiIKZIJ8l0r1Pif4i
+o9W3Bbbp2WJnVzSkbNDdNj83bEy3dsSZVQv570ZIObDdZd9Is0S0x7mPOLo
oYPcs/mVmCpLXBl+eft+Kx00FR9dP/3eEu9OBnUJPaSD8XUy+P+zxALKi+67
xXRwZDMbd5W0QnsWu6LPRL3eQfyJdhZW2Bsh36Bxjg4kvds92tetMEHk879w
dzpcvHfmtEqrFZrvOd4aaEmHHEEQkJ21wo0rvmfytOnw7gnrJ15Oa+wKZd0T
p0CHj0uz92nbrPHS3nW7T+2mw2fZXjLbfmuUqjGbqxOhw4x7jS1Z1xqDlfOH
c7fSgZGVs3vNwRqN1/vd0uWlw3IXaTnsuDVWa719fW8jHf789X7+JcYa3Ti3
TfXx0IFVxeTayTRr3JFxXzxzCx24ju8LmCq0xs87H+XdFSL4urVV2/OxNdK+
nWH0itFB6N0q71C3NZ7mdLDKliX44xz+7DhsjW1nfWbTDhD8nS47b85mg+7z
GSNsFnRQLr10+JmQDa7dz/0UcITgc+i0jK6cDTayjKePe9FBZ/ORtUawQbNQ
9/rpkwS/hodeqdnZ4IsiY2ZWon+tosVzH/jaoFVp10BfOMF3JUeIfBRxXjYj
ZkMUHVwmF3TLLtng5YDcM2cjCf5F3vJJ5NvgkQbxiJ9hdDhh9XjqZo0NLgcG
ns8OIuYp/kat0HMb3LDnRO5pXzqE11Fomf/ZYMuzSamnzoRedF8XHoYN9m2i
xvSb0+G8hPm+5HW2OLo3zYT/EKHfEUUmVgFbnA0777K8lw7XWtcKfx60xWOU
wculHHTIXxkNO2NtizcibOyTlhahTK7TiOFtiwu1LhW7Jhbhvucd4RPhtrj0
R1H167tFeHglbX6CZotars1u/h2L0PgirMn9li2eSskTnq1dhFamo6kfq2zR
+pJmW+v9Reg6gJ4OHbbYelx1aH/pIrw+sUf59XtbTInf6WpfsAiDuVxsZgu2
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
/gMhXgpu2TDwj4f/AfUpWVg=
              "]]}, "\"\[VerticalSeparator]1,2,0\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]1,2,0\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1: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
9enfCGJ5Ny9sqgNOlePK9uVsjEnu2zOuVwfvuJdyrFeyMVJq5rS8eB2sVOFJ
3V3Fxg6wjJN4VwuxO1ZFr1/LxoN1UeWS5bXQHRs1Vm1M66l+fjj3ZC1oVT90
XbmOjUKXLDIY5rVwjCfTXmzGRtOEhXVXZ2pAbmdBcY4lG1/orvlqcLQGPInP
Ssob2ehfp7VWXrcGaqpNz6ZYs7H+uyBH/3017FHt8Dq7jY15M+xLC5yroWin
Yq/QDjZa775R7qBQDVPEQetoOzburo7kM/qrYGtNSfUvBzaWB/LaiGtVkPnp
p3bobppPalflz/Aq4Ktapow5s9Gpe/Gi7fZVYGaXIOTtwkZyxc1TZSurgGS8
CBl0ZWOVanKjhEIVvKlRH3R1Y+PqNKNSYeEq+Knh2VZcysZFn+wEmj6WgfTD
5ruKN9kYtNVovOdRGej4adbFVbLxls2rOE5NGVjKnC79Uc3GrhbprQ4lZeBS
3X/lYB0bGeV3NpgVlkGoy7rMrno2esW/tV9FY/a/i0kWDWyU6RAL+VlUBlev
TJwpaWTjTeJNhcX1Mmjc4hitfI+NCy+dL2un633j5cfi77NxWeEvZ+blMviW
LOX38yEbx9klT2JSy2COqb/H4VY2qrE+mi6JLQPtN63O3W1srJT99XTlwTIw
ZyzdgR20P455J++YlIGTDmtjaRcb51/5ar5buAyCngyuU33GxjXn+S8/3i+F
+BA0PPeCjeHpAw3NEaWQp5C99FcvG4+4NFwvWlIK9benF3q+YmO7zL47Ba03
gC9aK7HhLRt3EdGxCVMlIFIiO6v8PRu3/O7a2JdQAmr2IZMLP7Kx6IjMog/K
JWCfufzjbx4bRX+6n1FZdx18MeGV1ygbE/yHFxl0FANziNf1Yoyef/HGjCKv
Yrh0zrrF6gsbTRYZh+vPLoaaFVcabn5jY+z+WbZyN4ug8/msKvUJep6FpU4x
h4qAd9KtmJxk47uVCl6rNIpglnpD7vRvNvo9u+SWyi0E5fvKF31m6M/bXCKu
5lYhrPYJJ3v/srEw9tiHdamFsF2qh7FpFolf9DQq/KIK4Ujl6ohKIRLnh3Td
MPIrhOg9ScGaoiSOiARlmnoUwsU/456c2STaB23x6HQthPL87fv/SJB45ut8
QoPGj22KHf3mknikNVHNaH8hfOCLbX0pTaL5Uquvcw8UwkzSEbSZTyIfNouX
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
              "]]}, "\"\[VerticalSeparator]2,1,0\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]2,1,0\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1:eJxF0GlI0wEUAPClK1ySOs3wKI9G5FULTSpz80zRppKJVJSWx0wZm3fTqaU7
1Mw80073n6VGl1JYumyFjiz74BHJzANUiq6lbl41Wwfkew8ejx+P9+A9xzhe
ZKIBiUQK+5v/6lfNCiuIvcAk/Y/0phyPQNlbn1XzjdVsa9k0WKBoJpFlWvCv
emHYD8LQd9UKskarJSzAdvudg+cIGjh8WDk7Q3iAfauExgcyA8FUbXRbVXw4
mPmUfyjfLApMZCjujx05Cp4IGR/SBcWAEw/mquP6T4H95Evkfm4C2LhjkmQ7
yQa7zgVzvUuSwV6dNi8YBhxwa0jstpc8LvjZejM9tTQVbNPRPNrWkwbeKtSl
ya0ywDHulOripEy8zznsllKaBeYxIngcTTY48Eqxm2gnH6w0L2hcJ84Bn0nd
0ch6lwuWWVrUGpjmYV/1mEmLz8f5qcrRR0QB7h+kGRipzoI7uPLU6dpz4FKr
gpFc90LwrkGiIXgcPauTOi2KisCcUPnd445C/E+LR9lyH7rP6VU8K1kEnrPd
t6aILAart1B03+6hmwLm1aahErA7n8k4PY8WDNwU82uKweNXP1Sn0EvAlpmS
lSoVmpLmH5uWXQoeyjthJ3E8D27/GdWY9xp9+HqSvSu7DNzLGlk2MbsAXnRg
v7nzAO2T1B/nFFoOjumqjx7VoPd6CgKCKi+ChwX+Lmtr0FndFKryEvphxOUJ
v2tot5T2HEYz2kE607q7C02hJGymfULfjnA1nPqCDqrTfCbUaBGt8ImdFq1n
NETa6NGadFUJdWMFuLJTyhvYhKaTkqIrrNGc8gXaBnv0xxbz50YuaNH3kaZe
NzTNU3ZBQkef7KYfI3ui9UZLvj170DciFNuLvNDedWITPwb6/Rhr4bcP+g9K
cRxt
              "]]}, "\"\[VerticalSeparator]2,2,0\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]2,2,0\[RightAngleBracket]", 
            "Tooltip"]& ]}}, {}, {}}, {
       DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
        AxesOrigin -> {0, 0}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, DisplayFunction -> Identity, 
        PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
        DisplayFunction -> Identity, AspectRatio -> 
        NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
        Identity, Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
          AbsolutePointSize[6], "ScalingFunctions" -> None, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
               Part[#, 1]], 
              (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
               Part[#, 1]], 
              (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
        True, PlotRangePadding -> {{Automatic, Automatic}, {
          Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{
         "\"\[VerticalSeparator]1,1,0\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]1,2,0\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]2,1,0\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]2,2,0\[RightAngleBracket]\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
                "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], " ", 
    TemplateBox[{GraphicsBox[{{{{}, {}, 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1:eJxF0GlI0wEUAPClK1ySOs3wKI9G5FULTSpz80zRppKJVJSWx0wZm3fTqaU7
1Mw80073n6VGl1JYumyFjiz74BHJzANUiq6lbl41Wwfkew8ejx+P9+A9xzhe
ZKIBiUQK+5v/6lfNCiuIvcAk/Y/0phyPQNlbn1XzjdVsa9k0WKBoJpFlWvCv
emHYD8LQd9UKskarJSzAdvudg+cIGjh8WDk7Q3iAfauExgcyA8FUbXRbVXw4
mPmUfyjfLApMZCjujx05Cp4IGR/SBcWAEw/mquP6T4H95Evkfm4C2LhjkmQ7
yQa7zgVzvUuSwV6dNi8YBhxwa0jstpc8LvjZejM9tTQVbNPRPNrWkwbeKtSl
ya0ywDHulOripEy8zznsllKaBeYxIngcTTY48Eqxm2gnH6w0L2hcJ84Bn0nd
0ch6lwuWWVrUGpjmYV/1mEmLz8f5qcrRR0QB7h+kGRipzoI7uPLU6dpz4FKr
gpFc90LwrkGiIXgcPauTOi2KisCcUPnd445C/E+LR9lyH7rP6VU8K1kEnrPd
t6aILAart1B03+6hmwLm1aahErA7n8k4PY8WDNwU82uKweNXP1Sn0EvAlpmS
lSoVmpLmH5uWXQoeyjthJ3E8D27/GdWY9xp9+HqSvSu7DNzLGlk2MbsAXnRg
v7nzAO2T1B/nFFoOjumqjx7VoPd6CgKCKi+ChwX+Lmtr0FndFKryEvphxOUJ
v2tot5T2HEYz2kE607q7C02hJGymfULfjnA1nPqCDqrTfCbUaBGt8ImdFq1n
NETa6NGadFUJdWMFuLJTyhvYhKaTkqIrrNGc8gXaBnv0xxbz50YuaNH3kaZe
NzTNU3ZBQkef7KYfI3ui9UZLvj170DciFNuLvNDedWITPwb6/Rhr4bcP+g9K
cRxt
              "]]}, "\"\[VerticalSeparator]1,1,0\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]1,1,0\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1: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
              "]]}, "\"\[VerticalSeparator]1,2,0\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]1,2,0\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1:eJwUV3dcze8XLw0pKpQGikpLkUoLndPee9DeA2lIu273XppGQ2jQXmalkErR
kEJWA9+Whva9KA1Rv8/v/nNf79c5z/O8z/uM5/nsdQ+w9NrAwMBQysLA8P//
mV9/jXW9f6sLXV4nfnQ4WxKhoF3wCYZjdr2NWqNDOMect0DBKGiw73RcW6GD
svbumtSgORCrnV+u/kWHqMZSBuaCeVD8L9h4bJIOX7+ql0HSMvBfH5Sk99NB
banXJCroH6S/ajip/44O/26cN1nJZ8J0Jv9fq5V0kCl9t4ePlxVJ1vni5wro
4Fizc0ExiQ0r/mXfPJ1Oh0vNPu2W/9ixNd9q+PQFOjS8r84ODNqCHcLnQubD
6DA7uH7myjgXniCVXAs6Q4criyV7emW2osOxd32aXnQo/WfEPu69DX+bHjd5
4EKHRuZf8/P529H7e0L4qCMdejkyBzb8x4MRC8WbVghM26bevpV3B/JEPuec
JfxZBccq95jx4Yj9ulo+sZ/Q3uTsg0n8mPzLPG6YOE9JUu6CeosAuly1fuIa
TgfTg71nTP4J4tajXyubCL7eStHHHZV3YUJXg1oyEU/MMRGN00G7sYKH/Fad
iDdD+5V05F0hPPBx60sLQo97Rv48SePCqH6rxFS+iQ7uUuzrr1P2oPPVPUVm
bwl+MgPBn2T2Imvd5kKhr3SIlKuc/NqxFwVFhjWFxwm+iuedRrxF8CDPsV/f
5uiQrmz7cYpJFM+6+WhsXiD4H5HS+5kviraPudsdl+hwR/1v/fIxMRQUaJN8
QGAlzXdyDP+JYYnLjoRlwr9Zp7BkY/g+bFGs2mRJJ+IzCBHk4hVHhqB3T+a+
E/k21k/Z8VAclwwUZQWIfHub72QWMpPAUjNtQ1Ui37+saOH7ZiXwkqng47bn
dCAdfzEnkySJV15HbdCuogO7Q4a7orgUXph/cliT0OO6s0/fkRYp9Hy70dIi
jQ4i7mrGWq7SaDusSVun0OGB15YXhv+k0ax2Ub4nmKivk8OHLbP3Y2q70mFj
Hzq89Ku+Y6csg30GPRzviXxaBsYLu3XL4OXpBzG11nQYCLbL8A2SxZ+GQSZ6
ZnTwDZPZFMh5AFcfMUWXGtNhIXI9JuzuAbz5hT76ncBk0sdfJP2DWMbcMbJO
+G+mlvjEjx/EuzGHz7+zocMbzaM0XQ05nKGuHt/pTOjdWlLemSKHNKsj+um+
dDihy+VhOiiHh0fvN3edI/R/Fb77o8wh1B/3/mNHpcOYwUifTdQhdIsvLK1I
JfLx2ij9S8chNP/tH6qZR4dAk0fGTvzy+K/l1A7KfSI/74Q2fvOWx9GlrPT/
6ujw1zzxhecjeSQdWR1/9ZLI18efUZNMCsgqMRT75j0dEq0dlPwsFdCvRo0U
9ZnIX2/rD3q+AtZfj9lJGaBD7JCTHeeiAuZrnIq7P0SHysnFFzJGimjd7XrC
bJAOwz9TpI3yFVFNWfveqS902LoqefXkb0WUW9I1lflAB03m5tUEw8PopMx0
Y6KNmB9bHDxL8w7jDSOpzq21dCjasfCmdeEwrouTrY+W06Fb+PLhUQMl/HVw
Q8CWG3RgkRLPZcxTQhcnv+MqcUR88k2sexaUUOrF8W0hRH69j5wIUDdQxuGf
46fD3elwQ/tnn2MugU/cpcxa0uGVSTJGzSvj2n6NPyd16LBsK3o7S18FZfkO
uJ5Vo4OUa8PW2lsqmOp61um0PB3sT9pE9v5SwZEfnCY5snS4eJY2sqCniu9Y
Ep6LyxDzJSrBaPstVTzJdNuM6wAxXy7sqTn0SxWlYuTPKijQYfeVp7vM9dQw
k/o8yewIoecNyzj/m2q4mha2k0GXqO/8mblLP9VwIYZVqo3gV3H7gu1d3SM4
2TrUy+pG6Plwd1NHzhF8V+K9c2cgoWfDY4nJH0eQ0sGWaRxL6NlmlsqqexRz
TWRVRy7TIbhrclks5yjKfNHwkcihQ3EfxU3rx1GUFTUKPVdKh55hwU43nWO4
LvwiU6mC6P/panly9jEkd6xZLdUQes4b5+TSj2GGrL2W+xM6+PwdZ3qmrY4M
Nu9uGzymQyZLrN9/Weo4EdYXXE704ytO/p4Vmjqm9reUFd6mwwpf1TF+bcBb
9uPC53PpIL3XsFQpC/BepWnXE6JeHaRHOW1ogJvkDMdfk4n+E2isf7oXMbuk
k9stgA5LIsfFPociKjNmUHsN6ZBaVnTCpwCxuo39oKgqHSRlflxafI3oqZe2
u06SDs8rj76IW0T8zeo0qixI9M/hpN88ezUQ1S7piXLS4cfTHqliIw0MFi+1
mWSmQ5K6iLNCqAaacroVd6/RQKTFP705XwPZXMIyeP7SoE6v/qXFaw28nLEy
WUVgyzcbV4d/a+Bnz/fKVxnoMGNufTBwjyYWFA18it5Ihws9+R7rhpr4uE2C
um0rHXbZz924EqKJ73rbWr7uokPNoOqb3fmauF5q9VtTmg7GHvEM9zs1EaPf
LxSrEPPdT/jka2EtNOKb0r9AzIcdP0/fsjfUwun+Hu6rRP0+CKn9MHVOCz1q
2FjeEfeH7h9m1og8LbwgTjqfH0qHQZKFGlunFja+kL6UHE2HUKZc/xsLWvhy
PUH+EFEfXInTheLC2uitwyvoTKJD+WblvkcG2hh5arsNUyQdMO08h845bby4
urH3yFk6tA/uUN9wUxs3fzQbFCTmkanMncCmFm0c9fRySHIg7r+IY0XRM9pY
wNpz8Ccx75za3/eobtdBRqrRlndHifnE48m2pKaDs5n5Zvf308HPfUmtxl0H
u8VkNYWI/ET+251/4KEOyhesS25cpgGjUdXHmS862HIoXiprkgaJmdostxl1
0a80f/PkVxpwf+9T9pbSReXvbgbO72hwQ+H0KVELXSy8wvHU4iUNhChrN4fD
dVGVW0uA8TkNSrvS3t3K18VxfTfB9AYayO7at8HhlS4+P5kix03gmpO1ivw/
dLE2YNrEr5EGR54Y+fTw6eHK3iOsMS00aGYeykoHPezjr/223kkDQ8uzb8x8
9HDK0o4vp5sGH/JY1jen6OFz7XW74SEanJjLPNT5WA8PH+y1M5+lwbCajGfC
oB6WS33Y4LJCA5/EpuvarPrI0KuREM5K3Mc9lh2MB/Txr+BKP+t2OoSIfl9t
tNFHHDbMDRMi5nNgxIHoGH38Yy3BpEnU94XGzW6qJfr4aBNLyexBOnBszr+6
+EYfozjel247TNwfdgovqxf08frYdT1fZToIlr1cDtxlgND+4t8zJToULNjt
P6BtgHLR+xo3EPNIUnPOaea0AfKfrwvVJuZXRQo5tfyqAebUudtXiBD9P7C9
xaveABtqBt5d3EG8f6TLfouMGuCj/qk/amx00AlXkxxmN0QgBWfLE/l70/bW
/pa8If41Eulb+k4D6+1ul+3tDTGPw2pIoIcG7g8SfnXfNkTHYSGOF1U0mFoV
3Jf+wRBDNRu2exbQINDgwXGzFUN09nqVfS2dBsvXNZI37zXC099Yjr6Mo0Hs
WHdDh74Rfls45GMVRQNWeV96fKARJqyl+l0IpsGV2NW92plGSDs6bJnoTwPe
t1esGZ8b4X+9oufP+dHgpqBIQuOEEe4v9hnXOkMDUd9HT6O4jPFaS/LevkAa
3HmkP6uibIztDXLKv0NpIM/UL7TobIxf62cPmcTS4Kl5gEV1vDFK2o1Tw5OI
wZW74ULgA2N0usQlvZZBg1cz1x7L9hpj5s/f72yJeHrjG3aW7zNB+8DgCpU6
Gjh3m5l6mZjgwJWStsw2GozvHSWLhJigoliJSRxRz34BodVDN01Q23NFMraP
BgsNm77fbDXBI9pmrIIDNIhiv8VvP2uCEv58MwzDNNhwQs6Ij8cUt3ieEfpD
1F9ySUtM9xFTHGOXjJjqp8HWedvKNA9TNFC6lv+hl+gPp73WCcmmWPko6/HG
LhrItM8sRVeZIs/QmzsPmmmgduhxztnPptg+HtDB/4gG+jlk8F03xReU1533
Smhgy2I06iRuhueYrIq/EfF6BPAmWJmYIT1ctl71PA1IWne61HPMsFzw23qY
Cw0u3T93VrHZDM/sO9nsb0qDLD7YIT1lhrJL3ufy1Wnw6TnzABebOY4FM++L
laPB199TD5J3muPt/RvEzojR4Jv0OzLLQXPUrDGafipIg0mXGkuypjmmKBQM
5m2nAT0jS2zVxhx9NvnkanLRYLGDtBhy0hw/Hvn4/v4WGvxb83j1I9oco9h2
fu/mpAGzokH26VRzPJr+QOTqNhqwnzzg973IHJn3PM6/x0/olbtd3e2JOd7/
dY7+bg8N+D8tc/V3muMNNhuzTGlCP7bBb7aD5jgZ6jmVepjQ72x5nDGLBVJn
0odYTGigUHb5eDu/BQpV5A34nSD07D8rpSljgaNMo2mj7jTQ2HpitQEsMDDY
pW7iNKGv7rG3ylYWuFCsz8hM1K9ZlEjeQ28LDC3r6O0OI/Su3BgkG2mB36TT
ozdH0sBxfFaz/LIF1vrlnQuNIPQX/MgjWmCBUfUi4SshNDhl9uT7rRoLFAjw
j8sMIPrpws1a/lcWqLDvVN5ZbxqEPaUkX/3PAkfaxyVe2BP5onk7ctItcJmb
Gt1jTIM4UeMDSRsskUUm1YD3GJG/E4cYmHdYImdonOPifhpkN68WrRy1xHhK
37WyjTQoWBoOOWduiY3hFtaJv+egXOalHt3DErmeOlbsHZuDB253BU6FWSL/
2iGln5/m4NH11JmxZEt0dGp09m2bg4bXIc9cci3xypV8ganaOWhmcEj5WmWJ
QZfVWpofzEHHYXSzabPEbyeV+g+WzcH7U/sU3n+2xPsXhJ2sC+egL4+dxWjW
EtVkVcKO5s/BYDe9t23dEnW8BEz6CTy+qacct1vhLamLq1zFczCrXhdZL26F
wu/SKTdvz8F8cJ6xkpoVLt4f8TxUNQd/yi8IVZlYYf2Q/MCpujlgGDz5Y7+b
Fa4ZbNvY0zoHG7ebNZees8I4k6ar9HdzwKmvmLE30QpXX0qqyv83BzwxAt43
c6zQacmyYOv3Odj5cE2Zr8IKSeEdD5h/zIHIxOim9GYrzD5U35u0PAdSuzr+
29xrhZdantvLrM+BnMWD+wlTVvhGfkEsiYkGyvFXYzf8s0IJ67wWSxYaqNeH
W8RwW2PI5rvvrJlpsOfjVFfuPmtM7RKaXifWM07ZGz9Xs8Yv32lKJsT+I+uv
O76ZWePFddc+n7k5aN1xTI/JyxrH7dtqc4fmoFT2QatYpDVGLz8KcCXiSdAW
1tRNsUZDan754WdzYHiW8VjSU2ssyHxBunFtDmSSztbd6bIm5telugjKHGzJ
H1V+M2qNqL1njsN/DmiPrR/NLVvjacc5X7oDka+3bfJcnDb4STRo8pHRHDwc
U6qUE7XBB6am+v3H5uDqapmspYoNqnBybHgpPwfntgncDTaxwTmD2r6n0nNg
K5Usec3dBrUK8xWH9s2BCq6WPA6zQZad4oNHxeZA4Lif6OdLNljTc96slrD/
OTOQv1Jgg29ulybuINb3XzAV2vnEBt8yK+f8k5uDxpymnKNvbJDBpOL1kuoc
5D2UE3D+ZoOx90JTwrTnwH14G08Bhy3O1Feciyb4ay+dT2veY4t4mOdEifcc
7OP8zTl22BbNeKMv3gmcA9Z93pdYjGxR6WzZjunwOZg80rdJwtUW/96P2thD
moNOS/0E/RBbtDn1VX6R0OveyafMp5Jt0daoV2SZwFfI0tSLebY4xuL2u5zw
D7iRs36vxhbDbCPm/obNQX5w4/3+E3YYU0w51N49Cys0S+lrfnYoWHVVja19
FixPTZSakO3Q9EKTjtKTWbg7HiXKmmGH0iXJzxpLZoHZjTu/scwOK4wNqbuv
zoJTf/GusHo73PRnZLQvdhYeH1fNOvjODuHG8cQwv1nwNXVPz1+0Q6/LYjcu
6M3Ci45FTjt2e+Tay19KU5oFQZ2LF7cK2eN469TyAclZCH4uzNZ5yB6P3cur
zds5C2+O1Fyg6thjxu4WsYSts7DviT7jETt7vHlZU4+XfRZI8gMx8372uPtE
YoI7yyz03Q/6c5dsj9Gjvu3+TLMgJ8Ua5plhj4kH+rn3Ms9CUnH2/K5yexSn
lWnqb5yFEeGDgT319ki17t9zc/MsHMlpmb38zh63iKokN22fhYwdJ07qjtpj
Uj/JQGvXLMylzY6vLdqjNc37+e19s6C7heL+hN0BAwKGXE4fnIW8RN6hACEH
FG6bv7mqMgvLTHccJOUdcGgkz7NLYxYsYtU/D+s4IC93frWTwSzc+fPROsvO
Aa/fmth10GwWmEJ9PliccUDNkKruz5az4Phz1YSd4oCSfBYmrNaz8MgvtbM5
wwGL+uKvRxF2zkkxvahyB3TOLvrHZzoL3h5PWxQaHPALDin36c5C06AJzr5z
QO1SAZMPR2eB336koXjUAT+66ISrys1CYE+oqtOSA/51d49z2DsLHeYcj3k5
HHHOdmdmJvcsiLzJk+8SckQzv+PD7mszEKWnWBEv74j7N/ycUZmZge7mV/tB
1xGpBYp38vtmIP7pT7HKM454tefdFa2qGRhSjC/wpTgiB5P1C2reDKhUCgrt
veaIpcOK65YpM5C2vyL7S7kj3uiYN+WnzMB0qRZfeoMjPiwUqRQLmQEtkc9X
Dd87Incb39lHp2fg5i0/bqYxR9SIuR7y03MGfvMzXq5fckRBSd+WCdcZMM24
tukchxNu+nB+6orLDJRxScfLCDthkFs+XxthZ7jYuGFc3gnntXIemxPr7Vit
Ym/pOmFfKFl05OQMPKRMrNrYO6FptdM4b9AMcPyLCuf0d0JDpZO0sIgZ8Azn
/v2S4oQCB3jSEqgz8Gy+OCj2mhOyx94XaLg4AzsCVGnKt50wbaKEMTljBgKm
35760eCEnSJSvr43Z+CVl/tE+XsntLIoze4tnIG93xY93MacUNin2MutbAYi
HS8OCyw74esJgX9lt2fgU5+w00cOZ4zqa5hyIbCMVc2XZGFnnHnJYHOidAbi
uvRttRScMXfncldU/gwMGgx8XNV1RnHHYqEPN2ZgW9m/P/aOzvht6f25UwQ/
XWYh0bogZ9RpoBsejCbOc1M3Ekhwxvg9fvKXT83A/Ubn4PCbzlis/ZbEcXwG
hnfG5vRVOaPV1ZAabc0Z4InIa1Fqd8YXwgaqQzIzEK0wvP33T2e8/7xpbHjD
DFSmMhy13uiCcWbS5Vfo0zA6t8ezepcL6vmc5hQanIYdRhqXtsm7YHTbHMum
d9NgWO5WE6TngtWMt7kqm6eBxELtf+/ogm4x/77bPp2Gh+6FzHJnXbCgjuHl
3upp+N7ULJOS4IKXbde38FROg8DuUWvaTRdsdxu4yEVg40imGJOHLtiVrOLY
83AayH2iJffaXdAvJOT6xtppqFHUfssx4IJTPfxPZJqmYTLN8/epXy7Y3RTN
UNM+DVfCmjnHmVxRQqvKd/X9NEiWfizM4HTFNQGd07Zfp6G5e0RJW8AVS+/F
dPCOToMD03znvKgr7tt34W7K9DQsHGJyKTrgiuwOyi0SP4j9XLfPW6q6olx+
/bTtPLFfimjCBm1X3HJnR18VgZufKex8aOqKIncP6tMIf8dZrQo3O1d8wnu9
8jux36KgtdZWT1e8X6BWkvNtGlINPPue+7vit3z5coWeaZAOP3c6MMIVyZqb
cpbbpsHLKHLO/Z0bPpRKsikYmgKNuiXmd/6eyLd9ZICLaRJU3CcUM8M9McWF
5ZIFfQLk2Ps83aie+Lis/aRZ/wRIPHyZIX3JExMWfqaGd06AkP3j1vlrnshw
1XBarm4CeDeULjTkeeIxb7pc190J2Hznmlj8bU/02+pw6FreBDBZxlmbVXti
zjPuuifXJuDPyrkL/M880SW/Yc7yygT8LPCs+fbSE//uubfdP2kCJg2sx+68
90TtjAtH/8RPwPBPLZ5zXz0x9mSP2kcC92UpaB8b80RXpqqC+sQJ6NIQPcdK
88Q5yUR730sT8HJqW/G7JU9cO5v9NzxtAp6lbejOZPRC+5z3W8g3JqBG9ReT
O4cXzmvubmTJnQDxp7Mbfpd5YTVtksvi8ARw1H5j2PnNG/0ZH/yccfkOP8xv
xD+Z8cbkK2c+uRh+h+4p483Wi94Yt7Vbu0PxO9RSN6T/YPDBXT1aPxqEv8Ot
nbV8lzl8kDHNUeMVx3eg1py5JbXDB+2vvZL0WxkHbxNR0Zd7fPDnArsx/9Q4
GH7/XO6+3werRFj5Jf4bh4OxVw6sH/bBzW+L1b6+Gwcefu2aHPRBy8+yx060
j8Ny5YqqipEPss9rpt15MQ79BhVN3TY+mPIhcL2hcRxejHjqBLn6IDiQapwI
XBol+HrLaR+UbbUYVX8+Dsk8783vhPjgNHOM6krLOPjfj+vVJfvgJIfXGFfH
OFjpHnEcTfbBQqbakN9d45DTnfHkrqIvfnXprLMzHYf9P/X8jyaexCLt2PMp
KmOg9lTw+bENfqj2r8Ym4MQIVBi47HsZ4I+sV3uGs+KG4Rk799rWpEBsbVRb
KcjqB8Ha0v8qW4LwUYe3L375DCLnV4Pq+INRW5RvWTSlG5zlN6Un+JzD9YGC
uNIn72GrlElxa14IPlp2GT831QkBx8wC/H6FYrRFp6idVSsMCml3OS6F4vuz
22fEtFrBlEFV1uRvKKbc97oVrdwKz77JXjrGGIbsoX3Pfh1sBZkWkRlZ1jBU
2HjL4Of+VrhZzGcoxBGGnP6mR5ukW4EjfvNtTu4w/MJ2yDeBsEf6MLKt84Rh
d+qdDlfZVpjWX/SmC4ShwZ3Na8eJ/eykZ9qGhMLwmNuaXIRcK7ziGBZ7LxqG
N3R4pL4SdpW57vPPJcPQ5cbIdJFMK5R1dYxUyobh72XFMzvFW2FHZaNGgXwY
itHcW8t3tkJ8WnV+mnIY7s3cyDawuRV+ny1fpxwNQ8cvtfdCVlrA0/qW81mN
MBxg0Djv/K0Fug+nP3PXDcMHgcoaVa0toMWXsMvKiIivo9KmuqgFHi5HRWmZ
h6FWcrf9R1ILiHwN/KpgE4YO07yPc21bIK3eS1XMPgylbFZfte1vAYZb9pk8
LmH42Ymywr7eDEMu2ra/fcPwXWj8dSxqBlMN1UfjZ8IwOqJj33hIMzSKHODp
PRuG19b0KhgNm0GWWTT4ZVgYPpVZ3+S4pxlujvN9fBwdhi8XGTeVrryAze2b
D5VRwnCZoT8trPcFRJUzpt6ID8MnkceCDZ68gOmkRVrCxTDkKvtzJ/DmC7A/
PWMSnhqGZobpB3bGvwDtrASZCwfC0XpniGhq1zOQDnZRGlQIR20+ck5nyTPg
NlFGFdVwlNBTHXkc/wwWxbkM09XD0WeKsvwi8Bn0M0xYzWqFo5FN3+5f7s+g
+Wujk65BOCa4Ob2lOzyD8prrPvmm4WhRJ/ybx/4ZXLniH/THKhwbqc8zYwn7
OV/dKGu7cMz+e+2epPMzsNcUinvgHI41e/57+dflGeCuxStsnuG4fbRq8Ddh
F198m+l+MhxjgthUFO2eweb3JYUN/uGYyzGgyGvyDH7djrm341w4Ua8pHrqq
z+DzeZvHgRHh+N+2UM/uXc+g0Un2eScpHOnuwUMKSw1QrMzSKXYhHDs38I/p
vGqA5K0Dn0hJ4ahA3vPUJrUBAmdqBj5fIeKvGOTZbt4Atm2XJuQzwlFJZ7or
nq0BjuZ5/ryUFY47xn7msdTXg0jE0dXvuYQ++zf4C5+sBzYrHhaN4nDsPp8m
cIWnHrpZW/l/PwjHom+Xs2pO1UHdcI6IWU04wgWJt5sF6iC/Lljm9tNwtHuT
qdn3+inEZxgpMTWFo/zvPVppF56Cn78oOrWG4zOToqpI7adgqb9q8KSD4EN6
/TBx81NQEflktfVdOH6+Hz5kP1ALQn/vOJ3uDkctlr8j8k9qgbmX6tP2JRyX
7Xc4/MiqhdZtpELWuAhU/si2YL1QDUfeR9fpJUfgmt9h0VNz1fDwctTHxJQI
nC/SvtM8XQ2SRpHTHRkRuKuQ+eskgfPYIjZwZEdgQGSdvsFsNex4GSZonBeB
hsdGTugQ6y+dD5W/XByBle/TM3QJO5NGiGHX7Qh03RZa9mGiGiLXgt25KiLw
4Sta9I3BavhZfzbSvCYCz8bYuF54Vw2+EUHpaU8jMMvYdevrp9UwpBR452Nj
BE6ruE3P3qwG2wX/5u2tETjikfarIbwa3lad+WrdEYGvfMrZXE2qQZuYbte6
IrD1BZue/s5qqJM5zd73KQIZ51htD4w+hEPTJ0X4v0TggvGGYxtLH0J5ma+a
3WAEVph6aq14PgQhLx/L7NEIPHPv/jfTvQ9h87AndRctAkGz7mTNjSo4f8sj
22k+AqnsH5iuW1fBH3v3h7nLEeh46aaAJ08VBPG7dQ79i8C3DOznbT9XwmSP
y8gepkj8++ZcZ1RBJbhcdf7jxhaJZyXE9B8EVkKvudO2oi2R+Kg/OuCibiUY
czpKj22LxB9N+5T8RCuh5bW95j7+SHSD8S+uGytBLcnO3nt3JLbqPpt0HKuA
St0TZ8tEIlH0z2RNwcsKkGA+njwpEYm940PX/lVXQO4Lm0Ip2UjkEFMR8LpT
AWGBsoXGPZGYp+DhUehQDps3/o5Q+EqsPxd0+JpjOeTfarAQHIrEe6Fz3zOd
yuGw4gUpxrFItPD/Rysi7J2dRoyTk5GYuPJcv/14OTi7bf/SNUfwO7VDWtOk
HOaXvlY++hWJ1+0Giq8eKYfEK4WJN5ci0XL3omPi3nLYte+U6/m/kcjzn+oN
nbUyqKo/pHKKMQrvx2xfNv1QBrqWK1wWrFFYW0P/mJhdBl8nn08oc0RhyB+W
y0r2ZRAQm9gkxB2F8ey9lxe4y4B5h/kNFt4obCy6T65sKoXMe3wBswJRqCkh
PHbLpxSav5QK1YlG4TbaRNRseQnYBvov5ktGIWldnOOmTgnMsCp1JchG4YXN
TZf/fisG8q1/Jf7yUbhpR/63D7HFwKPYFmOjHIVTvq/kPuwphtudl2yOHo3C
HZGhE+kvi0DdzVpWVCMKPYfkK+POFsHHpZ0s7LpR+GjDielv+4rA58po/w/D
KBwpzxfO+1YIf8Xu1vSZRaGd61L9qdJCSK0/e6nROgqFC/l+5p8rhH2Wap4l
dlEY2bf+Vd+4EOomGY9eco5CcVHnyG2yhWAa27E92CMKfcTmNe12FMIob9qM
nW8U3lg9LyO1sRDC751owTNR+HHzPz+9tQLYrLUnR+JsFC4mS79U/1MA+V8m
znKGRaGVsmb7mZUCOBxYYfg7KgqnsxjofIS9kzVMpJ8che9pQ9fCCOx8S/1P
c1wUzssaX3i/XADzCqwfbydHoc0T8TbKfAEkdr69nZoShXIdyb47pgpgl9s1
SlhGFLrclw20+lwAVUuOds5ZUZjdWGOm9bwAdK+IHdLJjUKV0a75Y/kF8FVs
lk2mKApLP39/OBtWAAH11cPbyqMw96Zji5FeATBbRtWu3ItC6XZV3jLOAsic
1EwdriL4KRvqXOvKB9lYdt/2x1H4PVC2kZ6QD7b3sviuPY/CfDMethe9eTCj
6UaPaotC7mzlNnm5PCB/kWx374zCr42HHXrjc+E2a22oXHcUpthuiKpWvgXq
t2JN+b4Q9dF2q7Tlxk34qKAnvjYQhdovHmmeZ7gJPp2ca2MjUbiXoanR8FwO
/HXt7Xk9EYUGha/yt/7OhtSlW/cfzkYhk6iHo9OFbNh3xSsu62cUfpA7ySYv
mg11YrJO5MUoVHWQ+sj2MQtM6xcUfVaJfDp8Od2RmgWjFg2bTRmi8fIpjdgO
5ywInzw/psgSjVl5tsof1bJgc6xRw072aFw30meXFs2CAt7tGRu4olGW5HCw
lDcL7hU/22HFE426K1f/ULmyoFbBN6tIIBo9PzyobObMgpbmbbsWhKKxapr1
UClh77J4lqstFo0lzjVBfoT967DP3mtS0fi76FYSeWMWjAdsKx4/EI1b9+sl
Fi9lwo+1BnElxWiclr59nK8/E/5e9rkdrxqNTAoS8PBhJmzcvU2mTz0anS8r
l6xFZMK2ew0PJLQJ/roySXgoE4SO+BwKN4hGym9Bx4jPN0Cqc2vNK1Ni/wjt
OpfAG6Bo16AkYB2NdZK7Riz+XAec9H560i76/+/HmxB+HWxZGxrZPaPxl7gI
ZYv9NXC/5q3hcDIa2Q5NBT1qyYAzYltb7/pHE+/7E6S7MhkQXl2v+zc4GmXa
HqdszbwKFzS9O4wjonGnaarNDNtVSPnAbXyLFI1Rip+UGKnpkO1a3zV3Phpv
W7QFtrGkQyndy0I9KRpZNObxyPU0qCJxd1+5Eo3Cg7VGI4pp0LCl3nboajSm
WUaXlIykwqubXl8OZkVj6MtWiQ95qfBpP7cjOTcawz9Ikjf7pcJgXd3g+6Jo
LE2OmXXSTYVpAy+3vbcJvbMrjinKpsLvz1xjQQ+i8cFlGb9woVRg8K3zbq6O
RpEn5UalfKmweclzatvTaORwu/phmjcV+OO5/DwaoxG3vPqruyMVRHnraNUt
xP5OH17VEPYDxZ5BzB3RmDpFNTHemgpqClwL1l3R6NagPe/Nmgo6zU9DSz5F
I7A35EaNp4C5hefK78/R+GT1kjTr7RRwHOaM1h0k9DZbHhy3TgGfgKdr10ej
cSVzuLNh4gqcXfOgTExG49WYxLETbleAdJmTWYUWjQPPFHXuNV+GpF1P4xPn
o9FEUy2yZstlyLjrsenLcjQ6cuFWR51LkK/GeUlqLRrNH5C/mp+5CHc7ajkj
mWJwYXtzwOekZHh8wiOtky0GN0llKuXlJUHzxBaenZwxyBWyJJFYnQhhnx+r
i3rEoA7b5eeRolTIR2mKgG8MtsQ7qywKUaGz/FYL15kYHK9ADd7tVJjn3srK
ejYGI+f55uf/UmBXxAX9v6ExqCXrf1DhKwV0vi0l/4qKQVkvtu1bblPA3+D0
20lyDPYtuqi6+1LgRtUg11BcDAaWfAh5xkeB5wKWlj3JMbi1t/i65RMyTFHa
Ml6nxKDDs7Sn83pk2Dat0vciIwaVT30ns16PhaOW9wRqs2LwTOXD4OcXSOBV
J+z4IDcGf2kf2JfnGgNXRK7mFhcRfGRiU18diIbaZNZv2eUxmMNfvrFzIRLY
Hea8Eh7G4HJAi45LbDgotLiWxzyJQfd/X2cNzMLAcX/3dHBDDIpbeAfay4ZC
/FU92VMvYrAg5m7JEaEQqFitC3B9GYNU16yR7/vOwWePAw9tX8dglHiT1Xm9
YNjwpmDB+H0MHnu4xm8Ydxb2K/Iqa/XE4CEHRofg4SCwvpkYofo1BsNW7Y7L
2AVBDPPf+oNDRPyN78jXaIFQ6hewtm8sBvdsu3CiKzcQ3neP4K6pGPwXYvJn
o08grBy1Pb+NFoMGm7ZEl2gFgkhJRxvbPMH3k5+4h1wgGG85xra+FINbaNK0
OMlACAmpNPz9Nwadd/o85ZYIhNwB0cszjCQ0kB3nXRUPhHadG+++sZLwpG05
2Vc0EH7cZ9/2mYOEvPxPf/7HFwiCO0jWXdwkpDdmnvBiCAQt0s/rrbwk/OAW
p3i5OgD8vnt+qRMk4UziC3NhrQC4bvp5Z5UwCbMKbx9xuOcPTY+NnMvESDhZ
Vbl3bO4MTAo15d+SIuELx5BrAmxnYGuC/OjVAyRsWPnZ+e/vaVCjl+xLViDh
3I4f2ezvT4HHcQFfsgoJX7vC5ZW4k3Cp6dKd0GMknE5r/p0g5guPJBjm/DRJ
GGGu+UruoTcMpgQf9NAjodOhN0+mDnvBIVf7GjMLEu5vpDRIHHUH+1dvF3Vs
SWjUKpGR/cYVLshpqB51IOGbeN8VhgFnuJ9ZEyXvSsKtD7qDe0wdoZdBslHS
i4R7RBzlNi3bwbpvDoPwKRKm8s6SBoaOg+QHTi3eABLWLUY763PYgoUqNY7j
HAkZtCCpO9oaIgt+tzNGkPCoE1UiQ9EKijadZF+OIWH/hI6LvJwlvAnqN6ZR
SSiy0yCb97QFLH4xSxlLIKHXNoaG/EFzENZs+fD1EglvBP+nGU81B/07Sjwf
0khYzW3rcsDEHM5uu2Pbfp2EeYeKa2UVzSEncnfWsxwSymVa5TTJmEPrSOp/
1fkkvF5y8LUOgUkH9suklZAwMsRkdULSHFQi26L975BQa7H8zz5Bc/jV5vLW
qILQ51vZqcKfZnBv65/dUjUkfFjExkwlmYG3U4Y/61MSSgQKRf34aAp7bh9o
Gn1GQtUHJxz9p03g68IrrhfNJBT2fdk93WIMGejhmttOwlXhw08vuhmB6aV/
lVFvSFio6FLm+MoA2D7fYLT7QML71nud+tb1IDrgTeH2/0h4vIjfoHWjNijV
e8//GCKhpYxS2kWaBvxgZdTuGiPh+xa9G1xFAJ65h8cTaSSU2esrQD+rDELT
7w57zxP8G0c08koU4PPhU/FayySs1Hz8vGuPHKRTmPv2/COhz9LEUNyIFBi/
zZVYY4zFB6cODwyAGLAKqIb/xxqLvgaV9w+1C8Fzz0+vajli8Um4Z2hy3g6I
rDwjcJ07FuVsg0e7V7lA8e/GU8G8sWhLG25jyGABml5hnblgLKZfujtfTl5V
L796lOOAcCz2zNi9yDL/oe4+1OvAIRaLEn5N1XYF39R37Q+6NykZi2RO0cSc
1vfqvaEc/9pkYzFIY1r0aVidempziUmRfCxapLH9CJjOVTfkxFyyciymVXQk
BpmfU2e2/0pzOhqLRZ63Rwx5xNUbS87BEY1YHJjwGjTZOngs/CdnKr9uLMan
x9Fjem3V5Y/dHv5tGIuO27tO+q5eUp9N1Dr0ySwWx6SvqzqPPVAv7R6gVFrH
4hvm9hrd3S/VXfeEf7xsR8TXbLdzROyLuqDfNtHTzsR5g1/73a9Oqnc/uRes
7xGL7aS0odj03+pXmPRa9/nGEt+vc/mlYYygb/aNh+lMLPKu+tL0rrDDhpwo
r+GgWHTYxN3z5MB2aPjO+/hZaCw+lbesHEkVhFD5StacKELvL4fuDzTtBTmS
4fFwciyus6zP5q2Lw3THWJlNXCxe2PXOm32DLBTzxi7LJ8ciZfehnIb+Q8T3
lIABd0oshuqdVpFLPAz896uz5q7G4nB7w7/Bc6pwSXtSrfxWLB5L1Ts1Moqg
m0q9GFcYi27lDP9cGLWAoX9Xv3tZLOpFt3tz8+pAncQTGbwXi1Jf6Fc5tuvB
uWCLmN1VsRidr6JMo+vDgaaZt38exeLsjsshZwsMYZI9XuhzXSwa9qRv3CRs
DIW2ewIeNcWigc+vNHd3E3AsrGtKb43FXVUCN+d9TGEHzZo7sCMWjRP4hawP
msF7VbqrSVcs2sfKXqTWm0FyXFKV9KdYtGJevEzeZA7aH0Q3sH0m+L68D0PC
5hDCW/DPdCAWrTk/1udLmEOpndDKtZFYNI8w3iBJ9HfvrZyF/olYPHV8jllQ
1hw2jvD/EJ0jzjP5bsSsRfS/+PWZU79iUZXvjUVjqDn4nto+UbUUiwxFpkqt
3eaQ9SB1ZPlvLIpK7chK87UArxVWujAjGe15FIbZj1oCKafNr4WJjPxsjYaL
tlZw/diFaW9WMvps119Jb7SGB0OavuybyLibtNtYP8QWXlIYv9/nIOMxHm2e
yMgTMCj63MOCk4w7hdX/hHbaw1Ib6dsCNxmLt1kZXHR2Akn2v/1HdpAxK+DC
uMg1N8B7dfZD/GS8uJGT7a2oB5wwjfhM3UlGda9+n4I6Twj8oWwrLkTG3qO/
dohYeENS+uKnjj1krAuuyMsa9IFCxUcWZ0TJGKOW8iLc/iTU9Qa/4xYn49p0
OPfjhlPwMVzepEaS4JPmlKK4dhqmBX92Ht9PxluPSl7uFTgDG55V6K/KkjFY
Zs3RapM/7HTxf5krR0bX3KuMKW/8QZFRVltTgYwPLm5NaXcPAOOimRfjhwm+
ayp7VboCwFPnDiSpkPEEuLk82hQI0RO+z2SOkJHd38Ht4q5AyEiSOPL+GBlL
o5IOzxP38f3932uDkYybnevUN+8LhJdvi5X4tMi4rBTtFU/gwQCPmjodMh79
S15w2h8Ii1tF5J31yRgU/88z/WggcNYMVzAakVFgtMRiwDkQxG3zZEtMyHhn
5MjR0zcCAZad7uqbk9FEelUrdzoQTmTvkpq1JPj1PITPDkEQePS/0hQbMgr7
bOyynguCxMEsMYUTZJSqhqgt+Wchn3yisNeejKl8YwYVwcFQK8K3J9KJjPGM
OU7Z3ufgQ2vPrd2uZIw6uCj0MyQEpr0zdr5wJ+O3L7G6lbdCYcMmqyxPLzIW
mH6S+vQ5DORN3mfcPUXGdGXjkCNBkWBIv7LN7AwZdRrcoyVeRIFHmknqrwAy
XvNoUdNkj4Fohc2c18+SseR6ZNwDHRJk9HReVA0h4/uNLBz//GLhXljSpoEw
Mup+4iIdOUaGVgH9BHIkGVe2yL5/WEOG/npWFrEYIr8F1w9J76TAb6c2anss
GeNOFEgWB1CAk+ECw2kqGX0ZmCsXqiggXqhJ4owjo+LDH2/ejFBAXZvxb1UC
GTe17dKoZ6KC7femCJtkot7/Rf/dy0cF/0TS0vIlQt+BGV/hPVRIkD4WcjOF
jI8pOUfOiBDv7TervyCdjAd2kwoOE7jWvy5wNIOM5xtrvnwj3uMuMU5ddjcI
fY6yLm3bTwXWSwwy77PIuPjJQ1r3CBUeZBcl6d4kI7eAWn3VcSrY3NadaMgl
o1HPrOa+81T4+2RKW6GAjPWnpC/ONlGh+OWlwttFZJx3unm+jus8GPUcZNhT
SsbKzBajzODz8Gv0o9P1cjKyxe593D9zHrJ+hdRvvktG66Kwz1LhFwAZBQTO
3ydju87+wQC+OJjkaghdqSD4ewtGLLXHQYqQS3fAQyL/ITclAhLiQUl2g/z3
GjIat6jVrVkmwOCRkhTHJ2QUf7u110kiEWTsZgwNGsiYabAo9vm/JPjkc6W8
qZHQn2tH8/6aZIgMPcSq9IKMrD0TswzxF0EkrtvjXgsZz+hZ7soxuQQdV8Ne
iLwkY3eh4NKljZchsFBQOOsVGfs/sZt8rbwM/FXPorleE/u3XzUU1LsCTU2u
X+PeknHMJdL96qsr4N3FpPL3HRm1vP/zslZMgS0DpdfOfiRj9FaPKp3kFKiZ
MZif7Cbj5aH7IodeE99zf2bNXfrIONxP2dKynAJMm1If9Hwh4yyr/utG9lS4
w6ew2bifmIcfMgMtt6WCpXjvyeZBMi6Qn45yEd+TK4oR7SrfiHpque8vSeB8
rV37KkbJ6CzG17jAkwp6lk3Ufd/JeKPtrFw/8T1Kc3Ufzpkk4wcmq4Qju1Ph
egCL+rYZMlINqNbG0qlwjFSekzhHxutpY8TTIBXGLhmtrNHJ2LYjaVzeNRUu
5dBsQ36RUYyto2/LpVRQuJNWM7NARsurP7cltqbC11rFbe5LhB7pjHf42dOA
0t4X8HmFjCKNMnIvHNNAsjfyrelfMor+cFHkbEiD92O797etkXF9xouySyId
wuafJx5hpODn318d8m+mg9AGz+9VTBS8VDAv/1PwKrzk3qgtyUrBwu0Kv3bk
XwWeAybrPBwUvENO5+x5lAH1R384XtxCwWXh012JGtfA3ehqHSM3BW8nUSMC
O68Bu70Sf/g2CrYyH/nCZ3odqny/hNB4KOgm7Z59qPM6nAiL/uTJR8FT+3SV
7x+9AQzxwof+E6CglO97lrdFN6Aso/mKxS4KNsQ5Lams3QDTIq/ZdiEKZq/s
1uY2yoTFKjZD9b0U3C1wZvNiUibcen63rEaUglY3vtgL1GeC9jtTlv3iFCzq
6YpUGcqE2YGf7gWSFPytxiN/cykTrs5mPOfbT0F9oZQ7nKxZoLaqLHRFloKP
126FdW7OgpFN/0Uxy1FQ0o1pxJMzC5L4SV8i5Qk+p7fnVm/JAr+i9M3ihymo
qPWvuovApgfK4IMyBS+eD82K3ZYFh57Wn41Wo6B2UPWgj3AW8Gi/L5E4RsGn
+RznPilnwWLX2OePQMFQnn0r6c5Z8MVuhYOkScGvsSOC/13LgoaxLSClQ8Fd
Ht5mB4ayIDdA5Gy3HgVnVgQYTY5kA/mPUkmsIQXZmFxK5O5kg0ec0WdpEwre
K7eS2LI/B3S5XTl6zSjo473Rx6EhByRzzqlTLCmYqyEqO+VwE9jFk4JkbCgY
xp8cT2e9BXOVt4r7jlNwAMRTZOtuwcOXL9kPOFGQIuxzv1w6DzIs/jv2xYWC
H5V7z0kN50FYPz3wgjsF11qH6u318sHeh7n4oBcFf81I2Nln5cPRX/x9X30o
OMk3Fhkxlg/CMbLs8acoyJvhUeshUQAb2DSPHTpDwayZzco73QpgLN02sD+A
gpvVbTaxpRVA++7TRQlnKVgtfGDDhicFcKc8tlc+hKgvv6eHj38qgEsKGZsG
wyioZPGW4/X3AghoLD+aFElBo6Xbt1N/FYClwbMAxRgKzlEMRo8tF4Bi94fC
oVgK1rW6pzxdKQA+l+89yVQKpr77HSlG4D9Tf9iU4ijYRXO+0ET495/jOvot
gYIugbs63/0pgMZ10YBLyRSM/ue/RmUshIJklULlyxQcnpFW6+EshAu8Jj0j
KUS9++7njxQrBO98N7Yr6RQ0rFcld2gVgsH+0COq1yjoJ5r0p+pMIcg8TvYf
u0FBc1IkVBQWAqdGXkFKNlGvZoLi7SOF8PN1dbfaLULfe3oiybJF0G37auP3
PApusPlxR4BaBI+/9aulFVIwYlVx16GhIoheYimYKKPgl/C9Var3isGZKtid
foeoN7dCYQn+EtDYcnCj+n0Ktj+fjaq/UAKsoifOZDykoNjrpjsPbEth8r5f
PjyioK/qxdnyJ6XwWoXyafoJMR+4bOwqucvgQcs11ut1FGy6ltoj41oGqaZ3
VDWeEfmrDmOcKS6D4C+NfrNNFHTf71sqO1gGtp6f8m40U7C0YsexOo5yUKFP
fNRso2BiUqfcsGw57Iz8y0JrJ/ontOlKuE45rDFvVc3qpOB9yS+XhqzKYThl
n5/2WyL/Rvz3xu3LoUVQLY/+joJnGv3D6x3LobTE9GP2RwrWLHx/2etQDoly
Hiy6PRRs6f870E34n64PU/nZR/SX3xEFe8LfVPfS6ZtfKfhixZz3l3s5yH3I
z9UboKDo2s3sH4Hl8N/bVye+DxF66bLd/5BQDvGdP7bFjRD1JkjW179dDofa
+d+KjlNw7yvhnz695dDfggnNE0T+IklGnVy3IeG5r4bbNAWPSzztT7K5DfLP
UlfXZ4l54PEzXKvsNgw8rX2US6fgUjlzjyDzHUh8PBxw7BcF7SZ67reeugMK
1WzS/QsULAkyEr365Q4MVsiNRS5RkGFTypF407ugeJt8ovYvoS93tVmFxj0Y
KinfdnydgsnXC2z+1N2D5ML3b34zUlF79OCuZrn7cDhvOT6DmYpfXD3jS/Lv
w3DOHg2FjVQ8weI9HMb2AC5m6q9+2ERFFk3fJ3beD0DpWuCjwM1U9H9o3tFV
+wC+pWUGcHFRcUdTA+nj2gO4dOW51IOtVJwv/XT8u3IFKF+cHDXmoeKCcHLj
Ls8KGEngzp3ZQcX/OPJldl6ogMsXVE4kC1DRlHdNjC+rAlQortukdlFRi5te
01FcAaMxiW/ahajYPfD5idPtCrgSWRnvvZeK8hs+eNgSWDXsM7KIUZF/y3at
s2UVMBbMsFokTsVA81mv5NIKSAmUfKQpRcXjbS4tgYS/2hnzgG/7qXjRuqr4
3cMKGD8ZLkU+QEU9Xsd/7G0VkOqdPyp0iIoef01WxEcq4MdqnuTiBeK8xl/a
X6RqQNrrXrNPAqHf4YLtqF8Dnl21jl+SqPj5IMdw0JkayFVuWzS8RMVY4etu
x7Nq4HP+h9SGK1RErctqua9rYBv7oPSBNCqqlDF7NjA9AuPg6da8q1TMHrb+
toCP4LkO0wo1k4gnKyRh+uUj+POA6+pCNhVHJ6+a+m95DIr8u2S9b1HxqeuX
hLvWj6F8WtHNoJCKXFtz/x4efgwjVhqrdcVUPF939jqTyBPY9czkmkwZwV/9
W0aByxOwFbc/mHubireTl9y4M59ASop3B9c9gm/W34CYzifwavmsB+UBFTvF
Jf8YLT6BDe6x/35VUjGxxHNy185aOPr64g3PaipmdX7j7FaphVDFzEO9j6gY
RZZqyjarBeJ6eK1XS0Xo0dg77FIL06xVXk/rqLgu/zLE5lQtiAU+W5d+RsWH
5yQ1JwNqwflLR9bNJiqOBSxIPw2qhUzNXgXOZirqP16J4Cbwx7sjb2NbqXjY
mbTLgvDfzEv3+fmSigMDP2Wmz9SCLmmV0aODilMr66b6/rVAnth4s/s1FVN2
3FZvJ9bXmfMo6XZR8eej+7eKI2ph4eme90/eU7GG99iX+fhaOCAqe0rqExVH
BoraMrJrwc+w7q7j3vMYHSJ50TPkGTwrU7i43HkeTbNeyy1HtEKn5CsP45MX
kJU8cv13Wif83KnKSGWOw82lW0yuXHsPc7s3rc7ei8MFjR8cFrbdUKK1MMdl
GI+fvUSea2/5DPLh6sd8F+LRYpPO0Yca/RD1vigu/GoCrt9qAx6eYRjIHk8/
dTARbd7M+on/+Qa85+L/pn1OxAf7VDn1t4/BpiBNl6DQJHzdbbPl+rdx+Bjt
JBS/NxlDOEPSK2cnoNP+zPI+sWQ86NmS84VxEl6oxHxsE0/GaBFZPie+Sajd
cfmel1Qy6p0fHimQmYTKhZvxLDLJuOu/HeZcGpNQ/vGea8mBZHRtsnm43XoS
8iob1HQOJWPytz9T0l6TcP3KG55xhWQMN1+4MxY8CVf8+mkXlJKx/Y/ej6nY
SYg3nH0lppqMD/sGSYxJkxAj+bew9UgyyqUe6duWMgnnWDfHeKonY6w432OJ
9EnwG9t5nFkjGUeirxefJrBn8/5DxVrJeD4tdE0qdRIc849waOsmY+hYkFzn
xUmwJhmNj+ono0Nd8cvOuEkwcnRoOm+UjJ0H/ljUkyZBU+10lqhpMko3srUc
DpsENf6o4BbzZCxdHAjqC5gE+cVkEw+rZNwmoWikdnISpLuzJZhskzE+odGf
5jEJIg/vMBadSMaivTYh51wnQSC17j9Nh2TkZNlzW8VlErj9Ox+NOCUjR9su
kRTCzmb8NYXqmoxbPKo3VnlOAoP09EkRj2S8w0StrTs9CUsb/2g1eyXjtRhD
nrshk0Ab3yTk7puMvFlV1zyok/C9RWCZ8XQykpSGI2+nTcJggdTHgjPJeExZ
sFKiaBJ6YlXvaQQmo4TWn4agx5PQesTOlRKSjBXvVjLthiehQeCk2t7wZBRz
zlZ893sSqpfCeV5EJuM877sHr9mn4E5PIs01hsBh/laPhKagsDrzFQM5GY2O
/OL+KzcF2WnlhflUIr9rXUJ7NKYgLaA2GuOS8UCIIG+t6RQkmryyHU5Ixq+n
jiqF2k0Bef9nOXJyMkpl6brIuE1B+KZJ9j2Xk/H9XvmULq8pCJhYGmtKScYb
4p4ZwT5T4N22scklPRmfWU3xWHtPgXMRX9Z6BqF3wXJDu/sU2FIkgvNuJKP7
cUMWDacpMHFRNoHsZDw8m5SrZzsF2sf0JIZuJuP/KrjyuJq+L1oiQ8oUX6JJ
AxqUITTunSFzaTBHIk0iSkgDJZV3hyclYzIUFVLSIJEGmSpJKZGSot57992k
icjv/P48n/PuOWuvtfba9/1zmft5Y/wIHoupG2WPJQqQFswu2W7TAfN/uX9U
u078vkkse9eqA/TrDmU/SRKgRnzArN6FHTA9O1K4/ZYAUzVP+jyf2wEqsfFe
g6kCPKNkv/OyUQeMP3BzyZU7Ajx4pPtIw+wOGGmXo2p1T4Dn1YcEVxB+ZAzL
+hoziX9LN41PNumA/lHv34Y8EKD1j54N/pYd0Nnedls1l9y/OmWjwYoO+F7W
c/LxQwH6Pvtz+eb6DvicNGzHtgIBylYMibpM+HkfPtHs7xMBTt5kmpJ+uAMq
d+goJxQJ0DzgVrc71QFlViZSi1IBejo4dlhc7YDs307Xg18K8AmzXL7lFal/
2Upn/rUAd+XfOTH1cwcUCy0n7awU4Ni/HhvNOjtgRcOcqpoqAarJ/4x5JSOC
Sm1dwfJ3AlTVk/2xe4wInHxVlubXCnCktufavKki+PhQadCgXoAfdv2deUJH
BDuHyuUlNggw+va1oKsGImi37TswvpHUsy6bGTpHBPsuiPVPNgmw/tJFlydz
RdDztamt7ws5T/748j6yHzy7JtG7VYD6XmtG/pgtgiGBLzY3fiP9PrNynJye
CKJLCias6yB4I0rfxmuJYIxSZkWxWIAdJfuttaaJYNqNC9YpnQJsVzjQPXO0
CK5zzIDKTwHmCijxraEimLUoPJvpEeB6GXNzzcEOyAg/5CvTL8C4iNxX8r86
YEGF9yz/3wLEWds3FvR0QMF/Ll/b/hC/DXzbGdfdAUt2OiZs+kfwGlU+rCD7
r+4s3/halsKyZVZnY8jz6/rMx1kNpbDg65fUrn9EL2vj1xnyFNqsLImUjBDB
Nlr7pNZICt27O1p3KYug9f1kiFeg8G7idZ8Z00Xgran4a4QShRpzNRV+ED46
98hmBY2lsHLd0ameS0RwOKfHRzqeQi+gvmttEMGgjEjXdSKFro/6BtO9RBCx
+nPzu/8oXLSsUJYKEYHjZQ91fXcK354ydPbVEYPyror0ak8KRyhFDH9jJob3
s+ZZHd1D4Wc0iCm3E8P5zvMVmvsoLF78U/bpLjFsyR10frmfwhsfvV+POiSG
aaFukv3+FP4UeTqoR4rh89JXQZMPUejkZFkQFSuGqwrGCk+PUHh59a/hkgQx
7Kw+e9EjiEIFmzluk5LFoH1hYNaYUAotGvYv6U0RwzcX14c5xym8nVUsdy1V
DCm6z1dsP0Gh2qgwXftbYvDiDOqHRVLY91x/0q7rYtB7cMbjbjSFpVff5a+7
JAbJ0f5eJ4pCpahWy9tnxJBuvT3yD0Nh2Al7PeVTYtg/onRi0mkKp+kkF5sc
E8PcN7OSV8dSiDN/bXkUIIbus8L5P89S+FL9W9fKvWLIce4puXieQt/Bzm2B
7mI4rLXVcfElCq/5fHKvdBXDItHTlo4ECns+vazMdhHD7wxdv5irFA6304s9
vkMMBYdpWdMbFJ69c07b1U0MoVZdp5uTCT/2NR+99ogBh23SiE6hMA+id9Dk
/iHlj+8Z3aZw9NeVehfDxVB6Rgvq7lL48dshORtST+TmU5WhGRT+W+Ifo5sk
hhUa/DbdLKLfwP4/D3PFMOq7E1eRTeGEQ0fPeJeLgTmoMVr1EYUL5UxD6F4x
2JpHXip9TOFFj8lNN0dJYOwQiZ7PUwq/pvWGgaoEql/Y508ooXBmy47FRYYS
iBPmrnz0jPhnbcrWu+YS2LBB9cPOFxTW6Z9hrtlIYLLqCc9Rryn8kDthyzZb
CTR8be/LrCD+TqhQfeYggctptlGbq4h/Zzu/+eooge0HHkySfUf88s7AUGQv
AY1FKjdTaikULR0VabBWAi2Dx0zW1VO4+Ke5iRo5/8azttK+Bgr/1Noor7GU
gBu92imxkcKnPrmH18+TgK5j5lebZgq1lVSfts6UQPuU//ylLRSK076fuqUm
gbTm4CHxbRT6Gf5QWT5RAj63WmIs2ylM4OS2uSpKYPa+FZptIgp/3A05Gz5c
Ap3z0zNojsKDdfQcjaESyByYgPM7Sb/9HcrGyUnArzjwzccuCr8NO985VV4C
8081bT/RQ/BPXEFXK0ig126ZVK+fwqK1aheylCXk/eh2SPVvCpfYlx6/oCGB
o41jFY/+pfB6pY0MGEnAIunQZU0ZGpNv/g60RgkMen/SfzmExvhpxxdoE76e
zln8aP8wGi3jZomdPCQQ3n9r1eQRNB6+qTVzTrAElhYqNhSOovETG9I0OkYC
8pH+Xh6KNH6dEHLZNFkCz9d86FcaS+OLWyITpTyi13Etz1PjadxxtWd6y3MJ
eGbtrZObSOPVx83DY2sl8PBbrk3ofzQe2v3oSFmzBEapDMnpn0LjYEJxgFmH
BLasXaPjP43G0W+2bnshlcDt4/FxnBqNpk5Nr9x/SOBPVrOcpyaNDzpL3swi
6zXf9fxbtGjE/QdWLSa/T1AJaHHWJfWmx4cNtEtAurbQvm4mjeXLG7jcLxKw
ChtZZK9P4327fxJJvQSEDxyNyw1pPKDoVKD6RgLN3xMSbYzJ/btPTH9fKgHj
qe1KRXNpjEqurk3Kl0CY7dxQcxMaTfrjFSdlEj+HBXPZC2nyPjK4Oz1FAlrZ
Zc7GZjT+Me9a8e2aBA62jy1Ps6Dxi1v+F50ECZRO3WquAzQuUVrXV3RRAhPt
ktMSrWlcplM49xdZu4fzU1SW0uihxR/qIr/PyTY9FWdD413lKamPbkhgeMeJ
fqWVNNrRpStX3pHApmmVHqdW0+jcc6TmUK4EUu0m18nZ0uhlaxYz/JkEfofv
tAldR/QK3hWUUiOBVTl3svsdaDwVqMZ0tUngUkevtv96Gr//yx29r18CkmnW
cdxGGqcbZQTEK3BgsY6S89xCo49J6+gmNQ6YE7V+Lc40pl4ZPypvDgefc9Rb
nF1odInaMSVuCQdGIi/7OlcaF1oa9nGOHBxXffDU3o1GpxFaA2t3clC1btCo
3J3GreOD5tnt40AzYkWijReNA9u9H9w4zIFf7hmloj00ri3+bTo5lINi0acQ
8300OmoNMY0P42CC2gwuez+NzZprpuiEc+Bmf8DZ2J/Gf1Yz8jqOcZAd8eh1
WgCNr5LiS7WDOJDPG2auc4Tcb3hPanSQgw1iu7TEozS61g5WB+7h4JbaxSkq
ITQm3m90DXPloN++NTruGI0lI2UPV23gYMXJ2f1K4TRa2G/f0ruagwt5RzxO
RdBo1rjdINyaA5G4+L1cFOmf0sjEvws5MFdXtAk9RePbpUtGtRtxQDtszO6n
aBzjHmJ6fxYHn05e0/ZnaeSMUrLzdTgwfCiO5U7TKIr7/XOVNgehEhM5z1ga
32mq6J4l+5Xqx/1aztK4Wa313v+fV3d89cX5PI0FCj3CG8Yc7I9Utq+7SPQ8
m6Ria8ZB0cPtT+0TaPww50L1MRsOxnMpRuWJNIZnzEuVOnGwU+PnFZvrNO78
XKRnvpuDLEdLpaIkGn9a2/r/PMTB0KioEPNbNCZ9Hl0cf4oDp/y3kuxUGld+
7Om+cJmDXg3312npNLbNbcgJKeJgTFlJ0eRMGi+5bT3a9ZaDmXs08yKzSD+M
eVF8r5kD67HH0ruzaSwTyiWs4TjYkv0paWcejepKZk3+fRz4bzG7VJVP8mBV
dvL3QcLXv3MxVo8JX+W/ek/ISeFmUk/UnUKSJ8P/7cVhUihc6RiqUkyje91o
Z+OhUqiXZhyMLqUxrFpNNVxGCl2xSnt6y2gc6V3WH/ybAwVTH1e3lzSqGdor
hnZxoP355cbq1zTmPWuJ6G7nwPLEDFuspPH6MS2R82fij5knl6ZX0Wj9n4qt
xTsOfCtazKa9I/7TDteb+oKDaD+cI6il8caYuR7HH3Nw7b8rM/rraNwuNDon
yeIgv2BA1b2BxqNdto9qb3PwznWzcs0nGhv6ZYNvJHMgkc8dtbiJRib/WN/t
axwMu6Msm/GFRqUp67fNucqBmr1fn2orjfPKV7a4kP1FvW846huNhX2zEteQ
5+0vGbb+aqdRr31HRzc53xupBg8xjYahoQussjmIaGuvquVoPGY00NH7lIME
gc3zJZ00yq/TO1xXyUGOUdLjzC4a2RbZgxGk3jc1sg/Ue4jf5zJrY3gO2gNd
0pg+GgOq4uJOyEpBVv3x1YFfNIbOw2l1E6SgUqpyzusPjZsyPEOH6EoBPN7s
nLmKwSCL0N1fgqQQF31l9us1DBq637C1EkqhPXXv7712DJrABJ+X16Rg8dqi
bKwDg/zQEUz9fSmcliicyXJicNbAZ9eqIim0Kn7ctmEjg8PfyJToV0rB1Cht
1q/NDBZ52GwKr5MCuy6w55Izg88OHIphGqXQcmBFkZULuf/a3+0GzVJYEPsf
88WVwdYV1nFuTVKgHnzbFOHG4L0Et4KdH6XQXJutPcODQdOaB9ThGinM74vo
fOnF4ABTLJrwWgrRk50KfHwYHLbs9uySQik0mmpFj/FlkHH5cUQ7SwqRwUXq
6w8yeLXke9S981JoSDgt7jtE8P6SSV9AS8Go0CX3YiCDk/wcx0wLk0JE8+wT
lsEMfp46vbPrMPGr7KBtcyiDh+0pOdMDUjDQqlA5EcaggoOlksNeKYQtvfxN
J4LBpP0P90X4SOH97j33X0Qy+EN5Q0nvPinoRZmF7jnF4OYym8D0g1IITRm5
SolmsKrGJlAYIoV3L+snZrIMfnhyucb5lBRmim99cYxhsLEv+Ur+OSkEjz58
tzeWwYBzOWLjFClUGdoEXohn0NkwZZhxvhR07CYus7jAYGxJ3suJFVKojMn6
FHaFwcvNqf11XVKYnhWeon2NwcwKjzT7oTwcrrE/+PwGg9eCbrv8mcBDeY8G
et8k5ysX69ho8qDxX6eCYiqDjtsC6nP0eTi4qLDu3m0GH1j/Vuudy8PLzewN
h3QGVbVD771ZwINa0DbfngwG7TPqZRYs5MHvsoH5+SziH8Wah4vn81D2eEDe
PIfBPWszvU1m8zC16VV1Yx6DbW/fjd+vw8N+mYtXjj9i8PhH99V+KjyUanp5
az1hsDBK70u1Ig+TlyxaUPaUwZLGGyWLZHjY6zZ8iFcJgxlrfmxxJPUVn3xf
oVBG/HKhRVzdKoVJt5IvpL9g8PHiJgfXeil4vzi42/41g2aG2csvEX4KO5bM
6a4gfuZMEkY9k4KywoS/8VUM7o1qmq1J/ONp0PLC9B2D/f7nVEwKpFCwNjPu
Uy2DGiEjzoeQ9Tjf4zuO1TP4u3ma1binUnA/bWcw/SODXW2/37eWSSE/U62/
tJHBc8fXFr6ukoLSO67Eo5ncT3W3HSH+39VdIBz1lcFHv/b7hUmkkDeR3nq3
jcHJFyKMd/yVwuiFW2esa2dw/tFZZ4+O4WHHJr2fXSIGz+sbxupO5yE78NeT
sxyD33XMr2cSfkddeiFY1En8/LbU2dOGh+0F5zZ87GIw/eHe0CsbeFi8avUQ
+x4G1xSfdP+wiwed+sG7ZX0Mygzs31q5j4cR7vc3W/xm0KvPe47O/7/3+HP3
sPt/GHT/s3xdYjAPb8KmZM74x+CftHH7VI7xcH9MhXOCLIuvGo9POBPKQ3zC
8REThrI4oJV6Qj2Ih0D9+Q+i5VnsMt78pP8gD84Pv7sMjmBRo7u0eq8PD7j8
ksJBBRZ1n3/c0+bKg1atbW6HIovH9ibsrl/Pg/yuIbtcxrIoTt+dW76CB1Fn
tlLteBbb75QbrjPnoSLUK3/VRBZ1DFy6ugx5yBit6v70PxaH6363XUz8G3ex
atwCFRatHawKSybycGRmxOPb01iUnn8e26nAw9achV6a6ixuPmzzew7pB6ul
YuVzmiz+e5L0rfH/3zervvJ0tDaLzXsits3/IwX5HQ4+4bosDhYsY7eRdQc3
bHL/TBbrh/Vd9vwnhfKghyV79VmMtsn/vGoYwTNyr+9XQxZ7njXoNxP/xp3T
mLrZmMUHJwNY8WTSfzo1ZZVzWVz9JV12ii4PW7Ki/JaasGjZlCn6R/S0sjZX
y1/IopZl3UrdZTxovpG+NDJjUQ4V24YSPYduux6QbMGig30Tp+DBQ7toveZU
YHF7wcUNKUS/10dGVpy2ZtHx/uK9K6N4SJd/fER+KYvzBBdvup/l4Uzcfu1g
GxbpV2tVT17jIWC6dtWPFSy2did/sLjNw6aMuiCP1SyWpDIalvd5sLCiZjSu
ZbFptE63XQ4P6uVW7xzWsVg07bqfcy4PQ7Z0hb5wIHj3OCV5ZPPw7XuyntV6
onfsfZe4DB5eBWx+n7WRxeMNEz00U3m4K6cYPmsLi1N2Pk9xT+ThdMxTw0Rn
Ft8fOLr9bSzJG/WDH5RdyPlX5jo2RRI8d2ecFLgSfE6H3k8J5MHc/KOxjBuL
Qv9DS8fuIfnzkv0U4M7iZG+NDIdtBM/GxdFiTxazGifn+qwjeFp75rnuYTFK
oFrevJTkl19q0/u9pJ65LU1axE93ZLZRa/azePTNjNoL8wgeduzCYj/iL88H
G8+QvPKfVtqyMIDFq7dvBNsY8LAh7TB79zCLy+1CFOvI2myRvpnWURZL159d
ttqYB9Wyz23ng1k8H9V75TTJRxmnMzFKx1iErlc9R4GH1i/LLCPCWJy9z7fg
2Soenvv+av91gsUNgTFtEzfxkPb3TpxvJItfzbqi/7jzwFI7sC2axfyE2bG/
D/FwYIqyZAvFovP1oP4Iou8ik6AlNqdZzOBe7Oi5xcP7oMV6w2JZXFSun7Eh
j+hbPHJc6Vmy76f/ii3jQXnk277w86Q/oxbEDL4l/Wx3/rP1JaKfyHrhzAYe
1sW7PJO5wuKWksDu7M888J907xReZbFTziYxtIng0ZKeCb3BotNNJWHUJx4M
vLMDLW+y+HAWv3Loe6J3RvCOPyksLl37Ts+xnAevviXLH90mfs8Ztbi/kOSN
lcLso+ksWkwRyMZn8nAzolrZNJPF5I+1H1uJH5e+vjDQl8Vi4K9u5bQYHr6O
c23JyWHxzX0N//QwHsI3zXwZ8JDg25xknu1H5lUif29+AemvZSq9/rt5eNKW
E//zCYtHVrr8FWzhYZtBaMj9IhbTNq9df8yBhz9+y9wOlJK8MJJjs9fycPHh
6NXGz1lUQfbr3jWET5maOfxLFoPHdz8rsuWhzubS5PRy0u/iqN3XnXg4xOz8
5/OGxftJp8d9IH5Trpn1Tb+aRfdjf6+P8CZ8qvwoF9WQPCgb3pxxhAd717ys
1DoW9zWKTOedIvxJbcJmNLLo+0EQ8OkOD4YmSp7fmlgcMiNwl+8TMo+Dam2T
W1jyf/aR7fNKHryLL5u4tRE/rr64SbeRh5Ej3aZptbO4J/y2dls7Dyl2+nIt
IhZ3uTndCvrBg018V8dVjkXt4c0u0b08tH16WOXSSfw27u7O2j4eIrTCctV+
kv5R+bd0aw8P071XXGnsIXkhvdGPPA9FGWNOXu5nMVVUefFDG5k/fe/3bB1g
ceOlIwcSP/AwaHnFQWWQ5PPP4Q6Gr3m4HLHb9IOMEOVn5O1b8Ij052sDjfNy
Qnye+mhjSBoPDeO65TfKCzHexDfv1QWSx5secRNHCtH8e9/SVsLHpMTwmhoF
IR7NbpsfQeZHdtvKR7FKQvwon5Ft78uDk8G46w7jhEh3pK5qIPp2+dVHj1MW
YrXLsB20C+nXh4m+VZOEOD1fRj3LmQcjGY8NwilC3PXXdpU/0afSZral7TQh
7jW5UfKSzBsfpkdLUV2Istud5CgvMj9rCkaVawpRpUsz1I3Mq1SViB8CbSFa
K0UvaSJ+W+G6un7lDCG6LrHzdyN+/HZrfOEIPSHJs6uLl1wnfEo/JD83EOIO
2XsH8rLIPDO5RkcaCXG0Zqh6XykPxUGe/svmCnGVhrHv3FrCZ7HRlqEm/z8/
8vytr4TPEX1YslCI2TeG198i/CfYPZkRbibEU5+uR1/rJ/kbf1LJ2lKIj76x
z2cMEj4/ren5B0L8MOTrhv5/PPwP+gloqA==
              "]]}, "\"\[VerticalSeparator]2,1,0\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]2,1,0\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1:eJxF0GlI0wEUAPClK1ySOs3wKI9G5FULTSpz80zRppKJVJSWx0wZm3fTqaU7
1Mw80073n6VGl1JYumyFjiz74BHJzANUiq6lbl41Wwfkew8ejx+P9+A9xzhe
ZKIBiUQK+5v/6lfNCiuIvcAk/Y/0phyPQNlbn1XzjdVsa9k0WKBoJpFlWvCv
emHYD8LQd9UKskarJSzAdvudg+cIGjh8WDk7Q3iAfauExgcyA8FUbXRbVXw4
mPmUfyjfLApMZCjujx05Cp4IGR/SBcWAEw/mquP6T4H95Evkfm4C2LhjkmQ7
yQa7zgVzvUuSwV6dNi8YBhxwa0jstpc8LvjZejM9tTQVbNPRPNrWkwbeKtSl
ya0ywDHulOripEy8zznsllKaBeYxIngcTTY48Eqxm2gnH6w0L2hcJ84Bn0nd
0ch6lwuWWVrUGpjmYV/1mEmLz8f5qcrRR0QB7h+kGRipzoI7uPLU6dpz4FKr
gpFc90LwrkGiIXgcPauTOi2KisCcUPnd445C/E+LR9lyH7rP6VU8K1kEnrPd
t6aILAart1B03+6hmwLm1aahErA7n8k4PY8WDNwU82uKweNXP1Sn0EvAlpmS
lSoVmpLmH5uWXQoeyjthJ3E8D27/GdWY9xp9+HqSvSu7DNzLGlk2MbsAXnRg
v7nzAO2T1B/nFFoOjumqjx7VoPd6CgKCKi+ChwX+Lmtr0FndFKryEvphxOUJ
v2tot5T2HEYz2kE607q7C02hJGymfULfjnA1nPqCDqrTfCbUaBGt8ImdFq1n
NETa6NGadFUJdWMFuLJTyhvYhKaTkqIrrNGc8gXaBnv0xxbz50YuaNH3kaZe
NzTNU3ZBQkef7KYfI3ui9UZLvj170DciFNuLvNDedWITPwb6/Rhr4bcP+g9K
cRxt
              "]]}, "\"\[VerticalSeparator]2,2,0\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]2,2,0\[RightAngleBracket]", 
            "Tooltip"]& ]}}, {}, {}}, {
       DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
        AxesOrigin -> {0, 0}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, DisplayFunction -> Identity, 
        PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
        DisplayFunction -> Identity, AspectRatio -> 
        NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
        Identity, Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
          AbsolutePointSize[6], "ScalingFunctions" -> None, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
               Part[#, 1]], 
              (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
               Part[#, 1]], 
              (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
        True, PlotRangePadding -> {{Automatic, Automatic}, {
          Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{
         "\"\[VerticalSeparator]1,1,0\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]1,2,0\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]2,1,0\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]2,2,0\[RightAngleBracket]\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
                "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], " ", 
    TemplateBox[{GraphicsBox[{{{{}, {}, 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1: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
FtZt6JkF4wqP2tMGbpjLXMlb1ToLpHXUwdfObmgU8+eL/aNZuOdZxHYg2A0v
1DM93VkzC19aWmVTE9wwzP7fRoGqWRD5b9yWftUNqz2GLvAS2DSSNcbsnhvW
01Sd++7NAnlAovTWMze0Dw29vL5uFmqVdF9xDbnhuz7hh7ItszCd7v3jxDc3
bGqJZqp9NgspYa08k6zuyKtT7bf2ehaky94WZfG447SI3kn7j7PQ2jumrCvi
jmm3YjoFx2fBiXWpa0nCHTfuOn8zdXYWvsuzuhXvc8fvjiptu78S+7lvXrJW
c8dtBQ2z9kvEfqkSCSy67rhSuWWgmsCtTYpb75m7I/fN/YZ0wt95Xueuh4M7
FgtervpC7LcsaquzydsdcwvVS/M+z0KakffA4wB3fFOgUKHYNwsy4WdOBkW4
Y5D2hryfHbNwzCRywbPHA6v2JNkVjsyAVv0KW0+AN27dPDbEyzoNqp5TStnh
3pjmti7ZijEFBzgHvD2o3thQ/uy4xeAU7L73NEsm2RuTvi+mhXdNgZjjg/al
S97Ikmk8e6B+CgRZyr435nsj+DAOdN+cAu4blyTjK70xaJOT/KX8KWC1jrO1
qPHGnCa++oeXpuDX6pnzwk3e6FrQuGCdMgWLhd61n5964+8dtzYHJE3BtJHt
xI3X3qiVdf7Qr/gpGF3UETjz0RtjjvepvyXwQI6i7uEJb3RnrS5sSJyCbi2J
M+x0b5yTTnT0S56CpzP8JT0rxH7Bub/D06egKZ2lN5v5GB7Je72RfGUKatW+
sXpyHcOv2v81r7s+BVKP5ll+lB/De/RpXquDU8BV95lp62cfPMF8Z3HO7Qt8
tbwS/3DOB2kpp965GX+B3hlTbttlH0za1KvbqfQF6qgsGV+ZfHFbn87Xxu1f
4NrWOqGLXL7InO6s9ZzrC1BrT13bs8UXnS49l/ZfnQQfMwmJpzt8cfE7p6nw
zCQYf3lf4bnXF6vF2YV3f5qE/bEp+/4d9EXuVyXqH3smQUBYtzYPfdH6vdzh
o88m4WfVqpqqCWFf0k6/8WQSBo3utvTa+WLGm6B/jc2T8GTMW++0uy9qOZFq
XQhcFiX6YuNJX9zfbjWu+XgSaAKvLW+E+uIsW4zaatskBNyO69cn++I017EJ
3s5JsNHXcB6n+WIxa13oj+5JyOvNenhTyQ9H3LrqHcwnYe+iQcChxONYrht7
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
FoisOiVymS8WWX1CxnvXeEHp9/oTIYKxWLE22sGUtQ7oBkX1lqKx6Fl8c6mC
vKZZkXmIa9/2WPzw2+FJjuVXTc+RficuyVjsp7XUOBR+1ty29/StaelYvK4k
kZjX/lqz/yzXnw65WKTfnJV4FFavmdZaalasEIungzZ8DZy9rmnMg9fJKrHY
wPsi8bTlGU02x490l0OxuOtf9ZixgJRmc+kZ0NCKxW+P44fNNg0fDl/kSRPW
j0XN2kRGTL+9psLhytEfxrGYZNtz3G8tWXM+UUf+nUUsdnVdVnOduKNZ1jtE
qbKNxXfmz2r1/3uq6b4j/O1Fh1i0XnbYOib5QVPUn1/ipGssLrF+GvTMnNbs
fXgrxNArFl9dSh+JzfihmcJq0L7LLxY5hxcKysKYwdDiswDrqVjU4z5ON0jh
BJa8qGOjp2PxDj9f38N9m6Hxi+CDprOxaKZpXTWWJgpnFarY86JisXBU/vZQ
y044QDI+Ek4m8t/4bz7/nxTMdk6U28XFYr5kjw8nixyUCMb+VKDF4vhO+bzG
QXnie0rEiC81Fn+ZnFQ9kHgQhG/X5CxkxuL5l41/hs+oQbLutHrFtVh8kmFw
YmwcQT+NeiGuKBb332T648asA0yD2wY9y2OxmvTMh09QD+p3P5TFW7Go84mR
ybXZAM6EWMX8Vx2Lb4pUVegMQ9jXMvfq1/1YfC18MTS40BimOePF3tcT/Pdn
rN+w3RSK7HcE3m8h6uX4t3RPTzNwLqpvyWiPRdt7IleXfM1hC92WL6iTiCdR
WMx2vwW8VmO4m3UT+ZLlLlAbLIAWl1Qt8y4WH7ItXyRvsATdNxIsHO9jsePp
bRjZbgmhgoV/zIdiMZXnbUPBbksocxBbvTQWi5ERpizSRH/3X8v7PjgVi5eO
LLCJylnC+jHhrxILsXjU7IsJmw7R/1KX5058i0VvoZdWzWctwe/E5qnqlVjk
KDZXbu+1hJw7aWM/f8eiz54tOel+VnBslZ2xnZmM2QKKo5yHrIGU1+HfxkrG
YI5m42V7G7h8+PysDzsZHTYbrmY028KdEW0/zg1kbCT9Z2oYag9PKcxfbnOR
0V9AVyAy8igMSzz2suIhI8sOzV9nuxxhpYP0+TsfGXk22xhdcHUBac7fgxpb
yDgdeH5S/JIH4K16xxFhMqpy8HC8kvCCo+YR76lbyVh8bNC3sN4bgr6q2EuJ
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
P5tLY0lKde31fAmE28wNNTOhMWAgQWliFvFzeDCXs5DG54OD7hmpEtDKKXUy
XkzjgiXdq75ekcCBjjHlaUtonOKe/1knSQIlU7aZ6QCNR5Tt+p+dl8AE25S0
ZEsaj+oUzv1J1h4R/GTV5TSe0+IPdZPzuTmmJ+OtaGxTmXzr0TUJDOuMHFBe
TWMUXbJ69W0JbJ5a6XnSmsbY3iM1hx5I4JbtpHo5Gxqv2iyOHfZcAr8idlqF
2pH3Q3YFpdZIYE3u7ZwBB5JP4DSmu10CFzr7tAM20DhdJm/U3gEJSKZaxnOb
aNxqlHkwQZGDJXaUnNdWGlNN2kY1T+OAiaz1b3WiUXRp3Mi8ORw05aq3OrnQ
eOnEjsnxyzgwEu22r3elMczcsJ9bz0GY2v2n9m40nh2u9XvdTg6q7AaNyj0I
vnFB82z3cqAZtSrZajeN4OJ9/9phDvwfnFZ+todGYdEv00mhHBSJPoWY7aXx
vNYQ04RwDsZPm8Hl+NGoOX3tZJ0IDtzs9zsZB9C4BmbkdR7jICfqUVnaQaJ3
SkKJdhAHCnlDzXSOED8a3pUaHeBgo9g2Lfkoyad2sDpwDwc3p52frBpCY8e9
RtdwVw4G7Nti4o8Rv4+UPVy1kYNVx2cPKEcQf9lv39pnzUFi3hHPk1E0Hmvc
bhBhyYFIXFQnd4LGiJLo5L8LOTBTV7IKPUmjyoplIzuMOKAdNuUMUDTaeISY
3pvFwafjV7QDWBpnG6fm5OtwYPhQHMedonHWmV8/1mhzECoxkfOKI/HTVXXP
kP1K9TD/1jPED9Pa7v4/Xn39689O52j8qdgrvGbMgV+0in39eVLfZ66r2izm
4NnD7U/tk0j83MTqY1YcjONSjcqTSb1nzrsldeRgp8aPS1ZXabzc9EzPzJ2D
7PXmys+u02i41CbgxyEO5E+cCDG7SWNT06iihJMcOOa/leTcovH4x96exIsc
9Gl4lKVl0Kg1ryE35BkHo0uLn03KorHObdvR7rcczNyjmRedTePL0S+L7rZw
YDnmWEZPDo3yp+SS1nIcbM35dH1nHo0uyoubA/o5CNi6+EJVPo35a3JSvg0S
vv6djbV4TKNt+c++SDkp3Ljee+J2IcE77J8vDpVC4er1oapFNN6pH+VkLC+F
99LMAzElJP/qaWoRMlLojlPe01dKo4N36UDwLw4UTX1c3V7R6GForxTazYF2
06tN1WU0ypa2RvV0cGAeOcMGK2kUH9MSOTURf8w8vjyjikbBf6o2S95xsK+i
dfHUdzRe0I7Qm/KSgxh/nCOopfHr6LmeYY85uPLfpRkD9cRPQqOzkmwO8gt+
q3k00FjQbfOoNp2Dd65bVGo+0aj+Uzb4WgoHEoUHI5c201iWf6w//QoHQ2+r
yGZ+Jv1v8gbnOZc5mGbv36/WRvpL+epWF7K/qO8NR32lsb9/VvJaEm9/wbDt
ZweNOzt2dPaQ+72RavAU07grNHSBRQ4HUe0dVbUc6d9Gvzv7nnKQJLB6sayL
xkV2eofrKznINbr+OKub8N0qeyCK5PumRva+ei+NvXOZdbE8Bx2BLmlMP43X
q+LjI2WlIKv++PLvn6Rfz8Op9eOloFqienb3H+KHTK/QIbpSAM83O2euYfD2
klD3z0FSiI+5NLtsLYNeHtdsLIRS6Ljl+8vXlkFfGO/z6ooUlpQtKR3jwJD/
p8OZ9/ekcEqieDrbkZz/3eRa9UwKbUofnTduYtD6jUyxfqUUTI3SZv3cwqCi
l9XmiHopsHaBvRecGBzlfyiWaZRC6/5VzyxcGHxx5e92gxYpLIj7j/nsyqDe
ast4t2YpUPe/bo5yY/BPklvBzo9SaKnN0Z7hyWBwzX3qcI0U5vdHdb3azaAF
WyQaXyaFmEmOBT4+DK5ZkT67uFAKjaZaMaP3MVjl8v2IdrYUooOfqW84wODH
4m8n7p6TQkPSKXH/IQatfspkLKClYFTo8uB8IINr/dePnhouhaiW2ZHmwQxO
njq9q/sw8avsoE1LKIOp9pSc6X4pGGhVqEaGM2jpYK7s4CuF8OUXv+pEMfjW
7+HeKB8p1LnvufcymsHpEzYW9+2Vgt6JxaF7TjIYU2oVmHFACqGpI9Yo0wwO
rbUKFIZI4d2r9xOyWAaHF16scTophZnim5/XxxL+BlIu5Z+VQvCow3f64hi8
cTZXbJwqhSpDq8DEBAZjDVOHGudLQcd2wooliQy+LM57NaFCCpWx2Z/CLzFY
33JroL5bCtOzI1K1rzDYXeGZZi/Pw+Ea+wMvrjHYFpTu8mc8D+W9Guh9g8E8
lSIdK00eNP7rUlS6xeB554Pvc/V5OLCosP5uOoM/LX9N65vLw6st7DWHDAY9
tEPvvlnAw7Qg5329mQwmZL6XWbCQB/+LBmbnshkMU6p5uHQ+D6WPfyuY5TJ4
b12Wt8lsHqY0v65uzGNwdvW7cX46PPjJnL8U9ojBZx89rP1VeSjR3O2t9YRB
hRi9z9VKPExatmhB6VPCR9O14kUyPPi6DRuyu5jBgbXft64n+RUdr6tQLGWw
N7FVXN0mhYk3UxIzXjIov6zZwfW9FLxfHnC3L2Mw3DBn5QXCT2Hnsjk9FQwa
S02SRj6Xgori+L8JVQxmnmierUn842XQ+tL0HYOLD5xVNSmQQsG6rPhPtSTf
kOHnQsh67L6wHcfeM2j2earF2KdS8DhlazD9I4Pzv/6qayuVQn7WtIGSRgY/
ha0rLKuSgvI7rtizhbxP9bQfIf7f1VMgHPmFQZlffv7hEinkTaC33WlncEti
lPGOv1IYtXDbDLsOBgOPzjpzdDQPOzbr/egWkfv0DeN0p/OQE/jzyRmO4Nc1
u5pF+B154aVgURfx79sSJy8rHrYXnN34sZvB/oe+oZc28rB0jfUQ+17il6Lj
Hh928aDzfvBOaT85/9tvW+VeHoZ73Nuy5BeDWf3ec3T+/73HH+5D7/0hfviz
0i45mIc34ZOzZvxjcFX62L2qx3i4N7rCKUmWRdWmsPGnQ3lISAobPl6eRXvt
W5HqQTwE6s+/H6PA4so5W54MHODB6eE3l8HhLB7qKan29eEBV15QPKDIYuCL
j3vaXXnQqrV50KnEYrVvkvv7DTwo7Bqyy2UMi4vvuj8oX8WDqCtHuXYciyZ3
yg3tzHioCN2dv2YCi34GLt3dhjxkjlLzePofi46632yWEv/Gn68au0CVxWgH
i8LiCTwcmRn1OH0qiwsTX8R1KfKwLXfhbk11Fi8ftvo1h9SDxXKxyllNFi0K
r39t/P/3zaovPR2lzaK6T5Tz/D9SUNjh4BOhy6Lp4xWsM1l3ckMnDcxkye/9
/ote/6RQHvSw2FefxWKr/KY1QwmeEb77vhiyaFDaoN9C/Bt/VmPKFmMWueMH
WfEkUn86NaWVc1kM+ZwhO1mXh63ZJ/yXm7B4oDlL9I/oaWFpNi1/IYsbzetX
667gQfON9JXRYsIHKrXLEz3lna8eTFnC4nH7Zk7Rk4cO0QbNKcDi+YLzG1OJ
fmVHRlScsmTx5L2lvqtP8JCh8PiIwnIWdwvO3/A4w8PpeD/tYCsWX71ep3b8
Cg8Hp2tXfV/F4rTelA9L0nnYnFkf5GnNokIao2F+j4clFtSMxnUsairp9Njm
8qBebvHOwY7FYWpX/Z0e8DBka3foSwcW9+9xvO6Zw8PXbyl6FhtY3Bt3zyU+
k4fXB7fUZW9isa5hgqfmLR7uyClFzNrK4r6dL1I9knk4FfvUMNmJRX3/o9vf
xpF+o37gg4oL8Vfy3PXN0QTPnRnHBa5Evw2H6iYH8mBm9tFYxo3FrwGHlo/Z
Q/rPK/bTQQ8Wfb01Mh2cCZ5NS2PEXgR/06QHPnYET1vvPNc9LFYJ1MpblpP+
5X+ruc6X6DOvtVmL+Om2jDO11o/FR29m1CbOI3jYMQuL/Fn08Lq/6TTpVwFT
S1oXHmTxU/q1YCsDHjamHWbvHGYxzDZEqZ6sFy/SX6x1lMWfG86ssDbmQa20
qf1cMOH3RN+lU6Q/yjiejlU+RvLtft17FHho+7zCPCqcRae9+wqer+Hhxb6f
HT8jyX2Bse0TNvOQ9vd2/L5oFpXNumP+ePDAUjuwPYbkmzQ77tchHvZPVpFs
pVikrgYNRBF9F5kELbM6xWIr93JH700e6oKW6g2NI34q18/cmEf0LRoxtuQM
ixJ//ddsKQ8qI972R5wjfopZEDv4ltSz7bkmywssuossF85s4MEuweW5zCUW
bxQH9uQ08cB/0r1deJmcl7dKDm0meLSkp0OvsXj1hrLwxCceDLxzAs1vsDhC
j18tX0f0zgze8SeVxVPr3umtL+dhd/+ylY/SWUzMHbl0oJD0GwvF2UczWIyc
LJBNyOLhRlS1imkWqY+PtR/biB+XlyX+7s9mMf9nj0paLA9fxrq25uayOCZb
IyAjnIeIzTNfHXzIYuyW62Y5/mReJfN35xew+H2Fal+AOw9P2nMTfjxhMWO1
y1/BVh6cDUJD7j1jsW3Lug3HHHj447/CbX8JiwuM5NicdTycfzjK2vgFi9bI
fvFdS/iUqZnDv2IxbVzP82c2PNRbXZiUUc7iUMkJ96uOPBxidv7zeUP0uH5q
7AfiN5WaWV/1qwmeY3+vDvcmfKp+LxfVsPikdFhL5hEe7F3zsm/Vk37TKDKd
d5LwJ7UKn9HI4rUPgoOfbvNgaKLs9bWZ8DsjcNe+J2QeB9XapLSyuNT9kc2L
Sh68iy6auLWzuMv6/GbdRh5GjHCbqtVB4iPStds7eEi11ZdrFbGY4uZ4M+g7
D1YJ3Z2XORa3D2txienjof3TwyqXLhZ9xt7ZWdvPQ5RW+INpP1h8p/pv+bZe
HqZ7r7rU2EvwS68NIM/Ds8zRxy8OED5Flec/tJP501+3Z9tvFs9cOLI/+QMP
g+aXHFQHWTTsGeZgWMbDxSh30w8yQlw6I2/vgkekPssMNM7JCVE+7dGmkDQe
Gsb2KGxSEOJbk315rxNJP978iJswQoiB3/qXtxE+JiZH1NQoCvF+Tvv8KDI/
ctpXP4pTFqLqsMwc+308OBqMveowVojPO2+taSD6dvu/jxmrIsTRO4buoF1I
vT5M3lc1UYhO+TLq2U48GMl4bhROFuLFvzZrAog+lVazzW2mCvGGybXiV2Te
+DC9WkrqQly43VGO2k3mZ03ByHJNIW7p1gx1I/PqlmrUd4G2EIOUY5Y1E7+t
crV+v3qGEK8ssw1wI378enNc4XA9IT5puLx02VXCp/RDygsDIV6Vvbs/L5vM
M5MrdLSREG00Q9X7S3goCvIKWDFXiKc1jPfNrSV8FhltlTcRYqRy9LmbXwif
w/uxeKEQZa8Pe3+T8J9k+2RGxGIhvvt0NebKAOm/CceVLc2FqPiNfTFjkPD5
aW3vPxAiFdSyceAfD/8DJBdg8Q==
              "]]}, "\"\[VerticalSeparator]1,1,0\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]1,1,0\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1:eJxF0GlI0wEUAPClK1ySOs3wKI9G5FULTSpz80zRppKJVJSWx0wZm3fTqaU7
1Mw80073n6VGl1JYumyFjiz74BHJzANUiq6lbl41Wwfkew8ejx+P9+A9xzhe
ZKIBiUQK+5v/6lfNCiuIvcAk/Y/0phyPQNlbn1XzjdVsa9k0WKBoJpFlWvCv
emHYD8LQd9UKskarJSzAdvudg+cIGjh8WDk7Q3iAfauExgcyA8FUbXRbVXw4
mPmUfyjfLApMZCjujx05Cp4IGR/SBcWAEw/mquP6T4H95Evkfm4C2LhjkmQ7
yQa7zgVzvUuSwV6dNi8YBhxwa0jstpc8LvjZejM9tTQVbNPRPNrWkwbeKtSl
ya0ywDHulOripEy8zznsllKaBeYxIngcTTY48Eqxm2gnH6w0L2hcJ84Bn0nd
0ch6lwuWWVrUGpjmYV/1mEmLz8f5qcrRR0QB7h+kGRipzoI7uPLU6dpz4FKr
gpFc90LwrkGiIXgcPauTOi2KisCcUPnd445C/E+LR9lyH7rP6VU8K1kEnrPd
t6aILAart1B03+6hmwLm1aahErA7n8k4PY8WDNwU82uKweNXP1Sn0EvAlpmS
lSoVmpLmH5uWXQoeyjthJ3E8D27/GdWY9xp9+HqSvSu7DNzLGlk2MbsAXnRg
v7nzAO2T1B/nFFoOjumqjx7VoPd6CgKCKi+ChwX+Lmtr0FndFKryEvphxOUJ
v2tot5T2HEYz2kE607q7C02hJGymfULfjnA1nPqCDqrTfCbUaBGt8ImdFq1n
NETa6NGadFUJdWMFuLJTyhvYhKaTkqIrrNGc8gXaBnv0xxbz50YuaNH3kaZe
NzTNU3ZBQkef7KYfI3ui9UZLvj170DciFNuLvNDedWITPwb6/Rhr4bcP+g9K
cRxt
              "]]}, "\"\[VerticalSeparator]1,2,0\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]1,2,0\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1:eJxF0GlI0wEUAPClK1ySOs3wKI9G5FULTSpz80zRppKJVJSWx0wZm3fTqaU7
1Mw80073n6VGl1JYumyFjiz74BHJzANUiq6lbl41Wwfkew8ejx+P9+A9xzhe
ZKIBiUQK+5v/6lfNCiuIvcAk/Y/0phyPQNlbn1XzjdVsa9k0WKBoJpFlWvCv
emHYD8LQd9UKskarJSzAdvudg+cIGjh8WDk7Q3iAfauExgcyA8FUbXRbVXw4
mPmUfyjfLApMZCjujx05Cp4IGR/SBcWAEw/mquP6T4H95Evkfm4C2LhjkmQ7
yQa7zgVzvUuSwV6dNi8YBhxwa0jstpc8LvjZejM9tTQVbNPRPNrWkwbeKtSl
ya0ywDHulOripEy8zznsllKaBeYxIngcTTY48Eqxm2gnH6w0L2hcJ84Bn0nd
0ch6lwuWWVrUGpjmYV/1mEmLz8f5qcrRR0QB7h+kGRipzoI7uPLU6dpz4FKr
gpFc90LwrkGiIXgcPauTOi2KisCcUPnd445C/E+LR9lyH7rP6VU8K1kEnrPd
t6aILAart1B03+6hmwLm1aahErA7n8k4PY8WDNwU82uKweNXP1Sn0EvAlpmS
lSoVmpLmH5uWXQoeyjthJ3E8D27/GdWY9xp9+HqSvSu7DNzLGlk2MbsAXnRg
v7nzAO2T1B/nFFoOjumqjx7VoPd6CgKCKi+ChwX+Lmtr0FndFKryEvphxOUJ
v2tot5T2HEYz2kE607q7C02hJGymfULfjnA1nPqCDqrTfCbUaBGt8ImdFq1n
NETa6NGadFUJdWMFuLJTyhvYhKaTkqIrrNGc8gXaBnv0xxbz50YuaNH3kaZe
NzTNU3ZBQkef7KYfI3ui9UZLvj170DciFNuLvNDedWITPwb6/Rhr4bcP+g9K
cRxt
              "]]}, "\"\[VerticalSeparator]2,1,0\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]2,1,0\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1: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
MMGqcd6FjDZV9EsFBQwwi+nYGOxOxheFXby3qhjwfXPGtP0pMiZN6HybfsSA
iLt2T/AsGVO0qiu5XxJ86+7I3RNERoOFL/sKPxB8fx4P4g8no/8ONrWwrwTf
AZVGC2QyMi10ihwHCb45wyX6qGT89pmPy3CI4DtP63dbPBl9JAuNLAcIvpU4
u++kEPhX3a0p/Ezw3fn6TnoaGUs+b9uc0k3wffISLTyLjP2vdrp4dhB8/3Ky
d8kmY8yR5tw7RH76qVIKR/LJuFLTs+nzfYJvqRku2UIyXpVgX6QUE3w3Vg8J
lhD4dv8dlckh+LYi1y3fJeM6x6SbXqkE3xM66UP3yKh+OPZHwzmC7xieU+0P
yJgo3sZ3g9Bv2+ZuqGgk431OltpzhN5t7mZvvdRKxq52fNXgR/Ctc5JJfkbG
FmupwSRfgu/P0u1unWTkGareI3yW4DtgNt/wLRn/HvxmRwkg+OasC5P/QMbg
zjsH74cRfOfFmG39TEaLnUaJl2IIvpWO7l7tJ+OpTT1ScykE3538qyPDZMw7
kOMUfpXg+0Rvz8txIv9mPvXntwm+f+WV358ho+LLQ6k+dQTfqZ7x2XNkrDWw
pHwn8GqQ2u9MXSQjy++EyWKCH7PGeWXvFQKvwo2Ku+kE35ZNfGYsUZi2UzTm
/V+C74lzI8provDAKsf2PeuYwBdj3CTKE4UfAuP/3RJhwo3NG7PYBKIwir62
9NsuJty91bzl2KYo3MX679OOA0yoUzqVXSgchQrpb5bXHmTCkzZBsXnxKHw+
OdsdoMqEN5bN+XpSUXhDNTTDWYUJX4a8d16SiUJh6r9HSwpMGPUXvDUqF4Xm
HjL/MvcyYXa1abeKchRO8W9ju76DCX8ueN9JUIvCSu/Ia2WbmLB2m6DsR60o
FKnufeO0lgmCd5sq9uhF4cOhO73uywwQP+ytEGEYhcssrPzh0wyQ6dxQ88Is
Cv3+VI4YEvpTtm9SEbaOQn53pmU8oTec8Ko/bR+Fpg7ihx+/YIBx+AaNBpco
HIz5kE15TPDP2fSIxyMKlUqdBCSbGeB2yUvb8XQUrt/9T36hkQFnpTY8LfOL
wumNh71F/l8/1Y36f4Kj0ODnit+lJwyI0/HqMImMwhju0/76rxiQ1rXeJI8S
hZOSbxumPzIg50TjG/q5KOwXnRWXGmNAMdPTUis5Cq/K83IHLRL6p6z/kJoa
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
              "]]}, "\"\[VerticalSeparator]2,2,0\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]2,2,0\[RightAngleBracket]", 
            "Tooltip"]& ]}}, {}, {}}, {
       DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
        AxesOrigin -> {0, 0}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, DisplayFunction -> Identity, 
        PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
        DisplayFunction -> Identity, AspectRatio -> 
        NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
        Identity, Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
          AbsolutePointSize[6], "ScalingFunctions" -> None, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
               Part[#, 1]], 
              (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
               Part[#, 1]], 
              (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
        True, PlotRangePadding -> {{Automatic, Automatic}, {
          Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{
         "\"\[VerticalSeparator]1,1,0\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]1,2,0\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]2,1,0\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]2,2,0\[RightAngleBracket]\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
                "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], " ", 
    TemplateBox[{GraphicsBox[{{{{}, {}, 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1: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
MMGqcd6FjDZV9EsFBQwwi+nYGOxOxheFXby3qhjwfXPGtP0pMiZN6HybfsSA
iLt2T/AsGVO0qiu5XxJ86+7I3RNERoOFL/sKPxB8fx4P4g8no/8ONrWwrwTf
AZVGC2QyMi10ihwHCb45wyX6qGT89pmPy3CI4DtP63dbPBl9JAuNLAcIvpU4
u++kEPhX3a0p/Ezw3fn6TnoaGUs+b9uc0k3wffISLTyLjP2vdrp4dhB8/3Ky
d8kmY8yR5tw7RH76qVIKR/LJuFLTs+nzfYJvqRku2UIyXpVgX6QUE3w3Vg8J
lhD4dv8dlckh+LYi1y3fJeM6x6SbXqkE3xM66UP3yKh+OPZHwzmC7xieU+0P
yJgo3sZ3g9Bv2+ZuqGgk431OltpzhN5t7mZvvdRKxq52fNXgR/Ctc5JJfkbG
FmupwSRfgu/P0u1unWTkGareI3yW4DtgNt/wLRn/HvxmRwkg+OasC5P/QMbg
zjsH74cRfOfFmG39TEaLnUaJl2IIvpWO7l7tJ+OpTT1ScykE3538qyPDZMw7
kOMUfpXg+0Rvz8txIv9mPvXntwm+f+WV358ho+LLQ6k+dQTfqZ7x2XNkrDWw
pHwn8GqQ2u9MXSQjy++EyWKCH7PGeWXvFQKvwo2Ku+kE35ZNfGYsUZi2UzTm
/V+C74lzI8provDAKsf2PeuYwBdj3CTKE4UfAuP/3RJhwo3NG7PYBKIwir62
9NsuJty91bzl2KYo3MX679OOA0yoUzqVXSgchQrpb5bXHmTCkzZBsXnxKHw+
OdsdoMqEN5bN+XpSUXhDNTTDWYUJX4a8d16SiUJh6r9HSwpMGPUXvDUqF4Xm
HjL/MvcyYXa1abeKchRO8W9ju76DCX8ueN9JUIvCSu/Ia2WbmLB2m6DsR60o
FKnufeO0lgmCd5sq9uhF4cOhO73uywwQP+ytEGEYhcssrPzh0wyQ6dxQ88Is
Cv3+VI4YEvpTtm9SEbaOQn53pmU8oTec8Ko/bR+Fpg7ihx+/YIBx+AaNBpco
HIz5kE15TPDP2fSIxyMKlUqdBCSbGeB2yUvb8XQUrt/9T36hkQFnpTY8LfOL
wumNh71F/l8/1Y36f4Kj0ODnit+lJwyI0/HqMImMwhju0/76rxiQ1rXeJI8S
hZOSbxumPzIg50TjG/q5KOwXnRWXGmNAMdPTUis5Cq/K83IHLRL6p6z/kJoa
hSbPOSSQiwlN6xptBi9G4cpxi09jBD8vrnl+PpAdhWf+S9xSvZ8J7/etd6Lm
R+FHM606OjBhoKFh4F1hFLYtL1/6bsGEKUPPkzvvRGHenbu1dFcmLHwSGAms
iMLjMv9pR/oygeVUg1dbNcHvI7Zq/jBCD788JgXrozBESZtuG8UEoQQBX/dH
Ufj00slUqRgmSG5uYFQ/Ifg/a5HrS2GC3C2PQI6OKJwReNVkQWKCupLAvPWb
KNS0Pt4sFMyEI231YUXvifNPtmUfOM0EC0uP5YVPUaj3MEBT3JkJTkP8UfoD
Udgaz3cuzpwJ3v71q5e/E99z/y9/gzYTglbdaeMTUcj73HaMrMgEygV+jkOM
KPy5pb4tQooJyWL1CUk/o7DX9ohA7VYmZJW5c39eIvTIVSz6ho8JBer852VW
o9BK2ve9MQcTyjrq+Ens0Ugx31eeu8qAB3buGZ1c0RjPu5lr3R/CD8bXbRLl
j0a4LGb2hohfh9VdPrMxGskX1yZPszDh0xp34SahaJxodGkzJfgZyVp3jU88
GlePSnY2CjKBKVkn7iwZjS/zAuhftzPh9323G+XS0ehsKMSlStQPp846qdX9
0bhr5lGlBjJB7ISbzPVD0ahkuEXwjgcTpJl8d5ma0fhkJ491McGHEuWhHOpG
I7dnVWJKIhO01rndSzeIRv4jvbyll5lgdI1P+ZtpNHpeVYk5U8iE4/sePlA4
Fo3iUg4O5uVMONFwUi3WLhobh/ftXaxmgq8hX1O3czQyz/wo2vWQCeGfHmhJ
ukej21epwJcPCLxwL034FJGvq+tee+L3nSV5TwTORmPXtt/XtxDn/Vy/gZMz
KBp7hRuLLG8R+UfGGfwJi8YKHo6IgGyC72+/Un6QozE9ZVmXfp4JfoZnXk9Q
ozEj/c2iBaGfVmErq56UaKyvmpMVcmfCJO1Z1su0aPxvYaCj8DhR31OHPj7O
isaw00NxjoZM0LC6K1yXHY3y235yP9JigmfDdqeK/GiM/qjjr0b4S6rExfxb
hUR+eyuv75En/CmF81tOSTQ6LWa8fCnLhG8/IiUzyqOxLumxqgUR8zjSPRPv
R6O9J4o+kyPwfXKiJPphNLK+9eXaoUzocd+HqeCmaGRbrduoocGEhItH9/s8
Ju7za+bnF30mVK40+J94Ho3W7DcvFR8j9OAud9/mJaGH8YUBJTcmsL26MW/y
LhozryTOrQligvW1pEi1LwSe/JMc+heZEM3xp/HAYDR6d231TCH4Kvb1X901
Eo0L/SXBL+8z4d2HYRSbjMY3XocToluZsKxhc06QEY0WH+3WSb5igkRRxzOu
n9HYbvB+0bKHCSbrNLn+/YrG1N137eu+MiE0tMpo4U80xu2hz28fZEJ+v+SF
aVYKFh826wkg4vYjV95+46SgxLHHO+73Ef5bziP4iZeCgxmvprk/MkFkC8X6
zXoKPn961KrxDRN0KXOXn24m9l9R85J8SuhnzONzgwgFN31m2VFL6Oey2SfR
e9spWHfsgM78HSZMiLcU5MlQsHxi3WwTwf+GRMXvF+Uo6PxL/60/4RfqzKJd
KUoUvGNicXlrIBPcbYVPUQ9RkONMdushTyacbzlfGqZJwfDgrmYDRybU7mGh
++pQ0ONt8/FSAu+BtOAD7keJ/X/EwkvNmMC1NBZob0LBIYM/f6NNmKBwwqHG
3JKCXGeLtqApExxevF48YkPBJyo1BnOEH8bJa6tpOFLQ8/rfuHBbJpRfrSEr
niDu38Z1Mf8EE3pZpB9Je1JQxVSqRpjwx3+nclm2+1BQ8gG1LT6SqM8uft3N
/hTcQF5r5pvEBNKNhXbWSAruSjOuSihhQiH3aZ6laAoamp26dLGOCa8C+0wY
sRTMT9m25lM7ExY/m6eNJFKQM271/ROCv+06T7q+nKfgvyNNTd3fmGBQqrKp
K4OCHTGz7JnThP8Jltq0X6bgTzlts6IfTMglbctuzqWgrcrN0c5FJjwdTv9a
XUDBhz+9fAZ+Ef4ot082o4iCZx+B+swCEw6RnkX5lVJwaVE2WXiOCT+eub42
rqRgy/KrnTmTRH/f8HubTA0FL31uNGwk9OHlnOXHWU/BDG5O5aH3TNhxR67l
ezMFn13onI1+Tvgrup/Ibyfun7FZQZng2+z83yryKwrKv5sNcs8h+Ph0hdW+
i9g/sNomR/DfJqlopdJLwX2nys8IE/Uf5f/q5savFDzxrVQ/l+gPKo1eP2cH
ibjz7PptPoQeOVn13oxQkGQZKLJA1FOpVW5W2STBz/njfR4uTPDIPziaxKDg
mvGL7FecmCA+9fag108K0h+LCOUT/eTTQZ8E3SUKHpws4g05yYRMGsfHHX8p
mBqgLfTbm6iX1/l7VlljkOu6ft5yAOHHwmoRXzljcKdx/OVdRL9r9Xj/oo43
Bs9n8VeLJRP8Vp0Vvrw+BpVfdXj7XmGC8p+1PsGbYzChrzA0q5gJjKM3GyxE
YvCafgLwEv5ZclGDV257DE6eY83VecYEt8FeR16pGDxNT1lbTuApti/w7oR0
DB72HRJ4MkToLYz377P9MchPhzKuGSaktxWZFirGoM+lPxaCBH9G/JhPVY3B
C55ltskrTOBw+MJw1ohBxS1xrw/8Y8KjohA4rB2DmqRnU8NEHDHHny6kH4PH
zC5cvfaXCYqad4YWjGJwa/ONsuAlJswk6Sq8N4/BGp/3+TmzhP986KdVWcfg
+i2fYpzHiH6xI6L7gn0MVt09ESL+hfADX0HJMy4xmMLWlW9J+M+Hh3eDDdxj
kNP5z+mIZsJ/2Y8+3XUqBq9ou7uJVRD6Nf+2if1sDM4Ejm7pzCf8MJfsORQY
g0GPaRx86cQ8M7b5QXNYDF5kKR7wjGVCmGIVZy45BsNE9GUtiH4nTzGyjaDG
YKdi6xVlov6mOkZuH4+PwUvb1tz0Ifrjrc0xS4opMfhI9OX6g8Q843JS2HB9
Wgy+MqTytRJ6ECqvzqZfjEHJZJsb2wk9dC+ZTnVejcF5JXldc6K+z+tNqJfk
EfhyulYqeDFBPz32v/ibBP+BDnkZfsQ81CfW53abwPO4wxFJot4b9jyUxbsx
eCSM7JQQz4SQYMvobfdi0LWDbZsh4edyLdOvf9fGYN3VQ93TNwj/40kQ/9QQ
g0wNLdHRKibctNnhX9sSg+/5zj4rbiH6y82GlsynMTiSN/3v5msmbGFYrw/o
IPSjptphSeD9To15wvRNDJpztxqpjDIhJT753t73MSjxO2fNCJ0Jel2SbFyf
YvD6C0cF9nnC7zff+GvWT+ijvEuPRNR/sb348qXhGKy9oX8+goh783Ln+8Zj
sDtrHSz/JObpYaFZSXoMFmq7Wm4nzju0+/K0z48Y/D748T+l70w45bNx/N6v
GIwjy14r6GVCdkX68NKfGGSLZdbTCf/yXOZkbmelYt9lk4WHhP9Tcp/5PmGn
ouBun5FSoh4ua8ZNeXFS0fF58kTEJSZUDOqc4uGmYqVrYtr7OCY8p7GOlfNS
8T/SSTePUMLPJVvdLfmp2GSwR+85UZ+/nlG+za+nYutVhVcxBJ/rT2m6Xt1I
xbK1XdarhP9L8/zpO7yFinve3bPIJPwf7zY4DApRcfpqsokv4f92ZpGfYkWp
WBqgfyKX8P+AWVWb3eJUrLpmrMdnRcyLmYvvO3ZQUWqwdDHZnuBHudbyrCQV
WVd4N7YQ80hDb/Db9bupOLtq/u4Q4Q/dEYqmNdJU5Ot58tKH6F9TInOdtvuI
++f9dq+5QOi7udJgZT8Vk9N3fPfKY4Koq9/zfHkq1t5+2/nqLuEXrPv1dJSo
eFpgqlKhkfCfwunHowepWJ70wmmKwNPjSCkkH6Ji9uWji07dhD+On2qWPUzF
SV9/5CL0kJW85/A7TSqeVGHIpQwQ/WrfWF0wUrGXfjfqFuHXz1/fUtmqS8Wo
R7W/oJ/A09+9puEIFT+kiyifJfr54gYJRRcDKo6dYba6E/2cv2aoktWYim0y
k18obUzYbXN9f5EpFWvaTk8eqmECLDmXGVhQcUmtUmkXMd8FaHwtTjtORbXO
oE9KNCYkDWRLKdkReNsYitf5E/Mi1e5mrwMVOawswiWJeqyT2LqD5EzFMJm+
f1uJftv1tCdv2wkqHtBfd2i3LoGfV5boYzcqWq6fLW8/RODHfSzbw5OKvBe9
XzoQ70ORsg1buU5R0d4j3Hc78b5RNH2XVeZDxW7qi2plYn4zYqYKmp+lokl6
Sc0VYn5zzzBN/+FPxQ1sw96SxPwWpcTHfzmIim/dRrMyiPktq6fzP7VQKobu
SBGMPkr0u/Bk7v5wKp4K5NnpaU30T2GDRCqJiuHn1265T/SbBednse0xVBTe
m7n/NZXAiyWO5UwsFXMrNgcpphF43dSh8MdTUcXKukD9GjGP67H+uZdI8G9+
bI3ubSbYjLVEHk+holMUm8OjSmL+TaL8WjpPxZnltNzDtUxI3KsZei2Niu68
5++eIeqn4NXKD8ikIvcCn/Auon/U+TUEfM+iojfLLSGve0xwjXZ+Y3+FihXX
vpJ/Ef2W8zyL7LtsQt/cAhcGrxP1lVOYrH+NigNXltqDCT86fkd/vCmfip9Y
r5tvJ/zqz8NJPaUbVFQ/1hXuQtTbrefnb94ppOIms7DUesJPf3zvdr5cQkUf
53cjLAQ/2T9CG/nKqFjUmDPPrUTUF6uw8LlyKvaQVzJciPfWhEBT2HIlkU+4
xNVQ4r2VJu76wf8+oTd1h/W1xHtLZT+b4lgNFaUveO/wJ95bA4eL0pweEvfn
Hjo3SLy34o0M6N31VHwsG3NNhnhfydpPGxk2EXq63BpsS8TvvVNLWh5RUX8k
nt/+HwNIYQqcKo+pqFH1aJBjDTH/xn9wv/uEij/ZPzcJrWNCx8XwxxLPiXoo
WF9xmMgn4KbI9uwXVIyrUq9mkST6wb3mKIGXVKxepyU0Rby/vN6wH/rzlsj/
FNvx30ZMWNdffCmom4o6Wn4b/hDzYM204c+JD1QE3c97vhN+4PR7xsL1IxVt
TC4YyxD9gZ07vaLnMxVdv3po2hL9qnSrEp9JHxWX7YLmuIn5wWp37+m2ASrG
pOW0LhJ+sawc2X7oGxXTaO2xDCIu0BXbVfmdiiyNjmWDZCYctWqJ3TVGRYMH
Qzd6CX4YJ9yGcieoKH5sQvUv0f8u+6/REpymYo4jd9RVYp7RpJTkJtGpeHar
5MU1hH5HzhsvrzKpGNAUUlerR/S3XIZN6A/C7zxSnGSIevhSpyzo9ouKT+5l
Hk7ZwARa+0f/T8vEunLj7UvEe1a6l/Ta7A8VB9dPlV6eZcC7kW37nq0SflBU
EcU3zIDwn61Jh1lpyFazn/1UDwPE2TzG7rHTUMMiwY3rJQOer1+rJ81Jwzu7
+ldVnzDg7PbSG/lcNLy/10l27yMGbJIz/beJl4YJ4rMVy40MaNSYdfpvHQ1H
LoVevt3EADfjiw2s62lYYtmmKtrKAB4HFaEIQRoWRrD/J/GcAfdOfQ5lbKKh
/NcQWvAbBtiFR7332ErDPNFyhYpPDGBJ2K7wVZiGpVs/FbmOMMCs0HOmXZyG
JolzuRsJvS3e4zLS2klDD52Ep4s8TMhrLbtdI0nDsvtpjWKEXvTemq3Zt5uG
UlHevUs7ifmof87thjQNjwj+mubex4SLM1mtW/fR0LdR7tMg4U/qK6riqftp
6HPt9d4dxPtzmPsrmUOehh/Pt/xLViX6ixDlM0mRhiJmXN1LB4n3UmEm3+6D
RL6mHJu/Ee9TM7nb0KVKQyeBabUT0sR7pb4xKEqdhrFHptibxJiwSe9d0R5N
Gp4REbvkzE/495uRT91AQ88K+aqXfxnw2X6Zl6JDQ/hdI3drmgH5/hJBH47S
0G3Nxe2WzxhA/a1SFGNEw6O3QzXS7jPAPd74015TGlZQ+J6tFDBAf/0J3l5z
Gv44vcn1YAYDpHNDtGhWNFwz8Ujt+TkC/93JgbLHaTgtvMCyPZIB9Kq8Wx9t
Cf5L+TszAwl9HL7/MdaBhu4ZCazWZxlw//lzHjlnGu6TS4wP8mVAluVXzc+u
NEy8+PneFz9CP33MgDg3GtpdMvp8PIQBDt4ctw540lB/sLbqvygGaPwQ+vjF
m8Avuth9TSIDtkfv50nwoaHEccZthYsMYOPS0VQ4S0NyZhvJh8h/JNMmoM+f
4Cc5+/VKOQPat50pTAyi4fLvCvd9hL5KS2J6FUNp+HXHWR3tdgacV8riHgin
oYVWj016FwP8H5VoJJMIvulbFiifGWBl2OyvHE1D3t+bbFL////CD103B2No
WP7xHtfJIQZsdR3rSYml4YzkE+8WYv335G8ulXji++UjBjnE/r4QAY1viTR0
zv9ty0uc/+ifpP/5FBp+2Nl/5hjBx42UQzdVLxD6f6E60vuAAXGbTXuG02go
Y2FuLVTMAK+Ck1ypmTRkOLGsvU/c13Bf2GG1SwT/exrTzKiEPz5I8Ru5QsMe
3wLBGwS+/NrXb6Tl0JBjLUY52zNg7mX1B/U8GipemOVTOMqADzYv1o5dp6G9
VUtWowoDHnzrU8+4SUPRLl39ZGkGZPvOndUoomHIIu3Bum0MiPq15sb4bRo6
TlSQr29igEusyIfMUhoe3297MFSAAdrrDqzVKqfhaJKwauE6Bkhd1VWfrKSh
bf6nWhFinVPS7mzWfeI+x6Na7mxkwES5bwHUEucdCmr7I8KAl4do76ce0nC1
5+vuG1IMqHhyifNyAw0zdhUEcMszIN2sVE27mYZFZx0LMjUYEPz5ke9MCw2/
hXsMpBgywMbj/fUrbTQMXbsio2bDgEPM8W6dZzTkStJpHT3JAFHSnzWMdho+
9KY0DZ9hwCrHBrXsThrmT4pdywpmwFDaLl+91wS+HxxeRkYw4ImI+nXmW4Kf
sl/aCiQGFBeZded009BafW5NDLGeJO++Rr+HqO8/BarmxP4zjeGH5j7S8MTG
W74PfAh/0T9/5toXGq7kjpybdWGAfFdB/tF+Gp50qlpysmDA19cv7MYGadik
YOb1GhiQ0DkrGD9Mw8mkCLbM/YRenmBi2zgND4UZseVwMiCx9ZT2ySkabtp0
kFvuJx0Um9NX/s3Q0HtusvXOEB366+tq85kEn4f984vf0iHpwZC/5g8aDj6N
8C1vpYNSNdfevnka9q9+N1GoocNApfwI6RcNWby/9PxXSofku3b5wr9pqHw0
v2m5kA7Kd6h2dX8IP7vJ1Xm1gA6DRSWCtv9oWG817uhFxCk3371aYI3Fh3p/
bIH4/cHrSwlZHLHImlL9bKiEDkO5O7SV1sbi+w/m/yar6PDfVYOVLu5YVOk0
qB5soIPKpYDaAL5Y/PJEgiL/nP6/Cq48nIr/CwuREio7WaKyFPkqS8k5UlQo
VJQUWuxblITE3Hul3JlLJFu2siZEJCVKJSlJQkULcW9cSiUl1W9+f77PeT/v
nPOec2bmj3kGPiSlBUlKEpgpct9jbecYsKkm7fIFBN5xtD7p8HYMjBN4g7bS
BDbuWeDZ8mkMBk5LZY/KEhgkrTn1lfaDZJrsPqtA4AUz49UmM2NgEuu+UFuZ
wMLMJ2ckBcdh8GT8kxYVAo9OzASKzx4HKqIyzlOdQN7rwp0DwuNgerwXZ2sS
2DrL2sd7Fn3/CBX4fWkZgc0/S4Uzp8eAE6xVs0GbwG/sHfWZX8ZgbYB90Add
AmWHjedXDI7BkE+4dowegRXa6iKmXWOQ6Jk7qGJA4KsjelM37o3Bl985Wj+Y
BE4schpP0hgDncNl97xOE/ij6bVLpdQYHGqvc311hsDwrB0+j/7wIdv4wY+t
bDpeMHPJbZQPvbnPE29TBIYtulQ3+YoPC+e+1dFLItDVQGmvwGM+2IaO3M9J
JjDk+KZo7i0+xPX92L8glcCWyjcoWMmHpk1Cv4g0Al/a8DRTCvkwXS6Z/D2D
QI1FKNyWw4fV8sorPS8SaOpadL4hkw+BsVotPTk0365rv28GH4pHVntsyScw
QXVV4Y3/f5+yw+J3/WUCVx1Ubwqlzys32J1fUURgr6jQPqcCPjgtc9HPLiGw
To11UfAqHzgcz1bJMgKf1O14IVbLh0c/Qw7GlhPYs/iU7edGPggeOPXnayWB
EdeMc1bQ9Zi1JVw4VE3zo5eUGXXxIWx1mkF3DR0XLvpG9POBfty0WdcRqJAq
qE4O8WFE5Nrhm/V0fpsWuvTRfmkGN/zTaSDwsmXUljlf+LD/VWt6ViOBq7mq
fg0TfEjb0G0ocY/A6gUDLk10vPPKwNNT9wnsnlm55wufD+Iyn70mHtL+X3c1
2TzMB6vo37MOthI4Pi8j+G0fH2K4olldbQTazE7uGezgQ729tJFVO4GE2w6j
vHt8+H5TreNGB62vrmh8tIoPehorfbVfEHg2T8CmLZcP3mxT4cyXBA47d9mr
U3zIn9yULd5LoHNJaPfPCD707Xc0iX5NYHl957YeLz7IPtrf+bmPwFK9dYdx
Fx/sDfz8Pd4RGLx9Rdo1Sz6czTgu8uIDgWsqdmpnG/LhvhAzd+NHAv9WtUX5
LeXDX//EtbXDBJpNBywKVOCDSXdW1/JPBM6Wevh0WJIPIVASmD5K+/PEYvYs
MT6UFdfMmTdOoN5vu78dwnwYXnAvP+oLgfKeukI7hPigFtluNv6VwCm3eEc/
Ou7y8XW32ySBe0mF0GFRPqTYcYOfT9H5qnuXRMznw9Pab3MtpwlUVq/41yrN
BxE1gYLrMwRebK01OLyYD3hGHJb9I1C7dCbq2TI+RHyVf3VhFgPJvOe/iFV8
uL53aaiYMAM3iB4rmTTlw/h9g/mRIgx8KqLRkr2BD1p65kX8OQwM3CRsPbOF
DwcubLXYP4+BtfHyEmnb+ZAl4Pzm2XwGVhasGRXfwYdun4PHLKQYGFR6//Lc
nXyQehEkWb2QgQZNI+v3OPJhq1lUiaYMA82bU4ze2PGBWRBvmSrHQH2nG86U
FR/uSJzvF1Vk4GKDs9cTzPjw83je8RPKDHxbsEtDhM73vw9XF4yqMDDPeuOA
tTof/LfWX3FVZ6ApP8K9QooPH/RNlIQ0GbjlHdUp/2cUnGRqz5YsY6AAu0M7
lDcKT6YNp7drM/DLlQGJQy9GweL9NZ8fugzkn3f0Sr4zCrUP9F9l6TFQfoUd
ebl0FFZcubrZ0oCB3af2TeinjUJeom7dJ0MGmgkWn244PQqyYSXLE40YqP4u
/XrjiVFI2Lv8gpEpA6XvZDhzAkdBwKJApH8dA5eVHNvu7TkKYcs0whjmDDx0
NWCbl8cojM7LG9K2YOB/nitM4t1GwX1CZVeHJQPfONT8K3Afhe7urPthVgws
c2mwjjw0Cja3FVcv3sLAhKmSK5d9R6EpL+1Ssw0DD1t/nns5ZBTWnJZd5LuN
zj8+KHgochRK/VMIKQea37pd8AFrFNQcF36t3UH7HyCpksoZhfPGiR77nBh4
fzpV7gpd39zFEs+F9tDzMFXosC93FGIE2Vi6l4Gt5w/ryRSOwiRXrNJ+P30+
WG2/Q8ko+D49rTrlzkC/zgzZqzR+VzWbc/EgAxVPivR/pPk70xh/LT0ZmNKh
dfIVrff45KzAEW+6H5neZkkXRgEOnupP9KP92+82ZZQwCtc3/7E1DmRgut/c
K3JRo6CjF3m7P5iex6/mBtl0vTmLfukyQxn4zPfktJ3zKEj/CsvUCaP9nN5U
dnvDKDQUGSb8fMzAs8IfqV7PEXis9eigrQ8TeVnvz8mO8CCVv37tTT8mSsWH
yNh38+BgZbXUskAmCqbpnB+4x4NVR7W554KZeOjJQt8NlTyYMc5p+BfCxMfd
pmJ92Txo/S2d4n+MiW5mHxqkOLRe41nfV8eZOBEwlW4Yy4MDDAELqwgmzu0y
nXX6GA/0rcPkqqOYuO5db8xaf1pvLn9M9RQTo1tqlHwO8+BRu8d9diwT65VU
HeU9eHD+XE/GLwYTP0lrhRq70XpOdkc845gosjv1bQ6N9RSbrV/EM7F7W/eQ
zAEe/O43UcEEJl674bt7qyetl1f+vYxkYt7IHbl+Px6kHNZsU0hkoolC1Qr3
EB64a2fkxZ1j4uV/zdf2nuDByjHJ8G8pTNRNbF3vGMOD6UrWNvcLTOSnZJc8
iOPBw6O/NZ+mM7ElbraAGZsHySZHfptmMdFdNGzPxkRab2b4eWE2E723+ARF
nuPBiibX4kV5TByxqYnk0PgXozM65hITR0/Ip1nS/IfWm3eNFdD+v1w6fiSB
B+fm3dF1KWbi2ZfU7PlMHrg9MxRsKWViCv+voloErZdc0mt4lYl3nRo12gN4
8NNJtSK3gokbe1+ssaf9eKB4njW/iomKtyL7v26j9d7OdY24zsT4Cur1wvU8
2J8f8x+3lomxLRExCjo80PH8MWfnTSY2dPnkhcvyYErb/13TLbofZ54QhYI8
uD/2oWblHSbmlOxvVfjMhcRrzuyMJiY2Hs7M3NTHhX3Hnh4QbWbiHsapb+cf
c0HH1NL06AMmjk1WOvnXc+HHTJ3khxYmJhlfeK1cxoXmJr1hu8dMzA0tPzma
Q+sxL9+uf8JEmFijODeVC66bFZOXP2OiVTCVkEpxQVs80SflORP7/mYkpp+h
9Z7NxlldTDyd4WwocpoL95IjZQO7mfg3Ydu1m3Fc4DhP8F/3MtH09IBnVDyt
p+TVbP2GiVNedoZCbC5ovetLv97PRL9Dme0TiVz4nu8YrP6eiczGPQP99PXv
ej6yogaYuMtxqNzxIhcoHfPFvz8ykYpe7fXyEhdcxqu/eXGZ6JQp8OJTCReW
VWk/7vrExDVLm1bJVXDh27GcXAs+Ewe3VEzyq7jQZCpzvHycibUnMg+L1nCB
/eesndIEra92OXYRjXffFdCM/8bEB2xVm06av5QVNv19ktZjKm5SKufC1838
Do+fTPzcZnm1v5ALd8QPFLVPM1G+mTtLnc4voaPn5Lo/THzlsd9aOInWS7Hb
WfyPibPrLu2/TXBBc3ezjowgC1PeV9QnhXBhQsl0FiHMwuSTCRr97lz4uVft
qoYoC1VPNea62XJBIEt0zwMxFrZ7nsqTM+bCnL5xYS9xFtpYK8mnq3NBSrm7
co4kC0Vr0gLDxbkg79rgWrqAhesn619u/DkMalmX59hKs9Cpad1PYmgYtPoS
ro/JspAjaLK6uGsYVimHunMUWNik+9tZ9uEwmLi6iBsos/Bxvam4fP0wYJZF
XacKCy2UJt/2Vw7D5j6tQ0fVWZh2csfyqNJhsFeWkpLVZGGNsmPTp8Jh2O06
devGMhYazinp+VcwDO5Zb732aLMwrH5/d0TRMHj3PVj0W5eFmZIc9gx9Plj5
amOWHgs9BMbSJGn9cNcUP3MDFvb0xc9ZUTsMMVmRcu8NWZgr+Ei44fYwxPcd
aI41YuGmQendy5uHIVF5a5CGKV3/WcGjHY+GIY1+MX6wjoXVARdzlz4dhtws
+RZPcxY+qB7pz382DMV9/0LmWLAwccGNpa9oXKnMVSm1ZCE2D7JDaX6da/tj
GysWBnz21VhH6zVl1YSNbWbh+ZnIpQpNw/CoL2sJx4aFLvfSiuVqhqFDmdm+
ahsL9cgdMe50fb2ufhGd9izc5rH+6doLw/A+y3HZ0R20n9ImaqKsYeD1mXbK
OLHQ0S/10dojw/BZWT36xm4WRhKKLi6uwzC2WOw3v4yFR5S/9jjYD0GB5fcx
ya1xeHWnckcBYxD+Czdf7/09Dn3CmIHlFh8gsuMSKzz5NB7QfvWHnfsW+jOG
zvnqxyP7nLKw0thrkDkaN5PUG4+q8k28nWndIHZkg9uRsDP4t8ua2zrTCZ1R
+1Ti1M+iiO+n4ecq7VAzvTM/qvUsGt1g6Xo4tMCOLC9VXc8EBOdAw4Npd6HF
9tVPCSk29jr5jUgRdSAfo+F9ZiEbp2UqTt0IqwPv6oAeIRk2pktkdv//fwM3
h29YRcux8fRfHdFzgXUwV1Gw9qcCGz+Cda1eUB242NkuDVVm45nljoF/aP6V
mNSUMRU2Krb1rYv6//8Lqt8Leauz8YpJxW19GttydUIHNNjoWWL+rorWu6h4
bMB1GY0XBus+8KyDcbtGhx4tNu41qvV23lMH5rFidx102dgsmnft/KY64Fzf
serJSjq/5N7d4zp18J57McdqFRtTJWZOyYrVwSolnsTd/9j4CSzi5r6/AbHb
/otet4aNJ+uiKsUrb0BnbNRYjTEbE2q6DuWeuAEaNQ9dV61lo9JF8wzG+htw
lCf1pNSMjQ4Ji+sKZ2pBZntBaY4FG8e0V0/oHakFT+KzguJGNjLqNNbIatdC
bY3pmRQrNnZ+E+TofqiB3crtXmds2Fg3w764yLkGSrbL9whtY+O+XVcrHeVq
YJo4YBVtz0b/mkg+o+86bK0tq/npyMaWQF4bUXQdMj/90AzdxcbnEjurf4Rf
B76yRcqYMxsDOpcusXW4Dmb2CULeLmy8pH/tZMWq60AyXoYMuLKxVTm5ca7c
dXhbqzrg6sbGLWlG5cLC1+GHmmdbaTkbt36yF2j6WAGSD5vvyl9j44WtRuPd
jypAy0+9Lq6ajR+sX8dxaivAQupU+fcaNv5qkdzqWFYBLjV9lw/UsbGs8s4G
s+IKCHVZm9lRz8ak+HcO/9GY/e9CknkDG03aRUN+lFRA4eXJ02WNbHxNvK0y
v1IBjVt2RCveY6PVxXMVT+h473jl0fj7bHQq/unMvFQBX5Ml/H48ZKM8WfY0
JrUC5pn6exxqZeNm1kfTZbEVoPm21bmzjY390j+frzpQAesZy7dhOxsHduSd
uGNSAU5arI3lHWw0vTyxfpdwBQQ9HVir/IKen3P8Vx/vl0N8CBqcfcnGnPT+
huaIcsiTy17+s4eNbJeGKyXLyqH+9u/Fnq/Z+ENq752C1qvAF7kxd8M7NkYT
0bEJ02Uwu0x6VuUHNh751bGxN6EMVBxCphZ/ZGPHYaklg4pl4JC58uMvHht1
f7ifVlp7BXwx4bXXKBsr/YeX6LWXAnOI1/FyjI09SzdmlHiVwsWzVi2WX9jo
ssQ4XHdOKdTqX2649pWNRftm2clcK4FnXbOuq06y8cvicqeYgyXAO+FWSk6x
UchAzus/tRKYpdqQ+/sXG6kXF91SucWgeF/xgs8MG5fNJ+JqbxaDoU842fOX
jW2xRwfXphaDrUQ3Y9MsEhfpqlX5RRXD4WrDiGohEg1DOq4a+RVD9O6kYHUR
EheIBGWaehTDhT/jnpw5JJ4I2uLxzLUYKvNt9/2ZS2LFxEJCjcaPrUt3+M0n
kWpNVDHaVwyDfNGtryRJPLzccmL+/mKYSTqM1gtJlMfNYhU0X9a42ahGmsSh
hWKl652LQb9PbaWGHImbbg4Ozbcths2x0RpJCiSe0o5TrTYtBo9lfQr/lEic
+GpjPl+1GCLaTKUCVEh8NThCOfwuguTgCyJv1Ej0UH72UbK9CMpkJmc2a5C4
tmDg0uoLRfCg3vFb7VISxW6Rw7Odi+CtW+UnTS0ST15e1qAiUQQ/hSXen9Mh
UbY2Q8yroRAWlPp1C6wksVjSaamYZyHobG99EqhPouvDbxWeYoWw8fuy5j4D
Eju0BZznlRRAmPlARZ0RiS9USIk3g5eBMwiFy0xJXPhtQCWMuAzF8RezUtaR
uPqiQ5iy5mW4u/L3OUFzEjXF/R3dHl+C1527zwQjiTKbYhOLwy7Bt+O1p95u
IDEBgrfr6VwC8cXSYbabaKzsc4A3lA/L7h3xr7cmcYM7lRtXmg/g9eyA1lYS
H3/Lme0bng8p8dl6bbYkJs+5m3neNh94JQHTAdtJzOBzD+/RzQezNrOHUo4k
7v3brjS4KB8S+fPOVe8k8VKyVPWkcD58nP9mn5MziS9HVLqnZvLAVL9U+9ce
Ej/t4I3Nns4Dyv7EZKYricCT0xKj8cCRzXfN3Ui05X4L6aCxUbIc+cGDxD/P
1Ax0aZxwfXg38xCJbt35UUI/8uD9yxrN5V4kzikPOBLGz4PVU8wvrT4kzqq4
UvLpTR7Ey++87e9PouX8gBdKzXnQb6oRLxlE4tbwN79X5eXBf3u/7qg6QmLh
4xMFdcfyIC7qruquoyQu/nnavwLz4PXFxNGpMBKljbn8CME80G90u5FxgsTY
6AjDgVu5wHyvx1gfRdd/VUNKMDAXemf93fY+mvb/4qvDoJgLKzSeKjJiSTwe
xj8QyMyB2I1Zw0uZdP/0r8ftfZYNOqfXRvudIbHx2RR/9uGLEF0stlWCTSK7
dPSZyo0seNHaK3ONIjHX9ZRd4cIs0Bot+rAjiUTvJvN92RGZECV+/OqPZBLv
91Tyzk5kQMdKqxPpqfS+6P8ecjqRAUu3y2wySydR9H1OmfmiDIgI/ij1LpP2
61BTSFNjOrQnVffFZtN+lvUOpUSnw5Jqolgzj8Q0o/CJim3pcLzL4WjLJdqP
IBdvG710eDKphr6F9LzKmRlNK6aDmtyXefNL6P0waxm8vyAdjpo09lRcIfGg
RXiNrWQ6tO6hLjmWk7g5febJdxqrRO4LmqwkMcnOWFBCKh1CslasS6um9yNS
w1tIPB0eNvwWWVdL79+/H0NMgXRQeve4s7+OxKKIobtlI2kQLJCRHXOLxGjv
dxGqj9LgvrqPr8YdElMPWO9eciEN5C1NjB42kWhjOV1S6pQGAYdEBX2aSZyr
8H39AZE0uMfqfjrvIYnXHuTvKii8ALJFBenlj0g0V305+7jJBfB9dPSwQxuJ
7z6ohh1pSIXGT5YG35+S6P+3bVuFcSp4rxh4ZPqCvl/Jeu60kz0Pt+2upfS9
JLH+dNTPyJgUWBAU436ql8RndZ9lHEaTof6ays/7/SR+2R/mNNB+DiRejDV7
vaf7U/JMQcHuHBz8fpszd5BEr9vSKrXdSVAnw957dYjEPZ/2NxIBSSBuvHe5
PY9EVtKelqaFSeC+W+fb1xES5fYXchVbEqHmxK8758dILJ0ftPbi2USYm/no
rMkXOr+GI1urXBNh/+0LTm++kjj8wOmDtlkibNhqI+gwSWLO67upu7USYWnv
36sPp0jMUl1f+k45EeZ4Vu0xmyYx8/nZdyVyicD/dnh21Qx9vdYqIlA2EZ7F
Klxb/o8+3+OW2krjKsmnrhdnUVjWMuCwi8apF2PmLBKm0PP5zg3NCxPhhO7q
6/EiFI4qRCt9F0sE15tct79zKNSLrqyS/84BtM6cd3QehYK5Ffrzmjmg8XLb
jU/zKbxUvF3peDQHRA4KHnSTotD91i01riYHRr7USLxcSGFgx+mAuzUUPI32
qd8qQ6HtLsVoSwMKKsUXezbJUfg1JyQrPI2ElIyOBUaKFO7Yq79Oa4wN4VrM
hivKFKbcM3C8Y8CGvbXGPuqqFMopGeYb+CTAks7sJnFNCs9NnUyMu3MGRNwd
/YllFP4QiBz9OhgPn8Zmy//UonCeOWpJzYuHSrGAoMGVFB4X1+z0D4iDlAtq
SntWUWhknVyTWMGC40u7Hrb/R2HLr8vPvwmwwKX6dMjGNRTW/rPXHj7IBHOL
dSr1xhR+v1OlqvCaAerPxlv111JYrpnokniIAcL78o8VmFEY7vnLJlWIAbyR
XepKQOdfs+j8zVoC2sLFniZaUGi/aKynI4qAcpGGcJGNFBbdjs6cvZOAcynB
mlFWFDoKbo3imRJwbIlmx8RmCu/ePNZ0RpeA3ZU9kV42FMLnnPb0pQSYmScs
77ejUErNJ52tSYDqE/MXjvYUHvhUNtRIY0GXr9GPHCm8Z79IPn8JAcPcAh3z
XbT/559H9igS8PjYnu5qZwpj29492DuXgKtC8wltFwoXiyd+yh6PhcSkppU5
rhTeeup2NfNBLBxVPfpK2o3CQdNck2EyFnZfXc4660HhIS1vqLGKhXXr3qwS
OEShaezTvA+fY0Clleo75kn7Wzxz6cOZGBB03hA/6k3hivvPTjfIxMDwx0lD
Dz8K3673D/+rfQpaQ0redQdQON8izgIXRUMiJWV8L4RC9d25utI3IyFU+f6A
8TEKN+m9PGsTEwFOpcepq8cp/JaNETrWJ2Dxw7dDaVEUNuTn2U18CgOBneeS
JE5RKFF2xlm94xh8/LBpPTOWwiqR476Gj49CS9Av3i8GhR0beJYdb0Kh9E9Z
SlAcnY8fOdMqGgpUgjsOxVMY/Kk6XNg+BI4oSPNdEig01wrUOFhzBHYWtVzo
IClceagx4Z7xETBZE2lplUjrtyb3TL8Mhu7IDTqzk+l53ZWzXOZ0MBy7J7bg
/nkKI9N9bP/sCAZpsedTRBqFvksFlHcbB0PV9rS3FpkUUpdEBCZ1gsE+1e2B
QDa9P2++KWhoBcPnvmVljbkURm0IU5hPY0pj/Fz0JQqz5VpHpDWDYYVvzYn1
hRQW+DkVaMsGw+PKKPeZYgr3WtawlnwNAp8pS+tbVyisbmgV3ZwUBHPM5+lF
lFM4MvI4lCsUBIXMTmnTaxRuDjSafdcqEDa2pf+eqqZw3eea+tV7AmBwgcdA
bS2FEfw6TbX1/kDs1mo9dpNCIcXxG5d/+IJazueK1bcpzNiiIv48wQfuDNWm
frtDoaxIeJWFsDfsWxF9suouhe8/GxpXe3tCxk1xm1UtFBKzyt8nKx0EE4Eu
g8+tdL92fm8yPekBPVaZ8uVPKGxlh0b+eu8GYeSBf/7PKLRYsp35bNoVpLu0
h3U7KXxZlCbN2eUCVYoTT0a66H041cZ/+tsZHDzqqkt6KDy8U8Dlxvdd8KXo
VIb3awrjTudbPbHcCdS4VezyfgonvZkpz3mOsHKNhPfwOwobqedPuO8c4Enk
y20FAxR25Z+b91rdAXzvZa05NEThknMFokmX7UFM7JCyBo9CkT/WejV77aF4
u67QwAiFfe7Wi3xM7cEq9eun3DEK1z/c3imvbw9DfTc73L7Q87pj0NdOzx6Y
GrE3VL5R2F59/OYxbXtY4rs5u3+SwoFjK0+lSdvD3UpJVtZPCnlpn0Na27aD
+1S3397fFCoXjfzRWbEd/q7PdlT8S6Gr4Ui8o8U2yGIeNn0lwEF5+RjpF6J2
sK5thVqaEAe3rZRNYsfawOsF30WcRTioqmdfp16zBcJ33xqTEeOg6yyJCe2r
1iCbQ3R1zeOg7/NrTTbHN0HN0JZbyRIcLNXx22KkYQlfQ3rjF0hzUDFr0jj3
oRkk3swJ6pDl4K4T88JdVpmAvoCXE0eBg2ybd8Gz+g2h3Upv/TZlDn7/Ux6h
3qoP/uSkxnxVDq5J7gz4XKUFc7tuz32izsHraU0OHzlLoESROXFWk4OnetqW
S/cowmYPm94tyzm4eXHHkOeZhTBctLBxjg4HQwpb2f2mc4A5/qqgZQUHLcfn
vJnN+WOusSaPHafPQavLvfvnEl/M70V6h276j4Nw3OC/527vzd3v6bsIr+Hg
/MGmRaK+beZ/50xhszEHF6/TLX+Qcc384vY7y4m1HIxLf1QqJMw2N0tlSVis
56BXtIkoFWpr/rrPdvIfcND4mP/mRyET6/8HBgXOWw==
              "]]}, "\"\[VerticalSeparator]1,1,0\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]1,1,0\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1:eJxF0GlI0wEUAPClK1ySOs3wKI9G5FULTSpz80zRppKJVJSWx0wZm3fTqaU7
1Mw80073n6VGl1JYumyFjiz74BHJzANUiq6lbl41Wwfkew8ejx+P9+A9xzhe
ZKIBiUQK+5v/6lfNCiuIvcAk/Y/0phyPQNlbn1XzjdVsa9k0WKBoJpFlWvCv
emHYD8LQd9UKskarJSzAdvudg+cIGjh8WDk7Q3iAfauExgcyA8FUbXRbVXw4
mPmUfyjfLApMZCjujx05Cp4IGR/SBcWAEw/mquP6T4H95Evkfm4C2LhjkmQ7
yQa7zgVzvUuSwV6dNi8YBhxwa0jstpc8LvjZejM9tTQVbNPRPNrWkwbeKtSl
ya0ywDHulOripEy8zznsllKaBeYxIngcTTY48Eqxm2gnH6w0L2hcJ84Bn0nd
0ch6lwuWWVrUGpjmYV/1mEmLz8f5qcrRR0QB7h+kGRipzoI7uPLU6dpz4FKr
gpFc90LwrkGiIXgcPauTOi2KisCcUPnd445C/E+LR9lyH7rP6VU8K1kEnrPd
t6aILAart1B03+6hmwLm1aahErA7n8k4PY8WDNwU82uKweNXP1Sn0EvAlpmS
lSoVmpLmH5uWXQoeyjthJ3E8D27/GdWY9xp9+HqSvSu7DNzLGlk2MbsAXnRg
v7nzAO2T1B/nFFoOjumqjx7VoPd6CgKCKi+ChwX+Lmtr0FndFKryEvphxOUJ
v2tot5T2HEYz2kE607q7C02hJGymfULfjnA1nPqCDqrTfCbUaBGt8ImdFq1n
NETa6NGadFUJdWMFuLJTyhvYhKaTkqIrrNGc8gXaBnv0xxbz50YuaNH3kaZe
NzTNU3ZBQkef7KYfI3ui9UZLvj170DciFNuLvNDedWITPwb6/Rhr4bcP+g9K
cRxt
              "]]}, "\"\[VerticalSeparator]1,2,0\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]1,2,0\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1:eJxF0GlI0wEUAPClK1ySOs3wKI9G5FULTSpz80zRppKJVJSWx0wZm3fTqaU7
1Mw80073n6VGl1JYumyFjiz74BHJzANUiq6lbl41Wwfkew8ejx+P9+A9xzhe
ZKIBiUQK+5v/6lfNCiuIvcAk/Y/0phyPQNlbn1XzjdVsa9k0WKBoJpFlWvCv
emHYD8LQd9UKskarJSzAdvudg+cIGjh8WDk7Q3iAfauExgcyA8FUbXRbVXw4
mPmUfyjfLApMZCjujx05Cp4IGR/SBcWAEw/mquP6T4H95Evkfm4C2LhjkmQ7
yQa7zgVzvUuSwV6dNi8YBhxwa0jstpc8LvjZejM9tTQVbNPRPNrWkwbeKtSl
ya0ywDHulOripEy8zznsllKaBeYxIngcTTY48Eqxm2gnH6w0L2hcJ84Bn0nd
0ch6lwuWWVrUGpjmYV/1mEmLz8f5qcrRR0QB7h+kGRipzoI7uPLU6dpz4FKr
gpFc90LwrkGiIXgcPauTOi2KisCcUPnd445C/E+LR9lyH7rP6VU8K1kEnrPd
t6aILAart1B03+6hmwLm1aahErA7n8k4PY8WDNwU82uKweNXP1Sn0EvAlpmS
lSoVmpLmH5uWXQoeyjthJ3E8D27/GdWY9xp9+HqSvSu7DNzLGlk2MbsAXnRg
v7nzAO2T1B/nFFoOjumqjx7VoPd6CgKCKi+ChwX+Lmtr0FndFKryEvphxOUJ
v2tot5T2HEYz2kE607q7C02hJGymfULfjnA1nPqCDqrTfCbUaBGt8ImdFq1n
NETa6NGadFUJdWMFuLJTyhvYhKaTkqIrrNGc8gXaBnv0xxbz50YuaNH3kaZe
NzTNU3ZBQkef7KYfI3ui9UZLvj170DciFNuLvNDedWITPwb6/Rhr4bcP+g9K
cRxt
              "]]}, "\"\[VerticalSeparator]2,1,0\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]2,1,0\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1: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
FtZt6JkF4wqP2tMGbpjLXMlb1ToLpHXUwdfObmgU8+eL/aNZuOdZxHYg2A0v
1DM93VkzC19aWmVTE9wwzP7fRoGqWRD5b9yWftUNqz2GLvAS2DSSNcbsnhvW
01Sd++7NAnlAovTWMze0Dw29vL5uFmqVdF9xDbnhuz7hh7ItszCd7v3jxDc3
bGqJZqp9NgspYa08k6zuyKtT7bf2ehaky94WZfG447SI3kn7j7PQ2jumrCvi
jmm3YjoFx2fBiXWpa0nCHTfuOn8zdXYWvsuzuhXvc8fvjiptu78S+7lvXrJW
c8dtBQ2z9kvEfqkSCSy67rhSuWWgmsCtTYpb75m7I/fN/YZ0wt95Xueuh4M7
FgtervpC7LcsaquzydsdcwvVS/M+z0KakffA4wB3fFOgUKHYNwsy4WdOBkW4
Y5D2hryfHbNwzCRywbPHA6v2JNkVjsyAVv0KW0+AN27dPDbEyzoNqp5TStnh
3pjmti7ZijEFBzgHvD2o3thQ/uy4xeAU7L73NEsm2RuTvi+mhXdNgZjjg/al
S97Ikmk8e6B+CgRZyr435nsj+DAOdN+cAu4blyTjK70xaJOT/KX8KWC1jrO1
qPHGnCa++oeXpuDX6pnzwk3e6FrQuGCdMgWLhd61n5964+8dtzYHJE3BtJHt
xI3X3qiVdf7Qr/gpGF3UETjz0RtjjvepvyXwQI6i7uEJb3RnrS5sSJyCbi2J
M+x0b5yTTnT0S56CpzP8JT0rxH7Bub/D06egKZ2lN5v5GB7Je72RfGUKatW+
sXpyHcOv2v81r7s+BVKP5ll+lB/De/RpXquDU8BV95lp62cfPMF8Z3HO7Qt8
tbwS/3DOB2kpp965GX+B3hlTbttlH0za1KvbqfQF6qgsGV+ZfHFbn87Xxu1f
4NrWOqGLXL7InO6s9ZzrC1BrT13bs8UXnS49l/ZfnQQfMwmJpzt8cfE7p6nw
zCQYf3lf4bnXF6vF2YV3f5qE/bEp+/4d9EXuVyXqH3smQUBYtzYPfdH6vdzh
o88m4WfVqpqqCWFf0k6/8WQSBo3utvTa+WLGm6B/jc2T8GTMW++0uy9qOZFq
XQhcFiX6YuNJX9zfbjWu+XgSaAKvLW+E+uIsW4zaatskBNyO69cn++I017EJ
3s5JsNHXcB6n+WIxa13oj+5JyOvNenhTyQ9H3LrqHcwnYe+iQcChxONYrht7
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
FoisOiVymS8WWX1CxnvXeEHp9/oTIYKxWLE22sGUtQ7oBkX1lqKx6Fl8c6mC
vKZZkXmIa9/2WPzw2+FJjuVXTc+RficuyVjsp7XUOBR+1ty29/StaelYvK4k
kZjX/lqz/yzXnw65WKTfnJV4FFavmdZaalasEIungzZ8DZy9rmnMg9fJKrHY
wPsi8bTlGU02x490l0OxuOtf9ZixgJRmc+kZ0NCKxW+P44fNNg0fDl/kSRPW
j0XN2kRGTL+9psLhytEfxrGYZNtz3G8tWXM+UUf+nUUsdnVdVnOduKNZ1jtE
qbKNxXfmz2r1/3uq6b4j/O1Fh1i0XnbYOib5QVPUn1/ipGssLrF+GvTMnNbs
fXgrxNArFl9dSh+JzfihmcJq0L7LLxY5hxcKysKYwdDiswDrqVjU4z5ON0jh
BJa8qGOjp2PxDj9f38N9m6Hxi+CDprOxaKZpXTWWJgpnFarY86JisXBU/vZQ
y044QDI+Ek4m8t/4bz7/nxTMdk6U28XFYr5kjw8nixyUCMb+VKDF4vhO+bzG
QXnie0rEiC81Fn+ZnFQ9kHgQhG/X5CxkxuL5l41/hs+oQbLutHrFtVh8kmFw
YmwcQT+NeiGuKBb332T648asA0yD2wY9y2OxmvTMh09QD+p3P5TFW7Go84mR
ybXZAM6EWMX8Vx2Lb4pUVegMQ9jXMvfq1/1YfC18MTS40BimOePF3tcT/Pdn
rN+w3RSK7HcE3m8h6uX4t3RPTzNwLqpvyWiPRdt7IleXfM1hC92WL6iTiCdR
WMx2vwW8VmO4m3UT+ZLlLlAbLIAWl1Qt8y4WH7ItXyRvsATdNxIsHO9jsePp
bRjZbgmhgoV/zIdiMZXnbUPBbksocxBbvTQWi5ERpizSRH/3X8v7PjgVi5eO
LLCJylnC+jHhrxILsXjU7IsJmw7R/1KX5058i0VvoZdWzWctwe/E5qnqlVjk
KDZXbu+1hJw7aWM/f8eiz54tOel+VnBslZ2xnZmM2QKKo5yHrIGU1+HfxkrG
YI5m42V7G7h8+PysDzsZHTYbrmY028KdEW0/zg1kbCT9Z2oYag9PKcxfbnOR
0V9AVyAy8igMSzz2suIhI8sOzV9nuxxhpYP0+TsfGXk22xhdcHUBac7fgxpb
yDgdeH5S/JIH4K16xxFhMqpy8HC8kvCCo+YR76lbyVh8bNC3sN4bgr6q2EuJ
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
P5tLY0lKde31fAmE28wNNTOhMWAgQWliFvFzeDCXs5DG54OD7hmpEtDKKXUy
XkzjgiXdq75ekcCBjjHlaUtonOKe/1knSQIlU7aZ6QCNR5Tt+p+dl8AE25S0
ZEsaj+oUzv1J1h4R/GTV5TSe0+IPdZPzuTmmJ+OtaGxTmXzr0TUJDOuMHFBe
TWMUXbJ69W0JbJ5a6XnSmsbY3iM1hx5I4JbtpHo5Gxqv2iyOHfZcAr8idlqF
2pH3Q3YFpdZIYE3u7ZwBB5JP4DSmu10CFzr7tAM20DhdJm/U3gEJSKZaxnOb
aNxqlHkwQZGDJXaUnNdWGlNN2kY1T+OAiaz1b3WiUXRp3Mi8ORw05aq3OrnQ
eOnEjsnxyzgwEu22r3elMczcsJ9bz0GY2v2n9m40nh2u9XvdTg6q7AaNyj0I
vnFB82z3cqAZtSrZajeN4OJ9/9phDvwfnFZ+todGYdEv00mhHBSJPoWY7aXx
vNYQ04RwDsZPm8Hl+NGoOX3tZJ0IDtzs9zsZB9C4BmbkdR7jICfqUVnaQaJ3
SkKJdhAHCnlDzXSOED8a3pUaHeBgo9g2Lfkoyad2sDpwDwc3p52frBpCY8e9
RtdwVw4G7Nti4o8Rv4+UPVy1kYNVx2cPKEcQf9lv39pnzUFi3hHPk1E0Hmvc
bhBhyYFIXFQnd4LGiJLo5L8LOTBTV7IKPUmjyoplIzuMOKAdNuUMUDTaeISY
3pvFwafjV7QDWBpnG6fm5OtwYPhQHMedonHWmV8/1mhzECoxkfOKI/HTVXXP
kP1K9TD/1jPED9Pa7v4/Xn39689O52j8qdgrvGbMgV+0in39eVLfZ66r2izm
4NnD7U/tk0j83MTqY1YcjONSjcqTSb1nzrsldeRgp8aPS1ZXabzc9EzPzJ2D
7PXmys+u02i41CbgxyEO5E+cCDG7SWNT06iihJMcOOa/leTcovH4x96exIsc
9Gl4lKVl0Kg1ryE35BkHo0uLn03KorHObdvR7rcczNyjmRedTePL0S+L7rZw
YDnmWEZPDo3yp+SS1nIcbM35dH1nHo0uyoubA/o5CNi6+EJVPo35a3JSvg0S
vv6djbV4TKNt+c++SDkp3Ljee+J2IcE77J8vDpVC4er1oapFNN6pH+VkLC+F
99LMAzElJP/qaWoRMlLojlPe01dKo4N36UDwLw4UTX1c3V7R6GForxTazYF2
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
aW3vPxAiFdSyceAfD/8DJBdg8Q==
              "]]}, "\"\[VerticalSeparator]2,2,0\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]2,2,0\[RightAngleBracket]", 
            "Tooltip"]& ]}}, {}, {}}, {
       DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
        AxesOrigin -> {0, 0}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, DisplayFunction -> Identity, 
        PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
        DisplayFunction -> Identity, AspectRatio -> 
        NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
        Identity, Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
          AbsolutePointSize[6], "ScalingFunctions" -> None, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
               Part[#, 1]], 
              (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
               Part[#, 1]], 
              (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
        True, PlotRangePadding -> {{Automatic, Automatic}, {
          Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{
         "\"\[VerticalSeparator]1,1,0\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]1,2,0\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]2,1,0\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]2,2,0\[RightAngleBracket]\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
                "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{
    TemplateBox[{GraphicsBox[{{{{}, {}, 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1:eJxF0GlI0wEUAPClK1ySOs3wKI9G5FULTSpz80zRppKJVJSWx0wZm3fTqaU7
1Mw80073n6VGl1JYumyFjiz74BHJzANUiq6lbl41Wwfkew8ejx+P9+A9xzhe
ZKIBiUQK+5v/6lfNCiuIvcAk/Y/0phyPQNlbn1XzjdVsa9k0WKBoJpFlWvCv
emHYD8LQd9UKskarJSzAdvudg+cIGjh8WDk7Q3iAfauExgcyA8FUbXRbVXw4
mPmUfyjfLApMZCjujx05Cp4IGR/SBcWAEw/mquP6T4H95Evkfm4C2LhjkmQ7
yQa7zgVzvUuSwV6dNi8YBhxwa0jstpc8LvjZejM9tTQVbNPRPNrWkwbeKtSl
ya0ywDHulOripEy8zznsllKaBeYxIngcTTY48Eqxm2gnH6w0L2hcJ84Bn0nd
0ch6lwuWWVrUGpjmYV/1mEmLz8f5qcrRR0QB7h+kGRipzoI7uPLU6dpz4FKr
gpFc90LwrkGiIXgcPauTOi2KisCcUPnd445C/E+LR9lyH7rP6VU8K1kEnrPd
t6aILAart1B03+6hmwLm1aahErA7n8k4PY8WDNwU82uKweNXP1Sn0EvAlpmS
lSoVmpLmH5uWXQoeyjthJ3E8D27/GdWY9xp9+HqSvSu7DNzLGlk2MbsAXnRg
v7nzAO2T1B/nFFoOjumqjx7VoPd6CgKCKi+ChwX+Lmtr0FndFKryEvphxOUJ
v2tot5T2HEYz2kE607q7C02hJGymfULfjnA1nPqCDqrTfCbUaBGt8ImdFq1n
NETa6NGadFUJdWMFuLJTyhvYhKaTkqIrrNGc8gXaBnv0xxbz50YuaNH3kaZe
NzTNU3ZBQkef7KYfI3ui9UZLvj170DciFNuLvNDedWITPwb6/Rhr4bcP+g9K
cRxt
              "]]}, "\"\[VerticalSeparator]1,1,1\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]1,1,1\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1: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
odZl22oyNL062+xy0xwdOL89aswmQweDQ/roA3Ns9u4rT7lAhpcn0c3qmTne
lyHe0SKQ4a3/Adm3I+bIxnlQW4RuD99i22JANscHpkopLPT944O0oWf/zNG8
ZDdzYRYZ5ra+r8AdFmhYUiumUUUGslpj9NODFqjR2eS36QUZVsJuGcopWaCS
jkrFk0Uy/Ky4IPzAyAKTwv+JbOGkAMsOk46ycAvcdP/KPi0nCnDqnsjed8kC
j6flyfw4TwHe2F3e+XkWGLInXYNWToHdD//K89+zwOgWU9Gq/88jCzNbMzss
UP5C080Rer+TEHr5kWPIAic837G70+fNY2Y1d5M+W6BXV/m2UEYqyCdmkTb9
sUDz10SJmC1UUHsaZRa73RIvzgataNHX9w587rt5wBLpzzWeqBUKMH62N2xT
skRRiaCyy/T6m/736uWUiSXmUGzFvJsp0MWnemqzlyUmrq34yV+n98sjNV37
oy1x+10LzdjTFEjSEtHQSbdED3WJiEVlev87w6ia3GCJ6X8NOtJHyCCVfKax
qs8SPcUWX2ZVkGFb4Yx874wl7jrt9Uucnn9qneVjyoYleq+lXPppScfn9TMZ
Lk4r/Dn7gpt0ggwPZ+XuHxOzwiZNH6al3WTI+lV+xFzBCgcl/igLc5AhnGfX
nTAjK5xZeVNXvIUM1hIp4lfdrTC+xPJQISsZFPBXaV2kFSY94ncb4CXDLpsA
sZFUKxzj+JORKUHHK/BT4Y/bVsjAU+I5rE2GsQvGwrufWKEhR6cd+JKhJa81
T6XXCkvGhbhF0slw6+GxXc5TVliUPeCfXU+GuJe3r5HWrDAu+MHF/GkyuE/y
8N5mt8YciVQZKXYKaK2fv9Kx1xrvOx0DvWMUOMD5nXP2pDU+4lu5KkrXB+YD
3qlbDKzxzsj5swf9KLCoPLz1kKs1nnFLf80bTYEec90k3bPWeOQOy1kOuh5W
+zUw+adYo6cSdGTF0ftXnGTCf7esUSPHYzbvLAWCr+f9q661xqqFWR2iGwVM
azhi+15a4+q4MvuaFr0/PYv9SRu3Ruv4m4J8++j8G6NGcq9a47q0c7jyOl3/
vrl8l9lqgx+L7O7/6SbDyNb+M5bCNnibd9BNOIcMDXs1vpyVtcHB6Bz5SG8y
3JB/FHhd1wY1vq4PL5wkA8F4/3K9kw3u3mVF1aTn39nrqu/oGRvUa/9moj6x
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
yX8QhbpX1c43TArgf8+nigg=
              "]]}, "\"\[VerticalSeparator]1,2,1\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]1,2,1\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1: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
9Z4UlJoOKxfIYoD7BW+dwycoSBKTktp0lgGndvI/vxVAwXtGB94OEvobWVVv
+DuUgt+fZ/u5Ef0qQde73TyKgm6fxJ22Ev004x2feRGVguacWr6anQwoOFb/
hnGagsYFYesuzDLgGsvLRjuFgjZRFfS724n6p/L1pKdT8MF7nrjP5kxo2Fjv
8PU8BXNOCJdrU5nw8pJX/758Cio/Ouzz9S4T3u/lO0IrpqBhs93xpq9M+FJX
96XrCgXRL9JtipsFUyZex/+7ScH8HW8vnVNiwfxH3pHgOxQUX/P50ipbFrD5
1nm3VFFQPjVp76IvCzYsek4K1FIw6Ngg18kIFmxJ5PX3eELBp2Hjq9ujWCAp
VMesekbku5OnmhXCAvlyz2COdiJ/M0sXDrizQF2Zd87uDQWFS4OifIxZYNBS
G3H1PQUpoQrnmnexwNrGc3n+IwWfvC9+N/CXCUeGeCiGXyioar32SUE3E3wC
a//mfqcQ82TIq83lTAj56xE3PkHBgLF+bko4E6hpPBwHmRQ0OJdcOGvMhJRt
tYnJPyk4tlCpe3oHE3JueazrX6Lg3SNpL/79YUCJOk/qnr8ULFOKe8X6xoBb
7TU85NUxqBk5tBzXxYBHTh5ZHVwxmP3K7ltcG6EH4xsFt/LEoF/92guHXjKg
M6Im9+SmGOTnyxid7WbAxzUeIg1bYpCPb2hxnvBDIzkbL20Qi0EfnsG586uZ
wJKsEXOVjMEykfstlbuZ8OuBe2mldAy2RkD4RxsmcOpu3PlXLgZD6w+c8qMR
+nfMfc/lgzGoGHTngPZ3JkizNtxmacXgEHtSCG0TC5Spj+VRLwZPcLYdtEEW
aG90v59pHINeO1W+vPZhgemlDfuHLWJQbmT3RZ1kFtjvffxI8VAM/payNtMv
YcGxuuNq8U4xmBlIe/vsDgv8TTY0dLvGoM7eLJJIFQtIHx9pS3rE4JWi66Ob
KllQgjJxIr4xGHHCUMSlmAUdN4qe8Z6KQfnTISqhSSz4ycfPyRkSg2sTs3Vt
TrBgW1SC8e+IGKwU2+arZEDwHl48Oxsdg7Ib33/M3saCAJOTnRO0GMx9l924
9QcTmkVsbT+cjcF3tT8Xa/KYMBnXmvMqIwZPGmz8aUP4C4Gpg31Pc4jvC7nd
WTRhgqbtbZGa/Bic29Mus4XwC1514kfuFMeg2zHt3WOE/qdLnC8uvxKDJa/P
Dln9I/zgWc7hghsxyP730MjSPAOGZ6MksyqJ8y/rPFch4vWHGV5JD2Iw7vhZ
Cz6iPpSfHbsR8zgGLyl+CYONRD3u7ZkKbYjBf/+9XXdAigmJ543k/J7G4Bb9
8vnt+ky4u1IXeOwFwU/Yq3vSlwkfPeQfOLyKwY1X6oQOZTNh1evSOfOuGFS9
mH5v4gkT7C4lR6kNxKAM96FvWltZEMPxu37f1xik3c3gv2XEgmv+gX+lRmKw
1P9vfUMQC7p6vuG2yRisl+3KHc9hwbKmw2kBZgwy5rpGXj5ggcTV9launzFY
PJMir9LOAvONWlz/FmPwRWxCtlkfC8LD75nO/47BMLl/R0ifWVA8KJk2zU7F
yVwO7/iPLGgzuPh2mJOKf8Q7fHNesWCmcr3AR24qTi/KTis/YoHoZqrdGz4q
uhQvDWI+C/SoP3KfC1Hxwvz2hqlwon7GPPvrRKmEXlt0lFmwINfy49b74lQU
mmsx5JZgwYRYU0nRHiperGc/vtTGBP4kpe/n5amYz/3CmquICeqsq1JnlalI
V+3aWUfcZw9HEV/aQSo6Vn8fST7EhNSm1IoILSouXLrc9liVCQ93szH8dan4
+Fkr2ViS0LeM0H0eRlRM+HHLY24zE7iWxoKdzal4tPbYeWnC3yoec6m2sqGi
TxdZl2MLE1xedi4YOFBx9s2lPmeCZ4KCjprmYSpKcZ3Iu6/OhMq86milY1Qs
/7Ft3MKRCb1s0k+kvai416LhiwKZCf98C9nE/aiYt22oWrKMuJ/vePSEAqmo
1PboYhPhb8il823sUVRkuy+/9jrR766sO7F+KYaKxU7VNQUOLHgdTKh4PBVP
Flgvl9NYsNBvlTGSREVl8Tc5e6+xQFz32buBVCo+se8SqW1lgXGFiuC7LCom
/lCP3fiFBSECFQ5tucT+F0Qd5JgsKCRvz28spOLzE93eAfMseP4t81NVCRUn
du3gjvvJAqr8Xtmsq1Tsc/sw1TLBgoPkVkpABRWZovknKz6wYLb1aKfZXSqa
tq39OF9H9Hf+X9v3VFNxU9eX3fcI3t6uOQGctVScCmwVlgplwY6b8k3fG6l4
ueGXazeh5znocay4jYpOE451x1iE30j9cy/6NXHetyYzhc8IHh8vsju/o6L4
qsKa0gImtEgq2ar0UvG25u3pSYI3JfB12aZPVPz+4krEEwcmqNR7/5z5SkXN
7SXpitqEH+Bk138zQsXUrq9nNhP9vMK2MOfWJBWrbgSs+0Pw9yw+MJrMJPYr
9zNFnojFpt4e8P5JRefa/qBKQh8+HvBL1Fui4lIXr4EKwTc7jqNvxx8q7mQe
19Il9Ne8s3j3X/ZYjLqUspWb0BtOEbXIT5yxePWp0NFM4v42e75/WcMdi6Ke
q78U1RH+4fdav1ChWBS7N0J5IMACplFZnbVoLLJ/omaWAQtunNfklhePxY/c
11rWnGSB+9few9w7Y/EXvy5T7zyhj3uDb09Ix2Lyd59tn4j71RvB/adVLhaF
+GbtAntYkNly1eKKUix+iv7Q0z9F6DkPFtNUY/HrZccnKsss4HAZYLpqxqLt
c+HImb8seHI1DDR0YnHdyaH0thUWRP7gydxiGIuHdx3z72WxQEnr5tC8aSwO
aUq9yfzEAnqynuJ7q1h8tPCu70kToTc9g3H37GLxWay+WFgR0R92RHanOcfi
wMmgxVVEvxf1F5A86RaL+8zteBmmLOh5fDvU2CMW+3VUYrq3syB9tdFzKd9Y
tLtO0ztG+EVjq2HB1adiscaVSxaeE/pXGO01FByLD73Wtq8uJPzLmNCjxohY
HK41j9oRwYQIpXuchdGxqPCBv66f4K9ANXWMpMXiPwHBMU2C/1T7yHX7M8T7
6j56IgT/cqHYJaWzxPfaOs1WJP8/T4qY8GUQ+bjvLi9DxFsqq/IZ52Ox/pvB
j2sE/+4li6mOvFjctqK2SY7gn6o/oX6jKBYvDbyL20/wN8yMP3emLBaZ+oK/
5wKI+ffzts/u12OxeHaN9EmCf93ux7J4OxblbXZIHSX4h4XaxGy/H4uZaXnf
/EeZIN803fnrYSxmaOi68BD1MLE+UexjXSzh33jeXtdmQZnDjsCHTbHYN5g7
dIHoj0fK6pqyn8diM/M4SzOLBZuZdnxB7cT/a7Y7ilQTeq/GOmbxJhZzKT9e
vO1iwdkzKfdl3sdi6FO1Cc0xFui/k1zF9ZH43sTR2XjifocLlf6xHIxF/eyv
TTxLBE9nseUL32LRvebEoe2zRH0VFc59Ho/FOR8/L/owC9Z+2zIjyYhF6fK7
0vtfEnqwK3fabzYWX8t9aNtG6I+v36bx+4ux2LLh0wn5GBbk38n8tvQ7Fjeo
Tv3TsGKB1zInS5ydhv8ZakWbihH6Utjq/2w1DV/TLuqQ6EzI1UqY8uakYabG
xVdfiPnuzldd3/XraBiV95vrTDoTXsSxj1Vy03DrWvyH3oR+SzZ72PDQcDL8
TNwtop8utlKH5/hoKHxTo41/LxP4fLWO5m2iIVcLhd1flNDb9b8/a2ym4cYN
SqUOhL7j7TqXr1to6PlHzJqH0H8ny6iP8Vtp2HZbXy9QgglBM6oOu8Ro+G5Q
2W6B6B8p2Qvv23fQMOfo9L9n9kwo2//Q5pQksX/vF91lhL7X9Ya+5dtFwzN5
bL58V4n6E/3R4biXhieUjaWcVrNgVeNd4xU5Gl5//3dojzILth4NeFGsQMO8
NpfIsmMs2M8up6+rTEOp3at/PEwh+vGV6aejB2g4e7QtNO42CzwNKiDlIA2f
T97s9WhjAWXct1FWg4YbuqyjBPsJPU3ZrdGlRUNaquzxh0MsqNw7VhOKNOw8
uCXl6yALXnSWqwjr0bDggafeTaI+vgR6VNcZ0HCg5hijvJboJ/wSSm7GNBQ6
V/i1j9Bvnuqhu+xmNOwjbXp7i/Dnuxwuy121oKFr0hvRT4Q/gyXXW8bWNLyb
tHnJSYgFQZqfrmXYE/kI+GCRc5+Yz7/k71R2oqFZhs/v8Hhi/qc5lfW60JB7
bMGrheiPNRLCO8iuNOxyvhC4W5kJ755/KNp+jIbkC1I3NhI8prxztj51p+Ga
6bb7aeyEHqw7lO/pRcNyNwcL3wUGiN7iF+bypWH9Icp1NsKPKVl05dzyo2GH
i95vZ8KPmbLSBaxO0dDjma+SMC/hD7IsMmcDiXwH9iFlD9E/lDfw5IbQsHZz
2M8QM8Lvf+g4pxZOwwbBBy+yQ5lwm5SybpBEw5U0g5K9JUx4LmKcRCPTcNk+
/pzdWybMu7bGt8USzxcY166TI/LFlsB2Mp6GFonr+90ciXyV6VJ5ztBwyw4p
QS4K4bf12X/fT6Lhjjrzp6ZEfh3GmqLszxL5ePtuUxPhlwOSqYtLqTRMm4pr
9KhhQZKMVvilDBpK6xhdukXEJa9XZiGbhiBsffYM4b9rAuqCvufQkM0tfo1r
AQuOxri+cb5IQ6VZDk/TWBZwprLJduXTMPYcrcLMlQV3Cq6kGF4i6mfocdOt
A4S/v2k43lBM1GcEdfPEOhb8fjypr1xKQyYj+crlT4Revkgtu3mFhuFKYyVx
t5lg9mEf245rNMwVXDuoScyPs9+7XXNv0JCzY1ghyJYJ+bPh9RtuEfkeWl15
idBPZBcROV1Jw4dnU0dFuJgwwdsQsXyXOK+5uM4GOjHPih3tCXxAw11CxjKu
fQxQkVulNFZNw6z9L4eqOxjwReNqxpHHNJQr26ca8YIBZ0yNGd21RH1tyu6o
J/6XdZ42NWmg4ceN9286EO+/90m/0fSEhsd9kPJmmgHkCEVOlac0jJfeEeex
lgkSZ3o8bj+jYer7KYYAwb/9POmpxAsamr+9F1NkRdz3MlHx/JdE/ZFFkzKj
iH5wv5HC+4qGIvqt92yI++z9ZvXB329pGOZWstdnhQkbB69dCOmmIX1ec9qM
8KvV0yY/J3poeLjmjKS+PqHXv+jWR/uI+hQ47z92lAWr12Xe+dBPw/SZNzxc
YSyoEFbeYP6Zhqb9Zu86CF62u3pPtHyhIUe9kfr1eMKv749qOzhMw5sfWnJC
iPop0dsmdfc7DX0UltyPnWKBkW1TvNQYDaM1au/8tSf8xDH3ocIJGk57eCrK
qxJ+OnCNtsA0oQ96f1ibif6iRb1RmMwgzvNznazoBBNGUs2W/7JoeFK1NaSF
6E+phUyH8FkaPr1eNfDgHBMGavYLuC/S0PJ2UxL/PibEtfUFflwm8svrPXWf
g9DTXnKn5W8aVtqnLX3/woCuke17W//S0CCUx3T8CQNIP5uTNdjjUOb7Gq4X
Vxkgtspz7P7qOEyh0Woschjwgm+tvjRnHKZrmXqtO8eAU+IVpcVccVia4RWr
dZYBgvIW/wS543CxcEl3NIsB9ZozR85tjCPmN9Ll+6UMcDc7X8fOF4fdAz1f
19US85iLypZIgTg8kPnNj4eoh/u+/eFMwTi88GyPcfEvBjiRKO89hePw7fHX
u48S+s6WKK74SSQOjV0Tdr00J/znFS96m1gcWjRWuPcT/nzhPpep9n9xGDTw
a/OGV0woar51vVoyDl/I/6e9g/Cr+m8t1+zdFYeePlvO52wk/NHgD/dS6Tg0
Cq7UEJdiwXl6TrPw3jj8YHlorGE/C9RXVMXS5eLQV6D1WIMGC76t+xTNoRCH
HdkSSi/UWJCyhdpPVorDqHeCTV/lifnoSvaGXQficGFYm9tPhAWW8tfhnWoc
vleb+fH+FzGf1NaHUNTjcGZfm29QDxME9buu7taKwzuptgfGrhP7fzPysRvi
sJ70kCRCYkK/8zI3VTcOz6SwVWwi+mVxoERIj1Ec/q8iKw+n6mujUomSKCJD
ERlKZMrsfTUg8lNSJJTKEBWhVEruGO6AzDKlZGigDEmRKUIiSZIh83SvSiJD
9Z3vz/Psvdd5z1rrXXvv55Tve7j4pJcLIfM7M29YklDzBP+fI0+5cIpm1bHV
moR/ah4lphJ6mAmfWNVuQ8LD49Cz2osLyrcDTEi2JPR4Mtvfc5DgXzHsguph
EkoMj3jM7OICNz/l3id7ElYk6vJ8MSb8Yfj0E9mRhAytvMA8Yvxpbe1KNWcS
5icNv1Mn1scc/GL8+TjB97I6v3xPwj9d33ypJ0moMtn/RS6UC44ey+6pu5HQ
tGPspsRjLhhNSXzq9CDhM2XJ+o4OLmy6vn0l3YuEBjJ7mz34iP2Cf5exxjkS
Vp79vOuONuH3W0d8u3xIWHLZdd0B10mok/G+e9OPhMNpBustw4n7QfaNds2L
JJRra1nOfET0g1aMQE8gCa87uJva1U+CT3m2UdhVEo5WLvtn0DUJtvvKfLSv
k9BGLS5sD3Ge0257n9F7g4Qx+3rPcwcmQfz48MdwMglDjRxO7eiYhPmxef6d
NBJ+jT9fSKmahK6ANUZ9N0n46VuhScvdSSj/J+/DDCfheouHQaeuT8KdcL0M
XRYJJ+/Hn+s6QNw3xaw/9keQ8IfZywkxWSKP0l352bcI/Y2FjYS5XNi37ZKh
fiwJH6hxHTqJflAtDj8/GE/CQr9dftcI/oRM0+5EJBH6dK20HHTkwo/GgjaD
FBKK/7n73wdNLrQdebNiOI2Ed9e8OtoswoXivi6DqAwSxtl9OC42x4HEsz/O
GWWSMM982XPWGAeuzS6/M5JFwvj7n4KrBzjgQpZsu5VLwrmn7xa7Rzhgulp9
hckjAl9eQCf5FwcUEnYbjOUR/U6qbbAT5AKfvMO5mKckVFo7nDG3lQujj86m
QxEJi5OMzDYd4EKjHunD+DMSBj5cPy5wlQuPq2P54kpJ2OT0VPvVfS5E/per
b1pGQk6J6i+pNi74fy4/y3lFQnpdYBv3HxeOnP6QFl9F+M1esFtIeRL0vo20
7npNwk6TOReS5SRIXV1cPllHQsXNhrnhbpPwd5mIfmIDkS8aEtR6ol++Rmw5
u6eJhPsMPIbNQyahWtIg7VszCYU9RRfoxP53P/O/1qRWEi7Mbx4l+xHnnR2n
lpt9JN6ffHtXvtMkeL8I1PvxiYRea983/TQm8sWM6Z3cSUKN0g/t0eLEfeV9
eqp5Nwm/OFuLKxL71ZemNw7DvSR8e0G8xe0FF+gN39fS+kmoL2Nn6B3GBY06
iSb5IRIOFRaXy9pzoasab1aNEP7+OSZ4TpELNys8TV3HSdi9hesgR+ilWRa5
8I9D+GVPlsVYCwe6n5cUpX4j+vmeboRRHgdCi7/6GE8ReQXVlQdjOaBVwL+1
a5qEej+nDq+jcqAnb8fg1VkSnqCxH6y/xoGwhw6pG+ZJeEqiqizmOge0c0Ic
ShYJPVfF3HAL5UBvZvZa+38kzIgZEvp3mwPhGS1vfy0hY6Wjh8DlZxzQSftN
j1lGRsmn/oWszxz4elvWVGsFGTvujXvk8XCBkWCx8F6AjO7H0oSEthHngVjf
Il9BMh5Jzz6Td4QLfVEJPmvWkNF17apZKokLTHaFymMRMvL0+ZdRc7igyxgd
2C9KxnKxkitVb7nQf1M4dWI9GdOcTm8NHeMCi6rnEL6BjNlyaS7ef7mgRzqx
VkWajDNfA41dVk7CwPXQt3UbyfgsdKb/heAksK/m093lyDh2biPtv+WToB/Y
gcsVyNhgPrjOZpoLg/48C3cVyThQe67neCdxnvFVLtqlQsaLhvKx5BIuGJw7
4NO3jYxhzgWPBSK5MHTmskqIGhl/N0zevXmS8K97+sBGDTLaMzQHXmpwwfDU
m5QyLTLW/fzSQP3HgeHj3+2ddhLfx4icqWriQJSTxNoFPTK+U90bcDCVA0ZH
8W2iIRlrpuMrv/lxYOSwJ13PhIwPXr3aq2XNgVu2kfgJyVi1wnjPFTUOGNuU
zF/cTXxvaObQZ3EOjFp9LRQ1I2NCmrWVzEoORFvw+xRYkPGcXtiqguUcMNm7
Q8XWiozktoUnD4jxMVOHge/WZIzK591SJMGBGJOQlIgDZOw1Xx8upc4BMMy2
VztExm8aTg1N+zkwrtsi0nSYjPgiTsXdlwOx2r8bvR3IGDAsI6mXwAHUkKWv
PEbGpcMWm05WcWBiuwXmOJMxdp/4ZD+HA3FbfefNT5DxhiHd7YkYF0yVEgqH
T5LRdGhn8EcDLnDkK87T3MhYhrtvhRB5Fi87qqzgSUZmWbiwwv//78sID1R5
kZF1y1uXSiH2ow16Ka7nyJjfu2LkNbGfJaw/Yc/jS8bVTdEJgUQ+7l4XKpLm
R0Za8ktmzDUuTK7JbzS+SMZF+YOVJA8uJAp20LoCyfh2vUM0nyUX9gjwYNBV
4vtvJ2eYbuHCt+XK8xuuk9G/qH44cZ4DSbwHCktuEPzuvr/6cSMHvi+kKc9Q
yVh/Z3+9hicHtro9rPK4ScYnB598Yxhw4PS7EqfPYWQM+h1neGYNB1J1X89Y
Mslo3TPSrjw6AR3p7yNfssk4evZTz4raCVi7smerWhQZ3bS0HcVzJ2C//3hN
WjQZD9CqlbRiJ4DeNeMiEkfG7jc/pOZvTkDF3qVz5AQy2n0xvVBHnoD5x2ui
p5PIuDY7TPExbQK0JaS3u6cQeqQHPL0UOQHnScp1n9LIKD16RTwtYwKyx7Vd
92WQcfNV41LnFxPQf8h0ofQeGTs1zSWyPk+AdJl1rGoWGW/FK77cuTgBERHu
9WsekpHXjNdptwUH3vz2O0V6TPSHk910xHkO8J688Wcqn4zayYaiA7cIPzcy
4k8XkFHmwKzV0wIOXNJO0GgvIvymZfI5rpkDxHGi0byEjO/Xvrd1GiL8xffE
7XkpGVMKLvcKThP7i2/Zv61lZHQhyVDnCf5dPtcnJr8i45bYW401RB4m7GrX
Eqoi49N6/mbH7xxofdDfdKOGjIpWvDNzPRwQFPvm8aOWjM/dYx+r1HLALHhh
yal6Mopz790rvM+BkJEVyW2NZOSsmrufRuJA6QHRnWbvyKgrEbxukwMH1OS3
e6l8IPidium1+zMBnkz9Zbc/EvnmXFo2+24CMn7tTRXsIGN7qIr5tzsT0OVi
qxfcSfCpd2ZZbuAErH/j0vqti4xNw9riwQcn4ICG91nXXjJ68SnvTN0xAeFJ
gXwf+oj8cna2XbN+AmqWUtP3DJJx35FZnzTeCfh7NtKgeJiMd4/fG+qeGQe9
9uQ2pTEynrl22EDs5zj4Qc75xAkyqp8uXTSbHYeH2UX8qyYJPXq7OlWWTsCw
SFXGte9kfKSnWLWVwJcNemc0OUVGedWSTl/1CXAc7Gw//ovwr5v8+UHrCYix
HvF9P0vG43q38vV8J6Cp+OfK3fNEvTxvdX7HTACfLE9m4SKhV/1gSXTpBGCY
ICj+I+MOIYaOX+8EXJ2S+By/hIL3ZKhpS3g5UHhsi7/AMgrObbZ1r5PlwGSN
xuogPgpmftH+60P0h7KaSRaHn4JHDhZYdhH5djLe0tRlFQXPeCp5qzpyIJnH
/kvzagrOvLANq3PhQPuZUxdNhSlIVdtz+cQxDgh/8FlTsJaCzlNv5GdtOGBp
dC1HQYyCJL+M2+1GHKBmhu6OE6fg7B7vkMjNHCgXiu1eIUlBh8hatZklHPgd
eCfwijQF+7q/Swt3TYBm3yORiY0U3BRMq1/3dALOWpY+cJKj4L+disEORD/1
qetJLVWg4ES515nThybgiFhxeI4iBbfFW4xWyk3A23mteRsVCp5+fIVrOTUO
pl+fnJnZRkEVxe/5VbXjUPxa/XOyGgXNfml41aSPg+qDRxa7NShoZHO/9ilp
HO5EbisZ06Jg7JjodLbXOKy/lKMUuZOC2tDqfN5pHBjHlOJ36lPwR27V/bP2
48BjmsnXbUhB8+c3PmQfG4dLivKXKCYUvGU7FVjpOQ4Tq+4MqZhScPCtTtP3
6+Nw4sfGwy27KWgTfVV5XdI4tLcn11wyo2Bt0AWdghfjYPVSUltmHwUr1Px0
JPvGoeJOwt1qKwqW37R7cYp/AkTnLt3eeomCb54egmu0cQjrmV75/jIFPc8l
5JUQl4i/1X5XA4MoWDO+M+y8yjgE5HwfkwmmYHiGlR3wjsMY+/zRmhDCDyVd
o/F9Y+ASwHnjRaHgWqGfq++8GYO2o156InQK1id3BGiWjME+GM16FkrBw06n
+uryx6BcwV3chUHBhfAGw6tPx0Br5SB9GZuC+4xH1P+8HIPsb64zuZEUzMPl
jPTmMdj4sdftYDThLzGbS0fGxiC61PnjbCwFE6fVNr7iHwf+9C97UhMIvoPO
/NVVHYdg2tHCPbcpWNxyvm3y4Dj89PokP5FCQafdiXdnA8fB88Dh6Kh0op7m
pQ9OJY9Dt84HXr27FLSekMhwKBsHW6mDfj2ZFNRUaspQ/DwOb3ia+6jZFMR/
TjuOTY6D8fD+g9seUFBhV6Dx+4VxeNrYUPH+EQU7ppYIlvFMgPITix2X8yl4
Me059+niOKTE1aZtLKAg60jQ5txv47D22p41r4uI779r9nyBwA91rQr2LqHg
SVnZh04vx+GPGU6KvKCgx6p7Gz7GE/mgWu5cUkbBAPUbi4XnxmFUxKjJpYKC
Jhu7m2kwDs6zz42WV1PweBeDPS80Dq1dug8fvKaghukrdk/3GFhUFUnZviH4
8lGQXvp4DMqytBi/Gyi450FPtyppDKrmYjsvNFFw1GpdasixMai1+q0y0Uys
p8ZsFjccg4YUxyunWynIOF6y5YfsGLz79vJNdxsFw764iX9cPQatppsk7D9R
cCro0XJz3jFojyZ5tHymoG+EWBz57yh0Dg0U7+uiYFXj5YFAYrxH14yvuoeC
VuUkp0ZifX9Y9mGjPgo+sfIM69g0BsNfVmYWDRD54Eh790x3DMa3n5tWG6bg
M7LeJnO7Mfh2o3l39iiRL5XRkToBYzD9XiNaboLwq0nRB+G4MfgtH9OfxKVg
/n2UsiP8t3hxRkP0OwVdav80Bn4eA543DiTWFAXLTjXikt9jsEzyRQvfL4Kf
8tbUqLWEn87KyIbMUlBk32bNn0rjIFh+w2dujoJnbxZ+UtAdBxHh/nK/RQoK
WBfvOEXwv/7kHiHOXwr29sf+UMNxkCy87+y2hIpZnWsvH9Afh418Ao96llKR
/vK/tx1bx2Gzg/eiPR8V80u27ZAVGwfF3Car9/xULNBgWFQR9WxdVL9tuYqK
J+Hn5/j2MVD779Z49Woqbpoor3mcR/RL+rS+sTAVXf0PnkDaGOhNHQkrXktF
ofaQK/cdxsBoz/MOdTEqnv6ttsJm2xhgnJRyjjgVV3PituYReuwZvR64WZKK
VTt8B3TaRqFB+c2p/WeoWHL/w/0ymVGI4xgbPPem4oXzU5sjZkbgVH6BsOJ5
KpK2iWW5fRiBHQEqI7d8qRhRLPp4f9EILOqmlf3zo6JWVJa8XMoI1C+Ixpy9
SMWl+wI2hTFGIO5VuNfnQCp2LStjc0NG4CSFx9TsKhWXf1g7d/H6CKibXxIv
uEZF5rKMT3wkAm8lh7vpBhWXZCsl7SLWv3nnWsMkEfN7n29g3R6B2FufkuYo
VIyU4gSIPCHwjlhfcKdTsa9i9bqGhhFQk6w2/xBKxWcDMhnhIyOw0K23ERlU
jJr3j1jFNwoxbgqNGyKp6Fg9snFq1yicUEm6Q79FxX8ue4PyXUZhO3fN5Z8x
VFS+6GA/d2kU5vNp/52Ip2LDl7mZovBRqA1YUGhKpOKpiwZB8wmjEK13YUE/
mYovT7c3rL5D4C0Ov7+fSsWd82V5PhmjoFrhlL3uDhWdn2SIdSePwhylNTjk
LsG3nQyfbSSBZ25xmJtJ1LtlT6rA9VG4tap8m2M2FfGJzWLQqVE43qzFW5dL
xcYfvSqOewi86JwOrUdUzHjotzlUdhR+H9mUl55H4M/6fBadG4HXkrG01U+p
+P31juIdzSPgkhGiOVJM1MdZbmt8ZQS2us/w2z2nYszpj5LvbUZgVuVsb8UL
Ks416JHlVEaghttXtL2citFFzd4OfCMQ+cSemVRBRestSYeDRofB+WLTyRXV
VDxzSPWpa8swbNXfrR/wmorLbN52PiwfhpnFkjV9dVQMvEAVrioYhuoKtWHr
BirmbT44WZs3DJHUey9L31Jxdp/stvSnw+BkIRmt1ExF4ZXt9VMvhkFFMPJM
zHsq/teWl6LUSOA1L8clbcTzudmNF3qHoSo6aP35diq2Dvm4fZgdhgj7H5zO
Dir+5fZlbV83Asq9XYmF3VQMe5JQ3Ww9AtMZtr5yX6moY8zTSfIagUr3N2bs
fioeilmqLUEbAfZWE5mFQSrGho6Ynk4eAcfJgp8eI1T05SYePpI3AopPVRra
xqgYskWKw1c2Aj8vpqWbcqh4sbQ4u7xmBCr0xQIfT1Kx348/bPH1CDD/hFtL
/aCiuaehzdWKEXCo5FEI/UnFA9JrBNULR2AL7dL89C8qHlUwvG9zZwSmLDgt
rr+paGSiesI6dATKBU9mvZun4g7zaaHWMyPAaPl03fAP4dcqG6NSMwIvxtou
+x8VyUlbz6+WHYEfUvpLyMtoGB0dsi7/7TD8Pib7SH4FDUUyFjfzpA0DT/KK
o68FaBjHrSmV8B8G/q7JZR6CNBT4pvQlzHIYhKXb8/nX0PDK3dqCMsVhkHAq
c8oVoaFJpmHjKP8wyCbf498vSsPFeK+lf34MgXIXo5C7nobjHZut0/qHYIe0
/4mIDTS8LXT+keyXIdBzchTUkKbhsNbMmyDiGZNNS1o3EvPVNBsPDwyBRZfy
6QA5Gq711kvknRqCA9LCwusVaPjCrH47i28YHJxmXzxTpGGdcM6Tqk3DcCK5
x+OoCg0P/jXOAqNh8JV+9CpZjYb7J84HTVwehstOMd4mGjTkWVitPxk7DCHJ
QeJftWiYuq/eZUn+MIR2nawm7aRhSbLoq/LXhP+kLX3k9Wm4iZRqN/lxGBKc
NKReG9JwpdYS9WjCX+nJEnXuJjTs3Cf07VffMGR3/fPjN6Vh+Uv98w+7hiFf
emRj7m4a+sofHUttHoYSp3cNVmY0vO5TNCNA+LciuegS14KGy9YxD1wj+H/T
lbw5woqG97N7Lry/Pgwt0tR3O/6j4cYkqZ/K9sPQ4eR9tfUADc0WtP99Vh2G
r8m2igGHaBj5Y5PFaZ5h+CYtF/zMgYZt3018PLKGYMaJf+vRYzT8eOHhI8Hg
Ifib/O3jvDMNaXMmg68choCvu52UfIKGWYL2K6r1hkBIpny7ySkaChVIXpPa
NATrnTM/97rRcPPKEtJNwSHYmMKkkTxpeLSZ//ylJUOg2O2vIe9Nw/eBy/8s
+zsIajLHumvO0dA5xMf/DzG+03lXmLsvDb/scn3QSaw3SVHR4fen4cMxfv93
MkNg1i3cl3ORhjVX/LFRawj+k/nNtLpMw3c9si8jrIfgiHOvHvcqDUsvyAoV
nhkCl5TaQfZ1Gk5WRVSX0IfAvftR5I4QGp5VU5Vdf3cIzsvEGrWSabjnz7vH
VmVDcMn52qg/jfBb3GL2tw9DEJxyKkYslIYXRpIOlw0NAb3bEp+F0/ATze5o
BuFXtowmx4FF+H/xfFbDzBDEOW9ImI+goXDP72c500OQmsKzJ/kWDXuYybBk
Ygjud498M46lYYv6dRz6PASPZZpv98bTMLbzzbqXlUNQ7FxsTkqiodvdmVsG
RH3lKSk/N6fQUDB587zTjSGo7aam1aQR/XRTVczJfgjeyZy1cs8g6lf4NZmq
OgTtzodmV2QS+BuS4nN5hqAnxeBuThbhn6/VbsIfB2G4W87GKpfoX/EE2rEH
g8CVEVjgPKQhSfekyz/qIFAb2uiueTR8vZ912sVtECQD09e2PyHmC2V+ybUc
hCfyZ1MtC2l4yZHvYpzOIFi06G59VUzDsUix6duKg9B7bWmx1nMarjg5RlmQ
GYRLKs2m2S8IfQJN1J9LDcLq9qQm6XLCj3X2LSmbBuEe2f1oVAUNZ7L1/+qr
DIKhuubQ8moCPz3o+bjuILR++eN79TUNd61Wyuwl3n8mtH5xso6Gqgo6iZtd
B4FHJzb0VAPhF34/z/QrgxDfd0K04y0N+cuHD2hGE/5iq6bvb6ah9QuV71kP
B6HG4Pe2yveEfhHLGe9rBuHYSPUznTaiv88dvRreOQhT0RG7c9uJfAnWtqvm
DEIoHmve+JmGOw/opDHmB2ETV/FY9BcakhsoDZJLCb0Sp4ZX9NDQo+CtSsfy
IbA2K/e79pWGo/s3XHTlHYLBqbC/3/sJ/A5vi4jfgxCUdjjcbYiGb/3fMwNH
B2Htfrn1nSM0/LcpNfBc6yDk/Obc+W+c0Hebl9C/4kHAzJLt1RwaPrl77eu3
uEH4dJD6XPcbDX0WBCw0/Afh/F+bvQ9/0JDaYvq0Y/8gLH8g9V52msifzNu2
olsGIdl+xCl2hobJUzsbNv4ZAM1lBaMCczRs0mfbarYPQH1+cEDwAg1Tenfu
u/ZkAE44W/L8/EPD9fwPU0QiB2BGYD3Tg4eO+9XCIgb9BoBV3CfexUvHx7n8
K146DoDCqUd3Dyyno1pz+sbtFgPwYs0V9dcr6Ghx6U5DnOEA2L7c80J/JR3X
R9nHbtIZgDFPYfPHgnR0Fd1uV6Q9ACFiXa2b19BxzQWFWiGDARCvynKJF6Ej
fWSfYt6eAXh83n98lSgdWwf8pCYODcBeKbgUsp6O+gfeDE+6D0BX3UreXxLE
fFX55NfXBsA/oJ11RoqOmqtt7VxjBmClXMaGHhk6SnR0rr/3cADSm85l2srS
cbdUlu6ZmgHQvaqvUbeZjrKhHmsjOgfgneLyMsMtdPzp8p53yeQAnP7QYpGv
REfBbUcOVBL8LdxIblPYSscfZufuTvEPwi1VzxOJqnS8m9pW+1VoEFQ+a3FW
q9Nx8Vm9Jf+aQaig/Qska9DxPSe5UFpgEOw1G5fOatEx/HDVdUECb7InLsJ7
Jx1nenMzeScGgMY4KfVVj46lsaueu30YAGk9tSw7QzpyjpWqtxUPQMHgnGa9
MR3vKO432hg3AJZRr8uNkY5fyetWGRP69BlHWT7dRUe/r0+MLfYPwOVxp3bF
vXTUecKv5rVlADJ3T3PXWNKxzK1WMO9zP1w+q2HzfD8dN3nrNdsW9oNl7Pn8
kzZ0FH56s0kzuh+kyx+ICNrSsUte4J5jYD9MDo/6FdnRsah3wiLetR8q1ii2
udjTceKY6GVf2364pXdKh9+RqC/T/p+CZT+cdk2Pe+JER1jPzM+x6Ied4d2z
jscJf5zdN/TAuh/4CySPLjtJxxPUY1JxDv3Q+cW+9NFpOs5puOyK8+yHh8ti
pew96Fg9lHXy/rV+uLG99RqPFx1jFrIy44j6bI+s6ck5S/CrqeIv8bAfFG7s
h0M+dDRXxiWNNf0wkxWWvniBjq8qht9YdPXDm5baJfcD6PhWec8jnR/9kDS3
9JRNIB07JnPKrHkH4Oxm05rfV+j4OtCL7i80ACZWwVsyrhH+NNDKKxMdAJGA
F3SrG3TcWZR4mEI8Dyb/Hpkm0dFpaRW6rR6A4tc6+1KpdOSdnRk59K8fQif9
cs1v0vFsxrLfUeP94Ciev+pHGB19f/0reNLcD6rIPZvEJPQ4ZfyLldcPfz23
vtsdQUe7Wk4MMPrhbum9yLgYOm7I9xI5ZdgPlwb6fkA8Hcun77Xnre0HC8FN
h8YSCT681TinJvpAUsep8FYyHVfn8PR9qu0DjnOimFEaHeUC663gfh9oXjYx
9pymo4pTdnkA7SsEtdylXY6+iT1izlmJB7qhO2nolpd6KNqMtb44/f4ziAXQ
F6M6QnEwF+MV0z+CwIVdxy9cCsNlyTHJjltaofWa80a6XDhK7P0SKrepCYrm
7TKu1YfjKDdo1nKmFoz27nP61hiOFuv8d+xfVQdVEcbrT74Lx8Uu90GafB1Y
dGq0tLWEo6j2VLSgcR28U1AMN/8QjjEKKpv6D9eBnY/kntKP4bjjzKbcNWfr
4Mtzob+qHeHYo9zg8ep6HZxctrQkrTMcIx3xkF1YHYz+N3thbXc43npbwbnO
qoPziRPbaL3hWBe11MCMGP810Ds02xeOr4Znszdcq4Nram1pXoPheM9o4tEb
tzrgvfLmaPdwOJ5x0ntOMauD0OqX6w6MhWN0JUundWMdrBF60lQ1EY4UY89+
2rdaiHPIvKkzGY5GAg9OPHxeC9J3E02zv4fjicI+jZDgWsjgshYkf4Zjur7C
KUeoBRU9chHrVzi6tZxjZP55DTubvFT858PRhXou/cDl1/BS/PjA0GI4rlD/
KEbVfQ27Tx5KcfgXjmmXeDZWzdVAw0Nz+8YlDLTwPTG5r6IGDswaipgsY+Cz
gJ/tJswaaDfd0ZjPx8Bj8cmGd1xqwJmpQJMXYOCWK2OOZno1MNguAXGrGJhH
d+9+t6EGvORWz/ELMVDppIdMytIa+O69pCBImIHqmkFL3v6qhsDiX2cn1zJw
+a/BS0rfq+Evz7iiqxgDxWSjx5SmqoFq1fP1gzgDH2/JHfgxXw0r41qTzCQZ
ePMon+IxgRqI+lpr91yagTrvt8v9kqoBiW0vhFQ3MVDrrl+YtEYNpF7Me5Mq
x8BrKxp2rjavAYWKu2QRBQYmrbm0ZO5YDTxYmWBEVWSgfi3twabzNaB5mDkz
o8zAghuTr4aCaqAkLST/zDYGKqzyfzZKqQGT8QCvru0M3FlNnxai1cBr7TMK
NjsYeL9UOv1WcA3sv+HcU6nJwAN6dTf5fGugtf5ggrYOAyfskiIPH60BB1Ez
2yxdBqay5t3KDGqg18VAUNKAgbqnFANei9aAe45aLdOIgbXqNvZao9XA+bk5
5J8JA3+9d/r4p6ga/EzEDfxMGejpXDYNN6phLnTV9OBuBsY20Hi2760Gvo3T
Hg0WDJQQ/3da5G0VMD1H5YytGEjeS1oSHVEF6wq6vuRZM7DZgCxWZ1cFSX9a
YjcfYOC+7y9zu6SrQNbitU2sLQPlbAbtv49Wwv1bzwX4DzPQ/csSRb7SStje
/aj6qj0Dkw2FL/NGVUKhUsZ17lEGGsyXltw5XwkGfnG6J5wYaPOCKelzqBIq
Xob/aHVhoDZf699SqASzFTce7HVlYMm/X9a3tCrh7UF/t5JTDLyd6ri+RK0S
DiV7bNrmzkC6ANM+Y0cliJ5qetzqSehR0mXpql8J7SpaJle9CX5LraUemFdC
wveEJrnzDNT8qyhTfbQSHJ/9dar3ZWBYmLZX0blKkA4+zfH1J/wgNSwbQKqE
nj0NQRKXGPjCcyNt9lYlpK/asariMgNd7Z9qOadXwsnW2CSPIAaKZqb+W5pd
CQqJCyprghkoompqkEE8Dx93fV4cwsCt++qLDt2phGzFOgsXCgO7limtTif4
OMNV7VhOJ/pF/3PWlSuVsLXwlsejUEJf63W7dYj6OFd/z9gxGPhIWHDsmkYl
PDZ1oS+yGJiiTYTu0krw5a8RuxfJwI6UW7P3mitAs1kl0yqageaNRrU/4ytg
OjZC+2csAyut7LVZzhUQKH/s0K7bDLxuVy+a/PYV6I1X9I+lMNC6tGAy0uEV
zOcr+kWlM/DPrrXHLMfL4WUgc4n+XQbW00umbanlEGwyFfk1k4Etx02sFpXL
AZc7yIZmM3D8rO7lfZ1lwPu2LE/9AQPLXog+a08sg5pb8vDpEQM/3r6/5JVn
GdCPhr0Lzif60ek1H8m8DCxkvzkrFjBwSd3jwDGdMlg5YsdtKiL8+vlIEp9W
Gbx9VHrtYgmhx76uJEXjMmAFyArKvGDg4cC+6sGDZVC3//NvIWEmvnh6y90h
swQkQuQ9w9YyUZwbLFdbXgKeBec+LRVjYvf+ZyHd7SXwfPiZWbA4E6/EPG6S
mSiBlZK8xb83MNGbm99jOlcCjtb7t/hLM/G07vU3x/6VwIOQuBjuRiaWc24e
G1sogcWCr0s95Zh4+T5v9VduCewf2erfL8/EHb8qNxW1lUCK5MV+J0UmJgyV
FhzKL4FJ61cHPykz8e46XZQklYAJSaDy4DYmLtjQOW/MSyCi8NCOt9uJ+XM3
/C8sL4GvIylpZjuY2H7/KNXtxTPYITUqVKnJxKcla5hbvJ9BK+kat0iXiXT7
IMnb5cUgX1TrtMOAiUtNc7eVuxVDwKjw21wjJqq8XJNwaXUx1EgdM9wCTITc
3S+vPisCMZvM3DRTJuqcNc8McCsCd/K3DZJ7mNjlb2I5L1EExUX6YTFmTKwS
W3CnfCiEFWOU30L7mBj+zy/WKa4QHKTfeYRZMVHQ0MUp4WQh5NhIfFr6HxNH
tue2/9UrhHnySbPgA0wM9Xud/GdDIVgWPyz6bcvEB9Z3vyYuL4TbYzMK/ocJ
/lSXPPJYKACOtGkM156J02aJtJvzBWB0gLHU05GJ9mKZ1x4sKQQW5aNfvxMT
3+1O2KqwphB6ijf1Ox1nYuLLEO1fsoUwI+vemPuYiXvPJfMprMyHNbXVlRJP
mNh6tnaULZEPyt5yJfQCJoZNMw/2KuWDqfCNx9NFTLTTkpHYtTMfHIu67p0s
YeJAaF3yb9N88Hc0uN1SysSs2ujR8/vygfkvPsqkjIl6x4fW/WeVD/fv/br5
8BUTQy4eWwwzy4dX+w4FS1YR36uukXLGIB86JvMDQmuYqOH8fiZMMZ+4vwl5
z9QycVY77sUXor5V+mddT9czUaFDpUyvOQ8UeurtWxuZqLWM/C7+ah4YU5T+
w3dMFMv+Gma6IQ+OKNP2PG4h9DZN3DLz8DGE+qFG+EcmBmrE7I9+8QjuiKcq
/f7ExGrx/M4PBo+g9OWCjHsnE4Mtf7gVPHsIHL5nK3f1MnHeUB0cCx7A8oei
S/L7mPjsclDC7Z0PYONBv1mZQcJvi9x9pytyQW+mmcsYZiLj2VL/WttcOHh7
++DcKBNNRQa7H3zLAS9kdHpMMJFP4BStMiEHqEOjLR+5hH9UtkudsMmBlHCz
ut3fmZh8YEmwv2gOFKvfK3syRfDfn7/89Gg2NLctKdz0i4mdtkQENmbD6JXj
uaxZJpa9XKUd/iIblmwqS1+YY+JDqVVrwkuyQbJGMv7MIhM1H2d2rKjIBq0z
l1mf/jJx+c4bYeHN2bBfqJ2ydwkL1UWO/zYczAa3Aq2rBUtZqLpb8K/QQjYE
O0T5yvGx0O3SEccx4RyI/zPpHsHPwqzZipKmzTmQn7Hf+c9KYn5G8StetRxo
MM895L2ahYZ+6KC9IwcGOCssP69hoemKmQ0spRxYjHJD87UsfPrpk3jt2hxY
r1u9s0iUhV7tvNdUf2SDepfsdnlxAv9YSkJKVTZYkILlozaw0En5VOzVm9ng
qti14Z8UC9X6pwZiMRuuNuoLn9vIwo9DxlnS37Ig2jee74ssC5/zb68JjsmC
h2K/Fi3kWejBt/qRg2YWvC61/Vm8hYU384L6TjTch57j+WMKyixMVzWmObrc
B5Fc73ae7Szcfj96LZIyYatN/dvz6ixc95EUWLouE/ZMK1Z3abCQzFUimebc
A+dE6nNLbRZ6nrazj9t9Dy6Z9OeV7GRh2Xk+U5/BuxAxAPcV9VnYqrDIf5Z1
F7JDU5JjDFlYaKRkvhzvQuX2hVu8JizcsOFeYuCfDOhsdQjzRRa+9p5qf1ib
AT8Di2/07GLh37sxqxWTM0BQRvTS/r0s7OUMt49dzwDFqgtnS81ZWFo+v+GK
dwaAR/NJZUsWVueZnHh7KgNiQlPVGvez0CS5QKbTLQNGc87Nn7Nh4Q0HJRt9
3wwwIvY5YVsWYln6g/EbGRDJWXWrwI6Fb9JFC3OjMmBw9RfnI/YsTJG2dlHO
yAB99VyVuaMsvPT9+nmjxxnAPnDl120nFi6GfKmSKsiA/gsWlSbHWej75tjj
EGJ8Z7Q4q8+VhQapA2/qUjOAUTjsQD3Nwm7l9UJ/yBnw9WORgpIHC3eqdUp1
OmaA9iz1e/0ZFs4Jf7N6ppgBoRJ2L8+eZaHU+798F0buQLe+fOgaHxZ+l/73
2yz1Dmgemzr09AILfZTXfyvdfwfo1yo3HQ5g4ZrCa8V+0+nQmRI5MXuJhc5p
3WOy8emg/ur4s6QrLPzx9OR04M506Fjy97+vwSw8RF+rmzeQCqryTZIUEqG/
I0PmyuZUIO1JHt5CZeH09XvnNnimQLub99M3dBa6li/bvKokGbbeNAj2DiP0
lrjsXyGWDMHZApZCTBYWmZYqBlFvw4f6DrEnbGL9f4wNYitug/JEVt+hKBaC
I/VyZVoSXBMMfDQTzcLhJ3I7m2ySoGW72ZXEOBZK6BxwOSOeBFtsxPYaJbKw
RXX3csavRLjqOyjce5uFY4fOqw6OJMK7qIIuUioLTxhrrpgbT4TNBeRshTss
DN4oWWY7nwiBbQcD6u4SfvsT2V4vnARvf8mi130WRpo46fYpJ4Gs+PdVq3NY
2GGoGaJinAQBeq8+5T1gYf/nm+/vWCRB/VH2XdvHLFw9pe4uaJ4EG4OcfX7l
s5D3y/Yj6jpJ4JesaphQQLxv+R+fOQK/tmyBz7CYhVZeKzaEfU4Eqd6G1u4S
FmbnGpDEIxLBlycpNeQFC6V7guUbNROhRu6Ml3w5CyveKqVdqU0Aid16O2sr
WHjSuOaV2/4EOHd6Be+ZahZWrYv+b2ldPKzPykx8/IaFAX6Xbqy5FwdebwLc
DjayMG6VXLrUqjh4NbZbY7qJhRkJo0+kfWPBU7X/jf4HFpIMtlz/axQDL62f
xHR9ZKH94RyV8pxoEPEJOXGjg4W3O+aFTTZGg3ukjermLyzkyR95sy/lFpQ+
2fi7ppuFx7f0dSWq3AKhD9xqj68s7BReeub26yg4Nf0yYuUACwtMWlx3+EdB
iRjz2KMhwp9GG+5e0IoCQd1jSgdGWWh2QzwymC8KTjhs/Tk1Trzv6aSl60Qk
FF2ZK4/lsnCqwHpq1ddIWHn7TbjedxbOdA4q+fVFgsvL+CNfpljY/O+MRRkx
f5elFe/BXyzU/pCjHD4XCVs6/j6qnWWhcWUbM2NFFPC7Pz1qNM9CtujSqqC1
UcR9xm3500VCP+kP90bXR0EzacMTpX8sFGlS6dtPjD9d0+SUsoSN13bIW1by
RkFcSgj/umVsbLKwadoyEglXtmkXhvKxMfazoNCmV5Hg9Hzk+F9+NnrYn7Rb
wogENL+9KmAVG0e/rGU/tIoE+Y//PRtbzcY29zcnjvNGAt8p3lPHhdkYapDY
t8Y1Asa/Fwl9XMvGTN6d5zTz2NAUfKbUUoyNb48PnP70gwUxSS0iOyXZ+NGv
d7rSmQmXlallD6TZuOu7hMWXcAYcK9Y9I7eJjfqt8WZeheGwuTW1QlCBjf07
PxaJLA8DvhO2Z8mKbFTf3WlprREKY9zlEr+V2Xj/49ndnqdvwtug59XntrHx
ZVeJlmwGHfIFzvkMbGdjjrr6odOTNIiJl5U6uoONgqLr2/isaRC4pa32nSYb
a5nJa1wrqcQZ4KbfHh02Hu93DZ61poKJqeHGUl02Uo/vWKEyTQG55sl6dQM2
vo8/+GK6gALLnDMuZhqx8d6mYYseBgVGxw/LSQEbdRxfHJi5TIHGywJNkaZs
TPr+yW1FIAUe85Vd5tvDxjR1r9iBEArcivFVuGbGxuCErfaNkRS4uFmh5YcF
G2VtXp8eSKeAQ/6nIA8rNu6+fH7g4QMKGJkwlLqt2egZM9h/4SEFNr01+WB7
gI1aFbN5iWkU4HWcCn5jy8Y8SRftL2QKDI9kbjU5zEYph1pJi8MUaLh4tL3A
no0+ZK8odXEKPFq6mqziyMbULUtP9NSTITKqYnuaExuhROA/cx8yBGwK+Cx6
nI3xMLc6Q4AMDo+UaOGubLxQJLhH+DYJDA2/7OA5zcbbsw2vD28hAa/9rtAJ
Tza2qCcve68cAsODv7Rcvdl4nbfeeHHvDaj3y+ltP8fGM+qq9yJ3BEMkW1i3
yo+NZdv/+uwbDwJ/6Zp+3YtsVB56YZ798iocyQ1kPwpkY7MQieci8wrI1PYM
JVxjo9kXn10HDQKBx+5WlNANNq572NjDq3gJBvv2GlNJbDy5VcjNVOUi1PnM
jc5R2PhD4H1pkWUA5P55GONDJ/CuXtx8L8If2IwTOBTKxvInZ3n3LfjBhQ2i
HEcGG+Uenr/nzvYDu6y6+BYW4Rct5aF15n6gpxO02yySjSo2h4TbZP2gPWjX
1uXRbJR5ZTfwTdQPLlYJiNTEsvEO4y3bcaMfiAq8nyUnsLGB/Gk1ZYcfPLVJ
6DG9zcbeF9yrR8EPDsQdf82TysYbClJZL9EPvnUpPnyVzsZA3w+NUdv9gC0/
eSv4LvG+d0U0B14/UPUqumJ8n41RQ0f4ZF9dgIb8aycWs9noULpXdsT9ApyZ
3W3+4gEbX4vWKVD++gK/ySq1q4/ZqPvcM8Oc4Qv3qa2i+k/YmF/rvaJUxBf2
NCYuzBaw0dlhQFZCxQcGRFz7i4vZeMKprWSb8nmQTfuWp/2SjYuPtj3i/vOG
8qHiuJ/lRL+/3pwhVe8FzqrB159WsnHSKOSk1YUzsOi39/SFGjaqORwv/Tvt
AUnPBa121LFRdWF0jPeIO+jxtGl8q2ej0F0vOY3k0/DJ7LbE47dsXOmdK7f6
40m4xDr572wzG7cNHlx2bK0riLapDG9rZeNP7Y/a1c0u8FTyx9vxNjZG0GK/
XHp/DA66lhTkfGLjzavltw/uOwrfs24keXayUeEw/5k7VvbAnjQjKXUT/W8S
MHev5zBs1xHyHO5l4/OcM1E1c3ZEXnz8L7OfjUf2uc+L3rQDr6pkndNDRH1S
2sB1twMBgdPS8qNsnE0Ijl8IsINsm21L+8fZGLQ4GSzEtgOzuKmxdC7hr7ZZ
3dBYOxjqet5y/Dsbl+WRDW9esQOqPOnZxp9sjDuaDr+17WCzl0Vq9y8Czyvm
vUrzIajMX0NL/s3G5FWrlWYdDsGJ2XbvYwtsHHFv2btq1Bb+GqfaSv5lo1Kw
gKZhlC0kU930P/NEoCer+oL4KVswbFSVTVgagTVktlq9qy10ikzz2fNF4Hrz
51fkaLZw2eEFV0wgAh93aNJ1n9vC+jRyW9uqCDxBPfT8fJ8tFA3texEtFIEx
Yq94XLptwU5VJMNWJAIv8zndvMW2hSm/jlAR0QhcPb47VbTnIEQ+T/NpWR+B
yxTLF2sqDoA6j8eRiA0ROFVVtd7Z/z94Z6Zm/J90BObqnD61UGAJZ1m/5Fdv
isD4nUdTz143g5VtL1e+lYvAgpXKX7gSuyBHkvojXCECM59nTF/NNgQLV6uO
fUoR+Go87uknjhYMZ619xb+VqGcsP/nDp61AnfycWacagTrhvR1X62RBXucO
k64egcGvwCM4cB1UBXn679WMwFknv0MyCcvhRJW64zKdCGzd6n0yy3/O5C//
LFbrRuC+KxEfsuunTFJsypXIBhEo5jrxnRHxw8QojiZkahyBixHqy1uyfph0
du3/9Q8iMM5YcEuU7w+T/wG4iNKP
              "]]}, "\"\[VerticalSeparator]2,1,1\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]2,1,1\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1:eJxF0GlI0wEUAPClK1ySOs3wKI9G5FULTSpz80zRppKJVJSWx0wZm3fTqaU7
1Mw80073n6VGl1JYumyFjiz74BHJzANUiq6lbl41Wwfkew8ejx+P9+A9xzhe
ZKIBiUQK+5v/6lfNCiuIvcAk/Y/0phyPQNlbn1XzjdVsa9k0WKBoJpFlWvCv
emHYD8LQd9UKskarJSzAdvudg+cIGjh8WDk7Q3iAfauExgcyA8FUbXRbVXw4
mPmUfyjfLApMZCjujx05Cp4IGR/SBcWAEw/mquP6T4H95Evkfm4C2LhjkmQ7
yQa7zgVzvUuSwV6dNi8YBhxwa0jstpc8LvjZejM9tTQVbNPRPNrWkwbeKtSl
ya0ywDHulOripEy8zznsllKaBeYxIngcTTY48Eqxm2gnH6w0L2hcJ84Bn0nd
0ch6lwuWWVrUGpjmYV/1mEmLz8f5qcrRR0QB7h+kGRipzoI7uPLU6dpz4FKr
gpFc90LwrkGiIXgcPauTOi2KisCcUPnd445C/E+LR9lyH7rP6VU8K1kEnrPd
t6aILAart1B03+6hmwLm1aahErA7n8k4PY8WDNwU82uKweNXP1Sn0EvAlpmS
lSoVmpLmH5uWXQoeyjthJ3E8D27/GdWY9xp9+HqSvSu7DNzLGlk2MbsAXnRg
v7nzAO2T1B/nFFoOjumqjx7VoPd6CgKCKi+ChwX+Lmtr0FndFKryEvphxOUJ
v2tot5T2HEYz2kE607q7C02hJGymfULfjnA1nPqCDqrTfCbUaBGt8ImdFq1n
NETa6NGadFUJdWMFuLJTyhvYhKaTkqIrrNGc8gXaBnv0xxbz50YuaNH3kaZe
NzTNU3ZBQkef7KYfI3ui9UZLvj170DciFNuLvNDedWITPwb6/Rhr4bcP+g9K
cRxt
              "]]}, "\"\[VerticalSeparator]2,2,1\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]2,2,1\[RightAngleBracket]", 
            "Tooltip"]& ]}}, {}, {}}, {
       DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
        AxesOrigin -> {0, 0}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, DisplayFunction -> Identity, 
        PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
        DisplayFunction -> Identity, AspectRatio -> 
        NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
        Identity, Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
          AbsolutePointSize[6], "ScalingFunctions" -> None, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
               Part[#, 1]], 
              (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
               Part[#, 1]], 
              (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
        True, PlotRangePadding -> {{Automatic, Automatic}, {
          Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{
         "\"\[VerticalSeparator]1,1,1\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]1,2,1\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]2,1,1\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]2,2,1\[RightAngleBracket]\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
                "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], " ", 
    TemplateBox[{GraphicsBox[{{{{}, {}, 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1:eJxF0GlI0wEUAPClK1ySOs3wKI9G5FULTSpz80zRppKJVJSWx0wZm3fTqaU7
1Mw80073n6VGl1JYumyFjiz74BHJzANUiq6lbl41Wwfkew8ejx+P9+A9xzhe
ZKIBiUQK+5v/6lfNCiuIvcAk/Y/0phyPQNlbn1XzjdVsa9k0WKBoJpFlWvCv
emHYD8LQd9UKskarJSzAdvudg+cIGjh8WDk7Q3iAfauExgcyA8FUbXRbVXw4
mPmUfyjfLApMZCjujx05Cp4IGR/SBcWAEw/mquP6T4H95Evkfm4C2LhjkmQ7
yQa7zgVzvUuSwV6dNi8YBhxwa0jstpc8LvjZejM9tTQVbNPRPNrWkwbeKtSl
ya0ywDHulOripEy8zznsllKaBeYxIngcTTY48Eqxm2gnH6w0L2hcJ84Bn0nd
0ch6lwuWWVrUGpjmYV/1mEmLz8f5qcrRR0QB7h+kGRipzoI7uPLU6dpz4FKr
gpFc90LwrkGiIXgcPauTOi2KisCcUPnd445C/E+LR9lyH7rP6VU8K1kEnrPd
t6aILAart1B03+6hmwLm1aahErA7n8k4PY8WDNwU82uKweNXP1Sn0EvAlpmS
lSoVmpLmH5uWXQoeyjthJ3E8D27/GdWY9xp9+HqSvSu7DNzLGlk2MbsAXnRg
v7nzAO2T1B/nFFoOjumqjx7VoPd6CgKCKi+ChwX+Lmtr0FndFKryEvphxOUJ
v2tot5T2HEYz2kE607q7C02hJGymfULfjnA1nPqCDqrTfCbUaBGt8ImdFq1n
NETa6NGadFUJdWMFuLJTyhvYhKaTkqIrrNGc8gXaBnv0xxbz50YuaNH3kaZe
NzTNU3ZBQkef7KYfI3ui9UZLvj170DciFNuLvNDedWITPwb6/Rhr4bcP+g9K
cRxt
              "]]}, "\"\[VerticalSeparator]1,1,1\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]1,1,1\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1: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
MPkfhGC0lA==
              "]]}, "\"\[VerticalSeparator]1,2,1\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]1,2,1\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1:eJwUV3c81e8Xt5IQJVmJMoqSMrJzjpm9s/cmM0Jc96IivkKozJKsJA0qyaZC
UiRUsrc7KoX27/7++rzO63k+Z73fZzx7PUOtfJgYGBg2WBkY/v9d+frbRN/3
u6ZE1d9///7R4FT5GQXdG29hhC2nMOIXDWI4KL6CN2aAk6pA+0OhgbLu7vqs
cApE/KZOSI/SIK6lgoHlxirM9DxRH2mkwYcPmpWQugEPYy/UH75KA7X1YdO4
8D+QoM7UlhdCgz9Xz5r+KGFGR4UPuT94aSBT8XoP/05WNHgStd98gQrO9bu+
KaayoXkHW7HZUyqkd/i9sPrDjpcNY5X+y6ZC05u6grDwrZgXOFQbEUIF8vi/
4Iw5blx0ufBT34IKGWvle4ZltmPI4fofHKpUqPhjzD7ny4PMjDx+adJUaGH5
urpasgNNTu3Q1BejwjBH3iemj7z4xtGbRhCnApVH88X2nXw4/9Y6XfwQFViF
Zu/tMedHqVXpxnlNKojsTSs4nCqA3t9q/WTsqaAkdeScZqcgznAucPPHUMHs
8HCw6R8hlBh+M5tWTAVfJYKds7IwDnC833n0BRXij4lpnQzfjQfeZ928vEqF
XN3uA7G3RbCX1baSYy8NaoxDeFPnRHFxULBtxpQGntLs/15m7sHZ21c9/GNo
QJX5FPFWZi8u1mafXb1Gg9gj9xY/9OzF3RlZrQxtNGBVPOsy7SuGx+WySzU/
0CBb2XZwiVkcY/ZrGF4j00BEXfr4lxJxzPJp03Bfo0G15u+nG8ck8Mwjkf7d
6zRQ0n59hOGjBD58OvnoFZUGHXql5ZtjJNHmhjRT1ycamBmeFuLeuQ+HHW1D
73TR8TYxyOR7sA9jXm2pSi6jga/FLhYR8/1I4RVdzSTS4Ks1NUaSvB8Va5v/
HrOhAdGunSKTKoUPxDKMpPfTgN0p11NxnzTeU7kj9GeDCldc/UbUO6VRUtmh
z/clFcQ81Ux03A9g673cQ6wlVKj12dpu9OcAZh7IvuRGz7dawORRq4KD6HB/
cf71CSo8D6qrdlCWwfgfUq+T6PhbhSWLegzJ4AMtk4xACSp8inDI9Q8/hFs5
QjpU+angHy2zJYxLFoWimf668lDhW+y/+Ojbsoj85d2MfFRIIA5+JRocxvKb
etyMdL5wJpX7Jc8dxmtHy39+PUqFPm0Nqr7WEdz0dqJqnyUVsrvKq3ozj2Be
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
YBK+lB+P4hhXBabCOJ/JcBJWFCQWuc8iNM3vfNQcRcKeefciu216ECV/j7Uw
jh7Pi4TPA0qGcIRoZBeTQMLp0muB8YKmsNwzW3niPAmbPzVyOYAFlO0kbcin
kXAyM6hzstCS/l4UNNyWScKS/XcSKdlWIHCnLp+SQ0K3tftDcSLWMLhhutyb
R8eTbYCmoW0N6bqLalXFdPnmphMt7Nagn5X03/lSEvYyvh5P/c8KGMaExzwr
SWhK3uAljllC4/7HMlhDQv9KfoM2PkuIjLCM332fhKe3PrS9S+ebbOvKq58P
SfhKbeR4IprDInuyyGgjCbtevX2iL2IGpbZ7Qh+2klD452TX6HFTcC5tbM3u
IqHJzO2Xw40mwEe12RbWQ4/3Q2D20UATeKNKczftJ+GH4w86p7VNIO186v0D
b0kI1OuloXImoDsgzsQ2SkKJcTPeof0mcHrnjT9mn0iosyLtA2ImUOEg8uPy
NAkHpCXVlmVNYLi48NvYAgkZNK5cvRpiApunBT6LU0j4R6IpOIHHFFT2XVkJ
/ErC7N7OJ6QTZuAfuGPh/joJTxy/12apagH5tVnTG79JeHsw19T3lSX4/GCl
iTImoLxBWfHN79ZALHwW1MmcgEFPpxXO1NnClWPnln1ZE7Al8cThvB8OUDuh
7c++JQGxu324qMYFnicyzt/hSEBfOYXbk4PuMC7e5mXJlYBcZmuY99ET1p8R
p75tS0AzSoxk+ag3bPM/5pa3g67f4/wKY70vSLH/HlPnS8DkB0Ezb538AWsa
HScEEpBjp+XffV0BYG92ZjRpVwJqe1ue7FoIhLDPyrb7RBJQKeTQhGD3SUjN
XnvbsycBjb4yn8egIChVfGgZLJ6AfG28pOMTQdA4HPF6274EnK508uGTDYbB
GHnTeqkEVOOgOuj6BMOy0Jdeu4MJ2FD9vwquO57K/4sbRRpKkZGGkcquFFnn
iKSl0pKIUKFCJA107yVxl5lRygqRZJORkZRQskMqkutO30qI9Ht+f57X53k+
zznnPc65/9yW+wYRl0Ck+pnVjBYJI/cFvx8tvASrHD0bH+qScMlRkeceHZdA
T1jLYudW4v7ooMqA8UuwP51TN7KNhFeW8669Iual664cCDcg4dZe+tKilZ4Q
MOpWrWlEwjrXMrsQRU+IDd9g1GZCwgR5arAUET/V+F7uiyQsVrrD/0HEja2P
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
              "]]}, "\"\[VerticalSeparator]2,1,1\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]2,1,1\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1:eJxF0GlI0wEUAPClK1ySOs3wKI9G5FULTSpz80zRppKJVJSWx0wZm3fTqaU7
1Mw80073n6VGl1JYumyFjiz74BHJzANUiq6lbl41Wwfkew8ejx+P9+A9xzhe
ZKIBiUQK+5v/6lfNCiuIvcAk/Y/0phyPQNlbn1XzjdVsa9k0WKBoJpFlWvCv
emHYD8LQd9UKskarJSzAdvudg+cIGjh8WDk7Q3iAfauExgcyA8FUbXRbVXw4
mPmUfyjfLApMZCjujx05Cp4IGR/SBcWAEw/mquP6T4H95Evkfm4C2LhjkmQ7
yQa7zgVzvUuSwV6dNi8YBhxwa0jstpc8LvjZejM9tTQVbNPRPNrWkwbeKtSl
ya0ywDHulOripEy8zznsllKaBeYxIngcTTY48Eqxm2gnH6w0L2hcJ84Bn0nd
0ch6lwuWWVrUGpjmYV/1mEmLz8f5qcrRR0QB7h+kGRipzoI7uPLU6dpz4FKr
gpFc90LwrkGiIXgcPauTOi2KisCcUPnd445C/E+LR9lyH7rP6VU8K1kEnrPd
t6aILAart1B03+6hmwLm1aahErA7n8k4PY8WDNwU82uKweNXP1Sn0EvAlpmS
lSoVmpLmH5uWXQoeyjthJ3E8D27/GdWY9xp9+HqSvSu7DNzLGlk2MbsAXnRg
v7nzAO2T1B/nFFoOjumqjx7VoPd6CgKCKi+ChwX+Lmtr0FndFKryEvphxOUJ
v2tot5T2HEYz2kE607q7C02hJGymfULfjnA1nPqCDqrTfCbUaBGt8ImdFq1n
NETa6NGadFUJdWMFuLJTyhvYhKaTkqIrrNGc8gXaBnv0xxbz50YuaNH3kaZe
NzTNU3ZBQkef7KYfI3ui9UZLvj170DciFNuLvNDedWITPwb6/Rhr4bcP+g9K
cRxt
              "]]}, "\"\[VerticalSeparator]2,2,1\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]2,2,1\[RightAngleBracket]", 
            "Tooltip"]& ]}}, {}, {}}, {
       DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
        AxesOrigin -> {0, 0}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, DisplayFunction -> Identity, 
        PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
        DisplayFunction -> Identity, AspectRatio -> 
        NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
        Identity, Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
          AbsolutePointSize[6], "ScalingFunctions" -> None, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
               Part[#, 1]], 
              (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
               Part[#, 1]], 
              (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
        True, PlotRangePadding -> {{Automatic, Automatic}, {
          Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{
         "\"\[VerticalSeparator]1,1,1\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]1,2,1\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]2,1,1\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]2,2,1\[RightAngleBracket]\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
                "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], " ", 
    TemplateBox[{GraphicsBox[{{{{}, {}, 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1: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
nOZjCiMhHpiI5ZhQh03Fif5TUfTzClNKvOYQWhd2PGiLJWHZnFeJ4zYDiFW8
w1KcSI+vN/nzkIoxHCKaOMYnk5DrypWQJCFzWH42V2V/hoRd75u5nMEKKnaQ
1hUzSBiVFdozVWxNfy8KGW/LIWHq3lsplDwbELzVUETJJyHl+92RRFFbGF43
X+4vJGEpyxBNS9cWMvWXNKpLSWhwbbN9O7stGOam/nemnIQeDC8nzv1nAwzj
IuM+VSS8tLLORxy3huZ9D+WwjoQCVQJGnfzWEBNtnbTrLgmLOO873KbzTb5j
5cWv+yRsUHt7NAUtYYk9TXSsmYQRA68fGYpaQLnD7oj7HSS0/DnVO3bUHNzK
mzvyekn4YObm89FmM+Cn2m2LfEbC2XcheYdDzOCVOs3LfJCEFw3v9czomkHG
mXN3ZV+TcB/lanmEghnoD0lsYhsjoeJHC76RfWZwYse1vxYfSai+LOMP4mZQ
6Sz688IMPd8yUhrL8mYwWlr8bXyRhK80Ll66FG4GrDOCnyUo9HyKt4Yl85qD
2t6LKyFfSdj6rOcRyd4CgkK2L979QcJ2wzud1upWUFSfO7P+h4QbrwrMA15Y
g/9PFpoYYzIaG1aUXv9uC8Tix6E9TMm48GhG6WSDA1w8cno5gCUZVZLtDxb+
dIb6Sd0g9i3JePBJ12hJnTs8SWFcuMWRjOKHlG5ODXvBhESnrzVXMrKar2Hh
Bx/48Zg4/W1bMhqS46VujPnBtqAjnoXbk1HZ68wKY2MASLP/GdfkT8aOO6Gz
r12DAOuaXSYFk7Gaz/rf3t5gcLI4OZa6Mxmjfa2P9S6GQORnVYe9osnYFnpg
UqjvGJzLW3v9bHcyNnxhOoOhoVCufN86TCIZ33XwkY5OhkLzaPTLbXuTcarS
1Z9fPgyG4xXNG6WTMZGd6qzvHwbLwl/6Hfcn48na/1Vw3fFU/1+YhlJSiZQ0
RCojKiPzHJI0JFoSETJaRCihe2+Iu4zMSlaSmb1KZkohycqqRK47fSshqt/n
9+d5vT/vz+ec5zzPc859vby03N8TcRnmVT81m1UlYc/B2+/Gii7DOvsrTQ/V
Sbj72LzKCx8ug4awqonxbhKWRwU9C5i4DIfTOXWjmiScL8G7/pKYl877siF8
Dwmv9tCXF6++AgFjbtUqeiRUcS63CZa9AjHhW/XaDUgotJZ6eyUR5yl/q/BG
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
ctMgaTpq3qp/u7mJC0tk5pVNr6Vj9nBwv3InF2zMD2/xlqWjXTt/Z34fF3JI
cTG8DXQc3OCRFP2RC3PFn+e7ydHxOGVdsOh7LhweU/Ielqfjfop6XXgdF5Jk
fIZtFeloskxqY2sOF/jmNZY92+go7fhm9ZtILhiSResslekYr3vNMecqFyJK
jqm3qNKRcpDs89KCC5/HkpJN1em4tCpvHVWFC+rrWOJ1u+honJrn6S/KBfKR
XUF6mnT8WiP9XZpF8JkcwCvVpiO5x9O6q5kD8qVNtuq6dHRbuLl5UQEHrrFW
tGTrE/e12vi99znQuO6M3hagY9K32/P0CH+SssjITjai4yamp+anOxxwoQjW
ypgQ9Y98atlB6KmsVCc8xpSO6/5Krd0fzYFF47enxQ/QcUt6at50GgesZdtc
ww/R0aHhxXRzFQeyLNb0zD9CxwMv39Dnejnwm+JoGnSUjjNm5byYOQ4cLMst
nbai467KcLKzAhfuj/9S8D5Bx+VhhkFSRP1cWaMY3ik6ii7hftO+yQX9o7T5
bjZ0wt/oWy0yucC43eU1bEuc9/vwPxH4D5VtHLa1p6PO/IZPgTNcUGO7W/ac
o2O4XIxXrywPSOtLai2d6RgnUlTZpMuD9qN/1Vpc6Ogi+rbL0ooHcsFmyabu
dDS43SioduSBV3m0eN1FOv6YE8hGXeRBPXsgUO8KHe8sOiCdcIkHqzZs5ZV6
0vHLpTVvWed54Gx51Vbdm44QkUQfPsWD0uBnb7N96LhhoqlOeS8PRCoW6m25
Tkf9lSVRudt4cJJjkZ3sT0eVndMyd0R5kLnh3lqZQDrufO2ntWyMC9OWI2Ex
t+j43N5JtKSeC2YhO6bFKUR/3BTiFj7kQmLFddfwYDrWvBEoRPlzgc2p755/
h46nKB17+09zQW/jMtOgcDpOrhCff8SAC3SrU6XTNDq27Q1coaTIhYGQVAVv
Jh1LOk633ZDigmol5y4vko7tvqafRMS4EMTVnO92l45ObeYUqyVcaNtI8hqO
pePitU++Rq7gwsZjb77YJtDxn0peeyahR89QScuee3Q0N1HqUdfgQl3l2VrL
JDpO38+XCzrKBQneE7WWZDpKiGn3pXpxwXHTj4emaXQ0G3R+6pfIheJjBuJ1
j+gYMhRnU9DAhQV37gTqZRLfz9ygNSTgwvGq99zSLDrq0WXJFKKfGbx1tuq5
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
Bg5P/oMIbPNWdK2bFMD/AEp+k2A=
              "]]}, "\"\[VerticalSeparator]1,1,1\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]1,1,1\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1:eJxF0GlI0wEUAPClK1ySOs3wKI9G5FULTSpz80zRppKJVJSWx0wZm3fTqaU7
1Mw80073n6VGl1JYumyFjiz74BHJzANUiq6lbl41Wwfkew8ejx+P9+A9xzhe
ZKIBiUQK+5v/6lfNCiuIvcAk/Y/0phyPQNlbn1XzjdVsa9k0WKBoJpFlWvCv
emHYD8LQd9UKskarJSzAdvudg+cIGjh8WDk7Q3iAfauExgcyA8FUbXRbVXw4
mPmUfyjfLApMZCjujx05Cp4IGR/SBcWAEw/mquP6T4H95Evkfm4C2LhjkmQ7
yQa7zgVzvUuSwV6dNi8YBhxwa0jstpc8LvjZejM9tTQVbNPRPNrWkwbeKtSl
ya0ywDHulOripEy8zznsllKaBeYxIngcTTY48Eqxm2gnH6w0L2hcJ84Bn0nd
0ch6lwuWWVrUGpjmYV/1mEmLz8f5qcrRR0QB7h+kGRipzoI7uPLU6dpz4FKr
gpFc90LwrkGiIXgcPauTOi2KisCcUPnd445C/E+LR9lyH7rP6VU8K1kEnrPd
t6aILAart1B03+6hmwLm1aahErA7n8k4PY8WDNwU82uKweNXP1Sn0EvAlpmS
lSoVmpLmH5uWXQoeyjthJ3E8D27/GdWY9xp9+HqSvSu7DNzLGlk2MbsAXnRg
v7nzAO2T1B/nFFoOjumqjx7VoPd6CgKCKi+ChwX+Lmtr0FndFKryEvphxOUJ
v2tot5T2HEYz2kE607q7C02hJGymfULfjnA1nPqCDqrTfCbUaBGt8ImdFq1n
NETa6NGadFUJdWMFuLJTyhvYhKaTkqIrrNGc8gXaBnv0xxbz50YuaNH3kaZe
NzTNU3ZBQkef7KYfI3ui9UZLvj170DciFNuLvNDedWITPwb6/Rhr4bcP+g9K
cRxt
              "]]}, "\"\[VerticalSeparator]1,2,1\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]1,2,1\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1:eJxF0GlI0wEUAPClK1ySOs3wKI9G5FULTSpz80zRppKJVJSWx0wZm3fTqaU7
1Mw80073n6VGl1JYumyFjiz74BHJzANUiq6lbl41Wwfkew8ejx+P9+A9xzhe
ZKIBiUQK+5v/6lfNCiuIvcAk/Y/0phyPQNlbn1XzjdVsa9k0WKBoJpFlWvCv
emHYD8LQd9UKskarJSzAdvudg+cIGjh8WDk7Q3iAfauExgcyA8FUbXRbVXw4
mPmUfyjfLApMZCjujx05Cp4IGR/SBcWAEw/mquP6T4H95Evkfm4C2LhjkmQ7
yQa7zgVzvUuSwV6dNi8YBhxwa0jstpc8LvjZejM9tTQVbNPRPNrWkwbeKtSl
ya0ywDHulOripEy8zznsllKaBeYxIngcTTY48Eqxm2gnH6w0L2hcJ84Bn0nd
0ch6lwuWWVrUGpjmYV/1mEmLz8f5qcrRR0QB7h+kGRipzoI7uPLU6dpz4FKr
gpFc90LwrkGiIXgcPauTOi2KisCcUPnd445C/E+LR9lyH7rP6VU8K1kEnrPd
t6aILAart1B03+6hmwLm1aahErA7n8k4PY8WDNwU82uKweNXP1Sn0EvAlpmS
lSoVmpLmH5uWXQoeyjthJ3E8D27/GdWY9xp9+HqSvSu7DNzLGlk2MbsAXnRg
v7nzAO2T1B/nFFoOjumqjx7VoPd6CgKCKi+ChwX+Lmtr0FndFKryEvphxOUJ
v2tot5T2HEYz2kE607q7C02hJGymfULfjnA1nPqCDqrTfCbUaBGt8ImdFq1n
NETa6NGadFUJdWMFuLJTyhvYhKaTkqIrrNGc8gXaBnv0xxbz50YuaNH3kaZe
NzTNU3ZBQkef7KYfI3ui9UZLvj170DciFNuLvNDedWITPwb6/Rhr4bcP+g9K
cRxt
              "]]}, "\"\[VerticalSeparator]2,1,1\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]2,1,1\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1: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
5f7mPpvKhLZY9vE7vDRUW4P/8Dih39JNnrb8NGSEnY29TfTT5Vbq8Pf1NFy6
odkuKM+E9T7aR3M3EOs1U9j9xAi95fn9RXMTDffyKZc4EPqOFbUuXzfT8NAf
cRt+Qv+drKI+xW2hYXuFgX6AFBMCZ9UcdojTkG1QxX6J6B/JmUvvOyRpWHh0
5l/LISaU7ntke1qahm3H27pLCX2v7Q15u34HDbNz2XzWXyPqT2yu01GehiEq
JjJOHCxYVX/P5JciDW++/zu0S4UFW476txXtoWFxu0tkqTsL9rErGuip0NBw
J8fco2SiH1+deTa2n4Z/j7aHxFawwMvwFiQfoOHlqZu9nu0soEz41Cto0lC4
yyZKuI/Q0+Sdml3aNLyfonDs0RAL7siPV4cgsd8Dm5O/DrCg7XWZqog+DeMf
eunfJOpjMMCzqtaQyFe1O6OshugnglLKbiY0XHu+4OtHQr/5q4busZvTsCFi
w9vbhD/f4XBF8ZolDZ0T34h9JvwZrLjeNrEhzpO4acVpIwsCtT6Xpx2i4RP/
D5ZZD4j3+WDedhUnGmqlnfgdFke8/2lOpb0uNJQaX/JuJvpjtZSIJMmVhsPO
lwJ2qjDh3fMPhdvcaeh5SebGOoLH9PGsLc88aMg/0/7gAjuhB2sP5nl50/CD
m4OlzxIDxG4LinD70LDmIOU6G+HHlC27sm77Euu76P92JvyYGStVyPo0cf4W
H2URAcIfZFimzwfQ8EHAR6TsIvqHCh9/djANH20KXQg2J/z+h87z6mE0nBB+
2JYZwoSKiOS1AxE03JFqWCxfzITnoiaJNBINBRziztu/ZcKia2tcewwNX+Sb
1KxVJPLFFs92Ko6GwQk8fW6ORL5K9aj8Z2loIikjzE0h/LYB++8HicR5ai2e
mRH5dRhvjDp0joYb3r7b0Ej4Zf8k6vJKCg1fTsfWe1azIFFOO+xyGvF/XePL
t4m4+NWvecikobSIzbmzhP+u9q8N/JZFQ0m3uNWu+Sw4Gu36xjmHhlbznF5m
MSzgSmFT6Mqj4YnztFvmriy4m3812egyDQuGnjTe3k/4+5tGE0+LaOgYTt00
uZYFv59MGaiU0HCWkXT1ymdCL9tSSm9eJcYrjxfHVjDB/MNuNslyov6E1wxo
Ee/H+W/drtk3aMjdObwn0I4JefNhdXy3aag3xHHnMqGfyC4qeuYODWnnUsZE
uZkwKfA0/Mc9Gq6ykNDloxPvWfGjPQEPaWi70UTO9SMDVBVXKY9X0fDKvhdD
VZ0MGNS8lnbkCVHfpbvVwtsYcNbMhNFdQ8PbGzI764jvCs4zZqZPaTi37sFN
B2L8+xOpNxobaHjpBFLezDCAFL6XS/UZDS/KSsZ6rmGC1Nkez4oWGlLeTzOE
CP4dFyOeSbXRUOft/ehCa+K+l4pJ5L0gxpPEEtOjiH7woJ4i8JKGCgat922J
+3z8DceB32+J++pWLH/iFxPWDZRfCu6m4e9FrRlzwq9WzZguTPbQULP6rLSB
AaHXP+k2Rz8S91Hoot/4URZwrE2/+6GPhhWzb/i5Q1lwS0SFz+ILDZP6zN91
ErzsdvSebB6kIVedscb1OMKv74tqPzBMw6gPzVnBRP0U62+VufeNhvZ7Vjzc
T7PA2K4xTmac2K9mzd2/hwg/4e4xVDBJQ14vr71KaoSfDlitIzRDwwW9P6xN
RH/Rpt4oSGLQ8Nf8WgWxSSaMppj/+Muiobtaa3Az0Z9SCpgOYfPE/q5X9j88
z4T+6n1CHss0dKtoTBTczYTY9o8Bn37Q0Fvg+PQDTkJPe0mvrX7TMP/QhZVv
gwzoGt0m3/qXhuIh/GYTDQyIWGhK0mSPRcFvq7nbrjFAfJXX+AOOWLxFo1Vb
ZjGgbf0aA1muWCzTNvNee54BpyVulRRxx2JqmneM9jkGCCtZ/hPmjcV3BSt6
YxkMqNOaPXJ+XSxyyEVceVDCAA/zi7Xs62NR4HPP17U1xHvMRXVzpFAsOqSP
+PIT9fDApy+MKRyLeS27TIp+MsApgvLeS4SY79irnUcJfWdLkNj7WTQWD7vG
73hhQfjPq970dvFY9Km/5dFH+POlB9xmOv/FYk7/z018L5lQ2HT7epV0LE4o
/acjSfhVg7dWq+V3xKL9ic0Xs9YR/mhgzqNENhb3BN3RlJBhwUV6VpOIfCyO
WR0cf7qPBRq/1MRTFWOxQKjV/akmC0bWfiZz7onFrkwp5TZ1FiRvpvaRlGMR
3wk3flUi3kdXM/l27I/FkWEdXl9RFlgpXYd3arH4TX127v1P4n1SUxdM0YjF
yt3tPoE9TBA26Lq2UzsW01Ls9o9fJ/b/ZvRTN8TivYhHEaIRTOhz/sFL1YtF
92S2WxuIflkUIBXcYxyLCaYVvx98ZQDtp+q1GLNY5HHn/uPwkAGeZ80/yVnG
4urW/1Vk3fFUv18clSgh0TCiyChRSWSdo4Gor5IioYSyklAqkjvDHciWFclo
UEZSZGVWVJKsste9NGSX3+f35+d17nOe93m/3+c8z/O6j+OTCT2MRM+ubDUn
ofoodK9y44LyXV8DkgUJTZ5O93YfI/hXDLmseoKE+waHLkzt4wI3L+n+FysS
Fsdr8XToE/7QffaFbEPCyxq5frlE/FlNzQo1O4LPhMH36sT6qGMd+l/PkPD6
0lrvPBfCP50TXtRzJBQf7+3YFMwFmwtL76s7k9CpbeT2+idc0Pu1/kv7BRK2
KEvWt7VxQfbm9hV0NxIekjnYdIGfOC8E9unvvEjCLx5f993bTfj9zkmvzksk
LLrmsOaowzjUyrin3/YmIW+qzlrTUOJ9kHWrddcVEm5raV7GfEz0g0aUYLcf
Ce2tzxta1o/DpbIsvZAbJFxZuXRRp3McLA6VXtp9k4Tn1GJCDhD3ud0tH9K+
3SLhqUPfPLl947DuzODnUDKhh5614462cZgbmRPYQyPhn1jPAkrlOHT6iuj1
3Cbhg4kCg+b0cShblL/EDCXhP+NH/o43x+FeqHaaFouEnAexFzuPEu9NiSOf
e8NI2Gb0akxCjphHqQ4C7Dsk/K4vqifK5cKhbVd190aTMEmNa91O9INqUahn
fywJy733eQcQ/AkbptwLSyChdOcK034bLvxszG/RSSLhzEL6f592caHlZN3y
wRRivcjrU02ruVDU06kTkUb4x/LTGYlZDsR7/Lyol0HCOOOlL1gjHAiYXnZv
KJOEoQ++BFb1ccCeLNlyJ4eEqvnvF7qGOGC4Sn25wWMSSsgLaib+4YBC3H6d
kVwS+pNqGiyFuMAvb30x6hkJT4gNps1u5cLwY49UKCRhWYKekexRLjRqkz6N
PifhxUdrRwVvcOFJVTR/TAnRv7bPdr9+wIXw/3L2GpaScL5Y9Y9UCxd8vpZ5
cF4T+Gv9WriLXDjp9CkltpKE16yEuoSVx0F7YujjvjckrDOYtSeZjoPUjYVl
47UkNN6smxPqPA7/lq7eG99A8LlzPbWe6JfvYVs8DrwjoZjOhUHjoHGoktRJ
mWgiobyL+DydOP8eZPz3MeEjoefc5mGyN3Hf2eG4zOgz4f/Eu/vybMfB/aWf
9s8vhB/EPrz7rU/MFyOme2I7CVVKPrVGriPeKx9Sk427SPjE7sg6ReK86nhX
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
              "]]}, "\"\[VerticalSeparator]2,2,1\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]2,2,1\[RightAngleBracket]", 
            "Tooltip"]& ]}}, {}, {}}, {
       DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
        AxesOrigin -> {0, 0}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, DisplayFunction -> Identity, 
        PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
        DisplayFunction -> Identity, AspectRatio -> 
        NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
        Identity, Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
          AbsolutePointSize[6], "ScalingFunctions" -> None, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
               Part[#, 1]], 
              (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
               Part[#, 1]], 
              (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
        True, PlotRangePadding -> {{Automatic, Automatic}, {
          Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{
         "\"\[VerticalSeparator]1,1,1\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]1,2,1\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]2,1,1\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]2,2,1\[RightAngleBracket]\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
                "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], " ", 
    TemplateBox[{GraphicsBox[{{{{}, {}, 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1:eJwUl3c81f8Xx4kkRERGJV+SLSFCnJO9V7JCMiLJ5hrXvZdklOxEIrSVFpWt
RKIliQipbHcUGe3f5/fXfZzH537en/f7PM95ndf7P59QR/9VbGxsiWvY2P7/
Ozf/29r08KLByB1mJc/oHr2Iy3EaxhVvITCxsZO7NsoglpdxWLziC7zPtGxY
3FdroG28pTYnnAHPJ2nPVxbfGyS0XGHjrFiAChcLh+qpeYOhIYOrkLECP/Sb
3q75sBp0l/ttEsL/QFVqQWqbhgi8zNCO/6DMjhe1Xpo8kZOGP2eP2/wo50D1
bNoOcwtlUL7yWkpUhAs3D2wRfRamCR61m75rZnDjfyfuaft06EFmW0Cn4x8e
PO+js3Xf1F5o6qk5Fxa+Dutmwz4LrjcF+ui/Y1kTAhhR3dJkKmUJWUuXpfqV
BbEsyfzGuQ82cOWPFc/EYSFcO2/OeyzVHlo45xcWyjegS9EhpHc4QD9v0ciq
D8IYZRLz4125IzCFDDoFRTZiGU4MBYjsAy6J8TtSdqKY4BWSH6S0DyT/O3lu
R4YYzuwclR+adwQtebUUgyfi6J0hq5qf5Ai2O/qP2fyRwGf3BN7u++oAh7XI
Lh7am5GqHPsp3sUBEvWl9x4N34JyMxuLl57bQ4HxM8X4G5J4OFnXqd/DHm5a
hQhnTGzF6r1ccSOC9uCjwPPvebYUMsav/y7ptwOm8kjkW+X/8F9LlO10hx3E
q92ZHur6D1N/4sOcYTvg0jzu+fmwNBZpnvtox24PedrOvTMcMkjZ432/jVhP
Uk/B7Fu5DPaltBkxxe2hyuB344r+NpSv/jXbJ2EPWoav1dg+bMNtl9i2y2+x
hzaTystrYmVx4PREKUPNHmwtoiUERLbjz2zloXdH7WHI2jx7473t+OjN39qk
SXs4bL+JU9JODsNHXVy31jvA/D5mrCxdDikD1+Umlx2B4vKYoZwhj/8yK8yW
bzsBz4ECH83tCrg/2OmS6IQzFHoFDOg9UUAy+6YfZ3LcQNpH19rIWxF9HPRO
H6/wgFv+6x5b/lFEkRfa6pp/D4LukbFdjueU8MCuGSv/J4fgaXBNlZu2Miao
RfvsyfQFx7DUrYf6lLEpYO3+FHN/GIl0KwgMV0G98TLm5pnDEEhSXhvGr4qh
pcJmRj6B8D3+XyLphipeyM8coN48AjRK7zzFfAeOCuqWr+4IAr7kywGpEzvw
xD5bvYTqo/DCcA/TdK8aCt1Y46t9NBjy2i9f685Ww6uvxXkEuI6Bq6mAr+2o
Gtr3u/wYTz0Gks9it/Qq70ShHy02O5eOwbjF54H9CTsx4G6QQKN7CFQ9t8ob
7NqJAzTDn7V1IRBmc9/aU0wdsxpGcnwFQ0HrteSaT4fVUe539KyHbyj8tk9/
7HdfHXP1hq1db4RCW++3hGkODZQ3qNgWPBEK6U4HtIIdNfDocMeWvWvCwLa/
/SurXAOr492LPgmFAfWjpxv/kgZqppRvYG0MgzvTS4+VrTTRI5ny1ZaIx75l
K1qVa+JCsb8Iu1gYCP6Szz+yqIkKP7hpqrJhYMjZ9ivNchcKBdXlyJqHQcS6
A35XLuxCf4cbD3hOhcHFjd9ftH/fhX7bHXnjlsKgb+vpXV8stHCbSkOXRU44
rFbYXsZ+QQsV9X3217hHgJZ6K5fUdy0sMp4snNwXCYf1XEMNLLRxNMc1RCMm
Cs4afxvwKNNGuRYr5xt10fDM5iQmLGhj4I7S2wrrSbDiLHO92Hw3WnufUy4M
iwX3I/vj++d3Y3hZ38tnkglwKoL5+buZDn4oGxxMcSdDU0Ka1YZSHWQ0WNiE
kxOBniJVu3NeB9OEp8bjkymwJat+s72ZLhZ4JE+tPkYF27OOJ0LO6+JOpTol
0a00oJTPMTK/6eJ/0Vm7j5FpcPt6ivMNUz0kOfeKjb+mwdi9La1dJXr4yTeB
zV8iCQSbHshNf9VDD/sv51Q9ksCwwy6Hy3QPajF4OPsLkiDy1fTKtpI96P/M
Ipr6JAkuDSQdMvq6B91os6dMp5Lg3ZhE9yETfaR6x8y3/EsCrtkaddo5ffy3
3kEnYl0yaC1Yl5Sx9LH68vJ/hkLJEPB7gqPZ2ABzHJJ8CgWToWg1NfhDsQF+
5jqrb74+GZ7xi737wTTAbQKKp6yFk+GH6F19MWNAG79gF9ltyaD4n+UVrWJA
rrf7WTtNk+GA4hf+/UzAV5N/N69Qk+GpeEtj/X+INvQnJNq7ZPAq4/lqbo14
MtjGccz8OCxLu2x7H4MonrrJnG3oOORcvegaUIGY5bt3/GJqCsgrf81ceo6o
dLZt1V3LE/Dozp7HJ5YQA0QD/6uSSgXXXRmLwv/tRdmGrafMVqXB1/p3Cpes
9mLb+oB3EjNpkGEg7aURsxcPn1lckH2dDg1mjU8dnu/F14GkwocnToLjizW/
xhb3oui2Y+k1dqdgzt5pR5iUIb5VpPxu582ElHflvv8sDfHxpjdPTeozYbM7
42xWtCE+HOvasNb1NNSO6rzYUm6IPE/iLi1PnQZr31S26m5D9K2dftwWmAXj
U72aexYNMf0o+3LzYBYkBm898nyrEQZwfJae0cmGjd+OlrpbGuEqUC3fkZ4N
t6Lr3sxEGWFUVsGp10+ywfQnJ1fcBSN0s+oaekPPhlGKgy53txHOybYHwKoc
iOEoCzn73Qj7qZzkQa4cEEifrdy+1Rj78P5xChFf49MeuG9hjO6nzwUZcOYA
5h7nNYkyRq3oobZHHDnQObrRYNV5Y3Qkawgf5M4BW+WqsNYnxjjyjFBxkRzo
j9O/SJ4zxvZPSmbflXPAs7Pnnc4GE8S74wMSjjkwLuzHvaxrgt3vCjRUUnMg
2GdZt9bHBM/43fr4uSsHFm6fPBZ+0gSjJTnU+bfkQvyfLeWq90zwaGb8/FVK
LrBb3e2dGzTBiaXRAQY9F9KLjFdfZzfFpvehGdn+eXBW42iQjIMpKvQ+Uv3v
aD7UHqnTFPtqigkOuiQm5QzoPbQKeCdqhrs7qAHTP85AG+fH4jwwQ8GGI79N
QgrB0jHihV2AGYYKK/5Q/VAIby6s/seXbYa6j+t0p+AsuDKKdnY/MMN064jw
upKzMKar7Jc2aoYiC6ZFk4yzEJDeWmjMZY7yj8y/3d1VBMx3jl3squZY8lHd
MjCiCKJlJn+17DfHpMJzA8cvFsHvsDhVcqI5mpzb/bX3WRGktPAd0rlsjmLa
3koVn4uAl688f+mFOVL9zy4PfiuCPDeNpzXfzdFeTiNIcqUIJK4+XQnbbIE1
Dwyzni0XQcV3NyVVYwtMesgeMLhQBPKGDM+5oxYoVKYl3MsqgtvZtJxr+RZI
Xd/pQCZirZENT/wbLfBMTgz/taUiaFG8uij9xQIls14YTnAXg0msrvwYjyVy
ZNq93atQDC86XrqXqltiQrbXOyH3YnDacOi0u7slMiP+Lr08XwwfvL+3iiZb
4on7HiZL34rB51bafN91S1y1g7Fxi9s5mPklIZv3xhJvJUzFLvWcgzCLWy52
PywxRyDVJ9GlBKjjfU1d5lbIK34wdFXqeTgvIZ3WMmWF2enL6e82XgCZwPv1
CQLWKM00cNB/cAGq7pvTd2tbo3YP+8hDuXJQ5xiWXPKyxvdGfUMeYeVQbx/q
UJNqjfse2A+Y15YDlq1KCbtljTr0Z+Xt8+XwbO7MA5V+a1T6e/2sjFIF2Oko
zMz+scaoYO4dTz0qoD+1adM1WRuM+rpmh0xaBXj12dn629jg6jtD9P7rFTDx
3xeadLQNnu7pjH/QXgHBoTE1H8/bYED1+N/PAxXwvWnt5Pl2G+SNtt859KUC
EnhKxdzpNhjxifcRbaYCVrmqWYkK2+JqyTPTMrMVcPLyk8Q+PVtsB5HasKkK
EFxwvpPra4u7c0j8h4j3JT3/c0o7aYu/Ls/JKo1VgHLn3DL5ri0+l/3EP/Cx
AnR3PiiJeG+LIx9MZ4+NV4B5CQ0C/9kixdpLqJNVAc6rrb54brfDk+GMR0c5
KsE3VCRtn40dxm5Wv0KTqoSwwY+KFlF2OP/4uMJDs0qgGFW9Miixw9wtwlJm
cZWQWR0Vodlmh8XHJPS/1VZCsShsVJyxw8jmAuran5Xw9hHniAC3PV7ROb2S
ZnYRhhZnbp3cZI876vJXtpy/CJ8UX9NW77BHzlKmhs3SRZg+WOtIM7THPr8T
VylOl4BVULzt1357/O+e1+TG+5dgqYuyFH3EHo9sDx86sfEy+Er0CstUOKBp
3kSxvtE1MGiMdUhc74Qj39UmY7Nug1TvzKsyWSeULENxeuptYJ9xt36k64TX
br+VXk64DZ//Pe/6ZOeEhr7HwvnCb0P7Rn0zDn8nzK/wz288chuuqNxq3xbv
hEqP2Z7HE3Ga8VZD02wnnGWuTQqPvA2BB3JaAy454VW9nUfNTt4Gywh2/Yx6
J1QO0Prx+/ZtUM6IaKh65YR+PwUv9EzchnXlX7RffHHCssnyWbGNd4D5wOk+
Y8UJj1Vv9z609w70vOxQF+Dfj+pPBEmaUXfg3rjWHTWZ/bgonWZRW30H8n9d
VXHcvR8L27ZZP6HfAWeFk/JnfPajfipV0ibmLuwmKuEBaT/uWyq2XWy+C+Iu
wTLvM/djjeCWyIur78HPYyPlPyr24841P/0Wre7BcIqt5KaH+5EswWdfnH0P
WkpaS/a82I/awaf9HV/fgwv31MS9PhHrtVD2/llbA7SuikLq0n48tmlYqdCg
BnzGhIQreJ1RR04wyDC4BoyXj+e2STmjtvUBnQN5NSDLv8g/vssZw6paT8ff
qQEu2cOZq62c0f+v0tH0pzUwrTewVs7bGauy/K509NVAt6N5mnm0M1pFxPv3
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
YEeH6XcHP0txxOPwpyI3iKbDwXyvn4e443G3RjIH6wId+u09hS6ui8d9555k
2b+igzW/h+K4UDza8OoNXvpLhyfP3Q1lxeLR5a2phfgOBuhmuLkf3hKP7CcV
Swc9GXDH1DXiqnQ8/hOuivovgwFynC4np+Xi8cDO4Ic2txlQ9nh/pYJKPM5w
VckxXjFAhOrUEKQej2ri7Y6vJwl+e/b13tCOx3PdOnxCSwxY9dNhlr4nHjlL
+7qVfzMg7qH9KlVDItaIll1ZYcDXKDuJULN4/FJpOnGXzoDD6rbqd6zj0S3V
3PLPAANGWNaW3xziUckvoHekkQFO1VY+6i7xqK/1UbS6mAHPgyzjIz3isdwn
5CRfJAMM5S3yag/F48W51u5eoj7qJsyqFg8T67Vrly5uZcCOi6ZtWsHxuHbT
dGTEMh2ueJsMkcLjcRd/kpVWLx02SxrP18XEY+Z8QyHXPTrkfzDk+ZkQj6u4
6j8FF9GBp3ivtF5SPI692p5+OZUOSc6oS06NRw3ZkLa8RKJ/NoBj86l4POpr
t/o+EYe80Q/6mxOPgkoh5+TS6DCRtScZCuOxTXrGt6KYDh7WeudoJQSvtzaX
4mvp0LtW997j8ngcZ8i33++ng0Xn7u5VV+Lx5628eJ5/dHiUov3Z6EY8frh8
5eECUe/ahlo/U+7E4436zE2tBxhw65+m0NP78XjkTph+aSYDZJs1FNc0xqOW
Y+G3e00MOB+vbmj+KB7ZZpXmFGcZsGH3TveMjnh8mP8LzDYw4eTijoju7nh8
I9m4EqHFBLYa1ZO8PfGYWlJZ5ujIBFKYSqX1O6L+dHr03vozgW/NYpzGEJHP
nO13e0KZUF7a5CDxMR6XTH8+zA1nwi7NFAX28Xj0NbugtfEoE7q7rdinp+Ox
UJT1udqDCV6HNgy+IqzS5lZhjmVTJiwsD925Px+PFZyk94OKTEjPqkw/vxyP
x+Q3O9LWMmGzbJD38d/xSFv/K9FynAF3G3fuDmJPwPmked9HxPlMHX8IOHAl
oG9w56ekAgYMTT+a0uZNwC0HPRx3HWNAKDW9VXJ9AnrVnJiJNmcA50b7s6tF
EjAnXP1HmxwDim6KhtLFE/DEx/UjYXwMUDH6aPpWMgEjfy7vOE/US9vgFckG
GeJ7usrXts4SehIWslQun4DPn6XuP03MqzkurVdpKgmYKryZX4mYV7TSP5dD
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
V5F1x2P9fXEaopCKhlFEomSX7RwNiaSkSCiVEhmhVEqeGZ6BbFkpGSXK+KLI
ykxKUsnIXs9DSXb5fX5/3tf53HPPfY9z7319SKh/lv/vyZdcOE8z+7rDnIQr
3mbFJhJ8GIucXdVqQcJbI9Ap5MIFhQc+hiRLEka+mO7pPEbgLx90VekECWUG
Bi9N7eUCNyfh8RdrEk7FavF8NyD0offyC9mWhO80sn2zifjL6uqVyvYkrIkb
eK9CzI849t3g2xkSJi+r8cpxJvTTPu5JPUdCt7Ge7zKBXLC9tOyxihMJb34d
vrfxORf0JzZ+abtEwj8K4nVfv3Jhy51dK+kuJKRIHWi6xEecF/x7DdTcSCjk
9m3vQ01C7/dPerZ7kHDhhuO6o45jUCPl+uieFwnXJ+uuNw0m3gfpd1vVr5HQ
ueXDcmYW4QeNCIFOX6Jem4tGVnVj4FGarh90i8hXsWxRt30MLA+VeGjeIaGP
clTQfuI+p9nyMaXrLgnbDnW5c3vHYMOZgc/BZBJm6ducV/06BnPDc/x7aCSc
jnbPo1SMQbvPav3ueyQU/Jln+OHRGJQuynowg0kIJs/8zt8Zg4fB2ilaLBLy
pkW7tR8l3pti5p97QkjId/D1qJg00Y+SHfnZ90kobiiiL8LlwqGd1/V0IknY
qMy1aSP8oFQQ7N4XTcLPXnu9bhP4CRslPQyJI6Fa+0rTPlsu/GrIbdFNIOGB
v4+OfFLnQsvJ2hUDSSQsX/3mVNMaLhR0t+uGpRB6tvp0RmyWA7FXfrnpp5Jw
5OCyItYwB25PL384mEbo58kX/8peDjiQxVvuZ5JwZe77hY5BDhgJqawwzCKh
pazA7vg/HJCL2ac7nE3ok1RdbyXIBT5ZG7eIlyQ8unYgZXYHF4ayriRDPgnH
4/SNtxzlQoM26dPIfwR+z9aPCNziwvPKSL6oYhIutX+p+eYJF0KPZOoYlZBQ
rkjpj0QLF7y/lV7hvCFhTo1vC3eRCycvfEqKriDhJ2vBDmGFMdAeH2ze+5aE
ojDrQDIdA4lbC8vHagi8t+plBjuNwb9la3Ri64n+oL6RWkf45UfItiv7Gwm/
6l4aOBgwBpXiuknjTSTc5iw6TyfOvyepR5rjmkm4dn7rENmLuO+onl9u/JmE
+fEP9ubYjYHrK1/tX19ISF77sfG3AdFfjJmu8W2Ev4o/tYZvIN4rH5MTD3aQ
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
NKTPGva9sekHvo5WUvxZGr4XtF5Rqd0PwlKluwzP09AoV/y2xJZ+WG+f+q3L
iYbqKwtJ9wT7YXMCk0ZypmFAE7/7dd5+kO/wVpN1paHYjeV/l/3rA2Wp0x1V
bkQ8wMP7LxHfY7836KInDZfsc3zaRsw3TFDcze9Nw/5hfu/3Uv1g3CHSnXGN
hgs3vbFBox+OSM0wzW4Q407p1yHm/XDSvkube4uG3KvSwnmX+8EhobqPfYeG
WytDKgvp/XCxIytUNYCGj5SVpNc/6gd3qUj9ZjINff++f25W0g/X7W8PedNo
+DJqIX38Uz/4J5yPEAukYdxg3ImS/n6gd5jif8E0FKZbnUoh9MqWUufYsGj4
bME9rX6qH6LsN8XMhdBQsnPmv4zJfkhM4Nkff5+Gq1nxwDvaD086BscNIon9
qNzB/m/98Fyq6UFXNA3vt9Wue13eDwX2BQdJcQTej6bu6xL1lSYk/N6aQEPZ
+K1zdnf7obqDmlSVROjznpKYnXU/vJe6YnYxhYYH5f6MJSr1Q6v98ekVqQQ/
m+KiM3n6oTNB91FGGg1ZPyqdRD73wUCHjIVZJg3lN8TQTj/tA66UwDznGQ3v
aZ1zWKT2AbW+he6YTcP6w6wLDk59IO6bvLb1BQ2VhFO/Z5r2wQvZK4mmeTR8
Yst3LWp3H5h80NrxpoCGfGFikw/k+6Dr9tICjSLCz+eGKfNSfXBdscko/RWh
J19DlSKJPhBqjWuULKXhzRrrDwlb+uAx+eKpsDIa7s7Q+aej2Ad6Kur9yytp
mJbsVzSi1QfN3/963npLQzeh7aldxPqXA+sWxmpoaCe3O3arYx/w7I4MPF9P
rCfg5Zx8sw+iu8+Kfn1H+K104Kh6OKEvtlLy4SYa3n2l+DPtWR9U6c7sLP9I
8BG6nPGxqg9OD1b+t7uFhrvcTt0KbuuDifCQfZmtxH7ualpVcvogEE83bf5G
Q7Oju5MYc32whSt/Ovw7oY96Sr34UoKv2ImBFZ00jM59p/h1eT+YG5d63f5B
w2Xmm645LumHvomgfz97aMj71dUkZKYP/JJOBDv10/Cd90em71AfrD0ss75t
kOin0om+bs19kDHDeXhkhIbMnS7CiwV9gKmFuyo5NCx6dPvHeFQffDlGLdIa
p6HPvICJmncfuP+zOPDsFw1pH4xefj3cB8ufSnyUniT2k/rAUnRbH8RbD9pF
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
fxn+D5+IvfI=
              "]]}, "\"\[VerticalSeparator]1,1,1\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]1,1,1\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1:eJxF0GlI0wEUAPClK1ySOs3wKI9G5FULTSpz80zRppKJVJSWx0wZm3fTqaU7
1Mw80073n6VGl1JYumyFjiz74BHJzANUiq6lbl41Wwfkew8ejx+P9+A9xzhe
ZKIBiUQK+5v/6lfNCiuIvcAk/Y/0phyPQNlbn1XzjdVsa9k0WKBoJpFlWvCv
emHYD8LQd9UKskarJSzAdvudg+cIGjh8WDk7Q3iAfauExgcyA8FUbXRbVXw4
mPmUfyjfLApMZCjujx05Cp4IGR/SBcWAEw/mquP6T4H95Evkfm4C2LhjkmQ7
yQa7zgVzvUuSwV6dNi8YBhxwa0jstpc8LvjZejM9tTQVbNPRPNrWkwbeKtSl
ya0ywDHulOripEy8zznsllKaBeYxIngcTTY48Eqxm2gnH6w0L2hcJ84Bn0nd
0ch6lwuWWVrUGpjmYV/1mEmLz8f5qcrRR0QB7h+kGRipzoI7uPLU6dpz4FKr
gpFc90LwrkGiIXgcPauTOi2KisCcUPnd445C/E+LR9lyH7rP6VU8K1kEnrPd
t6aILAart1B03+6hmwLm1aahErA7n8k4PY8WDNwU82uKweNXP1Sn0EvAlpmS
lSoVmpLmH5uWXQoeyjthJ3E8D27/GdWY9xp9+HqSvSu7DNzLGlk2MbsAXnRg
v7nzAO2T1B/nFFoOjumqjx7VoPd6CgKCKi+ChwX+Lmtr0FndFKryEvphxOUJ
v2tot5T2HEYz2kE607q7C02hJGymfULfjnA1nPqCDqrTfCbUaBGt8ImdFq1n
NETa6NGadFUJdWMFuLJTyhvYhKaTkqIrrNGc8gXaBnv0xxbz50YuaNH3kaZe
NzTNU3ZBQkef7KYfI3ui9UZLvj170DciFNuLvNDedWITPwb6/Rhr4bcP+g9K
cRxt
              "]]}, "\"\[VerticalSeparator]1,2,1\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]1,2,1\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1:eJxF0GlI0wEUAPClK1ySOs3wKI9G5FULTSpz80zRppKJVJSWx0wZm3fTqaU7
1Mw80073n6VGl1JYumyFjiz74BHJzANUiq6lbl41Wwfkew8ejx+P9+A9xzhe
ZKIBiUQK+5v/6lfNCiuIvcAk/Y/0phyPQNlbn1XzjdVsa9k0WKBoJpFlWvCv
emHYD8LQd9UKskarJSzAdvudg+cIGjh8WDk7Q3iAfauExgcyA8FUbXRbVXw4
mPmUfyjfLApMZCjujx05Cp4IGR/SBcWAEw/mquP6T4H95Evkfm4C2LhjkmQ7
yQa7zgVzvUuSwV6dNi8YBhxwa0jstpc8LvjZejM9tTQVbNPRPNrWkwbeKtSl
ya0ywDHulOripEy8zznsllKaBeYxIngcTTY48Eqxm2gnH6w0L2hcJ84Bn0nd
0ch6lwuWWVrUGpjmYV/1mEmLz8f5qcrRR0QB7h+kGRipzoI7uPLU6dpz4FKr
gpFc90LwrkGiIXgcPauTOi2KisCcUPnd445C/E+LR9lyH7rP6VU8K1kEnrPd
t6aILAart1B03+6hmwLm1aahErA7n8k4PY8WDNwU82uKweNXP1Sn0EvAlpmS
lSoVmpLmH5uWXQoeyjthJ3E8D27/GdWY9xp9+HqSvSu7DNzLGlk2MbsAXnRg
v7nzAO2T1B/nFFoOjumqjx7VoPd6CgKCKi+ChwX+Lmtr0FndFKryEvphxOUJ
v2tot5T2HEYz2kE607q7C02hJGymfULfjnA1nPqCDqrTfCbUaBGt8ImdFq1n
NETa6NGadFUJdWMFuLJTyhvYhKaTkqIrrNGc8gXaBnv0xxbz50YuaNH3kaZe
NzTNU3ZBQkef7KYfI3ui9UZLvj170DciFNuLvNDedWITPwb6/Rhr4bcP+g9K
cRxt
              "]]}, "\"\[VerticalSeparator]2,1,1\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]2,1,1\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1: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
1RKjinTS7avI0Pr8TJvbDUs8yfWttjmHDN0MThkfaixxwHegIvU8GfqOoYfN
Y0tslSfe1Yklw+vA/QqvRy2Rh+uArijdfneTfZMR2RKbzI+nbqZ/Pz5MG3m8
YYmupbtYi7LJMLflbSVut0Kn0jpxrTtkIGs0x7QcsEKjntYApqdkWIm4aax4
3IqOj1plwyIZflWeF6kxscLLpzdEN3FRYPN2s+7y01a49cHlvTouFODSP5qz
N9kKlS/ly/88RwG+OCHfgnwrjNudoUWroMCuh/+UBO5b4YV2c7E7/99HFma2
ZHXT/Z9vvTFKn3eSwn0fOUescMH7DYcnfd88YlF97+JnKwzvrdgazkgFpaRs
EtNfK/R8SZQkbKKCRku0Rdw2a8yeDVnRoZ/vGfo8cGO/NbaIDPBGr1CA8bOj
cedxa5SWDClPp/ff9Mbzvikza6yk2Iv7tlGgl1/9BLOPNeasrgQoXaPPS5nq
3n0x1rj7npV23EkKXNQR1dLLsMZTmpKRi6r0+XeKUT2lyRpv/TPqzhglg3TK
qeY7A/Rz8cW+7EoybC2aUXoxY40SJ31+S9DrT623fkRZt8bI1dTkX9Z0fF4+
lufmssEtc095SEfJ8HBW8cERcRvs0/ZjWdpFhuzfFTKWyjY4J/lXVYSTDKd5
he5GmNjgz5VX9SWbyGArmSpxxdMG00utDxaxkUEZf5fVR9lgbq2AxxAfGYTs
gsRH02zwK+ffzCxJOl7Bn4p+3rJBbt5S73e6ZBg7byqyq8EGnTl7HMCfDO35
HflqL2ywYVyYRzSDDDcfHhFynbLBRzlDgTmNZIjvu3WVtGqD2aE1FwqmyeA5
yct3i8MWyyTT5KU5KKCzdu5y9x5bbHU5AgZHKLCf6wfX7DFbfMy/ckWMrg+s
+33TNhnZYvPouTMHAiiwqPpuy0F3W4zxyHjJF0OBfkv9i/pnbFH97uYznHQ9
rApoYglMtcWI49CdHU+fX/FSif/dtEXDXK/Z/DMUCL2Wv1FVZ4u1C7N6RA8K
mFdzxg302eKmCVWOVR36fHoc94s2boteCTd28u+l82+MGsXz3RZZDrueVl2j
6983tx/yW+xwudjhwd9nZBjdMnjKWsQOH/ANe4jkkqFpj9aXMwp2OBeTqxTl
S4brSrXB1/Tt0Orr2ruFY2SINd233Ohih1JCNlRtev1dfa74fzhlh7Zd38w0
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
8gbwSSg8lQd9syk+5mAS3lQYj+QYVwGmfILPZDgJjfMSCtxnEVrnd9S3RZIw
ftq9wG6bLkTKP2DNJ5CwsjP+y6CiARwhGtpFx5NwqfhGYJyQCSz1zVbYXKDn
O97M5QDmULqDtC6fSo/3UlDPZL4F/b0oZLAtg4R14vcSKFmWIHivNo+STcLO
rzXDBBErGFo3WerPJaHj5kGampYVpOksHq8sJGF3ySabdnYr0MtM/O9CMQkt
GF6Np/xnCQxjwmOeFSQ0/LzORxyzgOaDDdJYRUK+UgH9Tn4LOB1hEbe7hoTb
OR/Z3qfzTbZj+eWvRyQ8qfLuRAKawSJ7kshoMwkbn79p0hMxhWLbPaGPOkjI
sTbZO3rCBJyLmzuyekmoOHn3+UizMfBTrbeF9ZHw/Whg1rFAY3itQnM3GSBh
rt7DnmktY0i9kFIj9YaEz8k3i0PljEFnUJyJbZSez5gp3/BBYziz49Zf008k
LPgs6QNixlDuIPLzyjQJhQ7uP74kawwjhfnfxxZIKHj86rVrIcaweVrwiziF
/v/9rcHxvCagfODqcuA3Ot5PeppINqbgH7h9oWaNzj/dB50WKuaQV505vf6H
hBeGckx8X1qAz09WmihjPLbolRaW/LACYv7joB7meHzdNK1wttYWrqqfX/Jl
jceAeJvDuT8doHpCy599SzzefNI1UlDlAk8SGOfvccTT9xWFu5ND7jAu3ull
wRWPB0xWMfejJ6w9Jk593xaP2svR+8tGvWGbv7pb7vZ4nHW/sMxY5wsS7H/G
VPnj8XtN0MwbJ3/AqmbHCcF4jOW1+HegNwDsTc+OJu6Kx28eFid7FwIh7IuS
7QGReOQLkZkQenYSUrJW3/TticekL8wXMCgIio8+sggWj8e4Nj7SiYkgaB6J
eLXtQDwWVjj58MsGw1C0vEmdRDzKslMddHyCYWnn1367Q/F4o/JFvnJGMPyv
guuOp/r94jRIRSkSSYlkZFRK5jkkaWhoSUQoNBCVErr3krjLzCiyMkP2qGSm
JJIdWkauO30rIarf5/fneT2fz/M5z3s95/5z51U/sZzVJOHzfUHvxoovwxoH
j6aHOiQkH51XdaHzMugKa5qbbSMR83vgM/+Jy3AgnVM3up2EMpK8Gy+J+9Jl
dy6E7SRhVi99WckqD/Afc6vebEjCV84VtsHyHhATtsmw3ZiEUaupQZJEna/x
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
8h+E44GrKq51kwL4H2IepeY=
              "]]}, "\"\[VerticalSeparator]2,2,1\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]2,2,1\[RightAngleBracket]", 
            "Tooltip"]& ]}}, {}, {}}, {
       DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
        AxesOrigin -> {0, 0}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, DisplayFunction -> Identity, 
        PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
        DisplayFunction -> Identity, AspectRatio -> 
        NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
        Identity, Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
          AbsolutePointSize[6], "ScalingFunctions" -> None, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
               Part[#, 1]], 
              (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
               Part[#, 1]], 
              (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
        True, PlotRangePadding -> {{Automatic, Automatic}, {
          Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{
         "\"\[VerticalSeparator]1,1,1\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]1,2,1\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]2,1,1\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]2,2,1\[RightAngleBracket]\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
                "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], ",", 
   RowBox[{
    TemplateBox[{GraphicsBox[{{{{}, {}, 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1:eJxF0GlI0wEUAPClK1ySOs3wKI9G5FULTSpz80zRppKJVJSWx0wZm3fTqaU7
1Mw80073n6VGl1JYumyFjiz74BHJzANUiq6lbl41Wwfkew8ejx+P9+A9xzhe
ZKIBiUQK+5v/6lfNCiuIvcAk/Y/0phyPQNlbn1XzjdVsa9k0WKBoJpFlWvCv
emHYD8LQd9UKskarJSzAdvudg+cIGjh8WDk7Q3iAfauExgcyA8FUbXRbVXw4
mPmUfyjfLApMZCjujx05Cp4IGR/SBcWAEw/mquP6T4H95Evkfm4C2LhjkmQ7
yQa7zgVzvUuSwV6dNi8YBhxwa0jstpc8LvjZejM9tTQVbNPRPNrWkwbeKtSl
ya0ywDHulOripEy8zznsllKaBeYxIngcTTY48Eqxm2gnH6w0L2hcJ84Bn0nd
0ch6lwuWWVrUGpjmYV/1mEmLz8f5qcrRR0QB7h+kGRipzoI7uPLU6dpz4FKr
gpFc90LwrkGiIXgcPauTOi2KisCcUPnd445C/E+LR9lyH7rP6VU8K1kEnrPd
t6aILAart1B03+6hmwLm1aahErA7n8k4PY8WDNwU82uKweNXP1Sn0EvAlpmS
lSoVmpLmH5uWXQoeyjthJ3E8D27/GdWY9xp9+HqSvSu7DNzLGlk2MbsAXnRg
v7nzAO2T1B/nFFoOjumqjx7VoPd6CgKCKi+ChwX+Lmtr0FndFKryEvphxOUJ
v2tot5T2HEYz2kE607q7C02hJGymfULfjnA1nPqCDqrTfCbUaBGt8ImdFq1n
NETa6NGadFUJdWMFuLJTyhvYhKaTkqIrrNGc8gXaBnv0xxbz50YuaNH3kaZe
NzTNU3ZBQkef7KYfI3ui9UZLvj170DciFNuLvNDedWITPwb6/Rhr4bcP+g9K
cRxt
              "]]}, "\"\[VerticalSeparator]1,1,2\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]1,1,2\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1: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
d9BtT2xI46u7YRcicu/BsqbuBQKHDHIOWh9RpLkHdwbSbHaUZfDHEIX0WaUI
OG785Uk0UQY7NiXqLEPCoXhcooMtTQZ1Ho95RbaFgapNCMXrNhl8JK7CsXEi
DGbme0WubMjgLdmWwWdRoXDT5YRT+wlZ/MQkPXuMJRSYv11LNlaWxXmbr+EO
9SGQRyzrWfSWxfY9rj6E+yEg/3sXLSlVFhPP36tnuB0C4wFal3a3yWJ4wim6
zIwQ8KFOcXvyQxZfxRvU8myEAGPYUsaZE3LYEa9X7nUrFHIYxIZKlOTQWStA
e1IrDPDh7b1XveVQcuuF+hvHcHg/zixFlSSHrT8c8kvyIkCdL5fwrkEOs/9d
+3xYMBIGSZKZN5bl8GJUZvrmfBSYve8ekDh0FeVGQ/nLm+/DzGHb3b8uXcXU
tw8P8I8/ABfrX5eKra8iTcr1TN1PD+H7mwhXj4irKKhHZz3SEQN+f9nS+AvJ
WGBA4XNuLFCqFPQuD1/FmfRvHLec4yAsXo7mBaU8EgslNN9TP4IDc0Ni9jzy
WCvmx44ej+CJ8DVnLi15NOw3i/fKfwTswf+SJnzlcb/7XrtfdY8gu+vhh+Q0
eeTb4ciSePEIzh8/TWXSIo+aUYKXaV0eQbFTmQjLmjxOPzjz7NPBR3D5rYrD
wBEFvJ7cxH4yMw7qd31OiAEF5GKke+DKHQfK2p4dGg4K2O1aNDnwIhZ6Uml2
GO4roO4bQ2cSfywYfokXbCtVQMX1vmKZqhiYuMRnGzqugF5RlryzBjHgEPbu
sRytIprSJl7ZTxMDqwParZT8imhFtJIob34IRK657Ro9RSQJC2rdT30Ifwgk
/hs3FXHIgi/6csxDuFPDYCXxTBEvfZb3TU5/CHsZ0mJ/dihiyTRzU1v3Q4gx
Em4u+qGIIa/5/w1zxgDr8+ZNwnElrL7sVej3NAbSfxid45dTwpo7l2ecJGKB
W+aL2fI1JYQBJs3hnVh4cz/oQU6sEgrJTTvOLMeB6NihBrtKJazMbsg+v/UI
anifb3BOK6HirU8RFRxP4KrvJe4JemXcUtr38JhRPHQ0dRonCynjEZaRu1OP
E0D3kFWUsbEyZqbjbfPOpzBi+ePdkVvK+P03m03E10Swzgtd73+hjBkcTvNM
35JgcZv1dEyPMjZgxDn998lAUMoz0NhSxs9zfq+lnFNg87F0BMNJFXxwKx8n
+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
/g/A9C2z
              "]]}, "\"\[VerticalSeparator]1,2,2\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]1,2,2\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1:eJwUV3c81e8Xt5JUilSSVEZfSiopIc6x9yarKJuMey/XjjRIQ6hECpXM0lIZ
GWVk7733vPciJan4fX5/fV7n9Xye85zzPu/zfs6z387L2JGFiYnJbAMT0/+/
s9//6qo7/VR8VvZvbW1tDigvAo6rPm2F6B8Fdy8uz4H/RrrTrqejkHHZoX1t
eA5kVPfkRpPp8MuM51520RwEFacxsT1dhJu8FfFzt+egp0cxHSKXgc7pvFRr
NAdyvzr0gsj/gFf5Sno61xz8e3hV73cKK0r51doZBDFAIq1x387t7Cjz5daf
0aMMOJu7+4d0JAdWTl0zq5umw+2vzt+M/3Gi8t2GHx8z6PC56f0jEnkzGvPt
QS4SHWgDax5R41swN3HP7TElOkQtvdjXIcGNRSLlx8f20iHtnw7nuBMPCnZ1
FitvpEMx2/fFxZRtaC9acy6fjQ4dG+P7WXp5cdnyVk/oJjoweBS/cW/fgYdF
l5N1hOjAzj/2Zp/BThxYnL1vpEYHwf03Hx2J5EO/QxoZOj50OCl29Jpi2S6s
3uUxHvaKDvpHOjz0/vHjtiWeo50MOlxSEFK6SN6DHQPhfF2hDLivWnUwMFsQ
rybvFVquZsBLHU/eyPG9aHPZ192Eew7sxDnXau/uQ/rUSTFekzlgSPR7t0rs
x0H390X3CHwDj76Z6qnej3NFF+v8C+eAXfrquREnIbxWaj7d0j8HsTJnWqZZ
hbFXe0ZN6vscCMqLayykCCP1VEZR/q85yFL8W7isIIJJ664tizPm4KRy41Gm
XhEM491dM9Y+B1/Vnr1Y7y+KUTynrk+9ngN9LSr/lu0H8OfEv9iyS0R9dTXv
7nh3ABM8eyXClObAyXA3m6DBfzhTsCcm+h8DQsy/0CUixfBCh19quisDOK3v
20kfEMd4fhEev70MiLNx7pQvE8eMPo7fM110ELKT01U5fxA5Ja4qZMTTIcdx
8xftfwexZ+Vc4qYLdJBzHTph/OgQUrsVF/il6VDp/j7LUkYCuW9lFV/cRgdj
UvjeC20SaPDFuGI/Ex36vS3vu5APo9u6iNiRFRq4+ElsIHFJ4ny2WUYLKx1+
BK5d8suWRO+L/tIP+OlwOaTle4jmETR/f5bLQJEOm668cA4fP4Jf7Zz+vPSg
Q53yaYa60lFsfiFjTk+jQ2z5i4yau0dxp8mSOn2S4EOV/54WiWOozntaXdiP
AWNaI51mQcdw+31acGcJA7JqdWK7q4+h8TrToMB1c0DS+6B7jk8KI810k1XV
CPwbBdcPO0lht9sP2ZTgOfhreOOLwwcpdFeSKFTPJOrRshA0xXocr/bk37au
noMbptYn3Y2PY8vQ4ckrvUR9Osrn51KOI01EkGtxYA5CB89Zci0dx5e35j/0
Nc/Bm6mlLxI60jh4y+Xs8Ps5GFq4e1AnRRprNthe9wifA+4/Yvdcf0pjXv9t
uZc6c6DM9vVPhPYJ/Dd5+YYzO6EHm60d0pJPYFeG8PHhfAa07b1zYlTrJM5b
meOFXQxYJ34giTn5JNKbnkdl1xH9IFXCvu/HSaRtq6oaC6eDk7yFl6KWDJ71
HuDg0qHDQ9WFzrNJMpht4GH0cjcdqvRuYtCiDK7c1w59S9Rr+YxwZoLmKaQn
UUXdp2kgfv4zd96TU0iWOX8+ZIoGVq5mgR3fT2FnGNWo5xcNblEYIz80ZJHe
2/2nbAehD0EROtueyKLjs9M7ulQIfbi2L/fYd1m8wGuHfJfosCcqX8BQQw6b
n53+97eE6NeHxtc9H8vhG6py4+0NBH9TZum3F+SQ9kSo3/8MA15nXjuTrS6P
l7pq5hSfM2Do3Z6S6kR53Hg9z8KQxgDuzx//m5qXRz0ewT/ykgR+FQbR7Oqn
seZLiEO34xx4N0wtiySeRu197zMo0XOQ2hl2QWX+NCp+STGYyZ6D9iH+mgtq
Cmj6b29Sz0ein2feS11+pICFe3c8yHpD8GNRNzFpTgF97ok/epgwB85/x1mL
VBWR20695h1lDuLXhbr3Jijik5wLTC0Kc1DFxdf+m6GISr07XlKJfvy9860C
nypgW7lZUWouAw7u1047mQBY1rLq+9WJAdYHR7nMGICfoz0FL+xkQOWu4sL8
/Yi1OwyCeGvoYJPEOa+pi/g1dzZb/Qqh+0LmIl2+iIcXr+ZyE/hGpz+3cH6K
OMy5497eLXQQk5i/vVSL6FOfJRdD1Kv0zekv15cQK96PRdCaaGBxIvIn734l
lJOyu7m1mgbz+e3iqTpK2HvknvfRZhpEKgrZHPdVQk43R702Yr9QmWfs1xQl
lKIW3B3gokOBRmGlUa0SKqzPjY4j9N64bv2foZ9K2LJ/+u2nEDrMGpoeIe1T
xkd3X+wKL6PDtfYU+zVtZbRMX3w6tYkBAlb0h1FUZVw58SM5wpwBuQOydXtS
lDFf2NZgPpkBuvbhTK9qlNH7sRzX5xGinydbpE//VCbw9RnNF5iDS+57XWv3
qqDKNEbvJPplx8LFJ1baKijMMjsfcXEOcqh5zdM+Kvj9qt6CPdHP6its7AHJ
Kpj5kPtlGWEPhBjJcdSooPFgwqE77nPgy5rk+fCHCobdEs/31Z2DLTdmnh3Y
q4pZl7eo/NszBxmbZDo/aKmiQXfzCYNRolAxVzeq+ajiTmynHCbi/TawQ5Hl
sSqyi9uotloyQF8ii1RSpoqGpyjrq7gZ0BGg8Dx4VhXv/RTeN15Nh3Pfmtpl
t6lhlsCizc9rdBjjdeD4JaeGxVvllOKJ+83d7pdcrp0a0vFMtRiB9+Lrmx7k
m2q4+HH0dcYQDQL/7UmRfKeG9wsvyb4ppgGzztuW2W415P3lX2CXSYMb8arr
MpnV0XrXi0znpzTYOtEp4ySujrs55d5PptHg4fGLbsJG6mg5cd79Tj4NBMNW
Hw/5q6P6E2HTyC4apDXEND5JUUee8Qh6PAsdDguIslhXqWNV//zw1pN0yHXN
k+abV0c1ViXpGeL+l/+k49y+UwP5G8kJLW/o8JVtMCEWNLDiXPoOXKSDtjGl
zsBZA5tVriZEnGBAc/K6tU13NXB7i8SRJR8GWNDjj9V81MAGPwVJWg7R33IS
DhEDGvj4gJDu7yEGON8oiVNl18SKVjvNZQ7iPm43rmaW1ERVk1PJYqJzQBWe
+FNspokFMvRUVWlCv0kBksGXNHEsuMA/9sQcXCvedEH2hSYmFhSqMMTmYOOm
lHtLdZrY/tWBs56Yh2Itj1e+/6GJh/L3ZspMMYA/vXKZJKCFG9KZDxd/ZMDT
H5aHJFW18IrYX1OHYAaIKdPPzV7Uwj9vBW7dkCf06e7l6Ix7Wqgg/WHdtyVC
f/u3lTkWamHo89/zPQQexQfTfwqNauF/t/56hrrTQc1fTmyIUxtvam3XMJYg
7reKeqsnUtoou1P1ef53Gphuu3DHykobfy7GN9R/oUHv+R8lO69oo4CxWZhG
Ig3sciK+t2VqY5avygjlMg2m//CLxjZro6t1J+9/FBqQtHLMDX5r4zcTyo8v
JELP45Rubtqvg58PRYf9F0yD0LG2z9WaOviWdKum/B4N2KVc5sJJOig6UN76
4CMNokL/7FeN18FHF79qS47SYHt9lClzqQ7yz99nqthJh8f8QhHFkzqYRd10
UtmYDsIuH/KDtuji11WDb4bRdMj6oEk7JaOLHwoPHaE00kGKtU9wyUYXc+gc
kts3MyDf0MvofbguSpY8zs5RJ/opieUaKUcXv43301sDGFA1++Dj4Q5djCzI
4DFLZYCBrPj0zD9dzC2u8T9TTvRT+OfdGaJ6uN39foxzFwNs2gz0HfX0cKnp
zJ0HgwwY3z96WYiqhx3z9n7+3Qxw9/J9P/hYD3cam6bKVjLgx+cNE4/L9bAx
LL4lNo0BQZxP+KxoenguSPhVBTEPs1gc1dnJq493z62Tu63BgJsvyi61yeuj
TssFPVZCv7gXz7yJsdfH+usnnKJrifnj3H7TiJv6KLFa8nz7TTpIfJv9FfxW
H720Vz82axLz07GPiZQufeSRvSh+hJMOmomXwWVNH41KlgwohB6fWaczeu6A
AT5pjlt6/oQG9l7bI0z0DHD4nFdtqDdRz+7Bg1o+BkhisfruZEKDEJWsBsVE
A3x1UO7dGUUa3H7lQ5H+aoCr/aNrI9I0SNgJOw5OG2DbFr0IaRkatJay9W/h
MESduxXfNqjRoOfndM7N3YbIqUEdKThHg+GDjZfXHTHE89vyWoHg05RtrvFl
ZUOU8kyYO5VNg7n7CSJ/zAzxrvqGuN99NFiqDlmiuhqiC9+A6ANi/vu3al81
H2yIZ9ao6gxdOrBJaz26GG2Ipl76F6uI+YPTVdJ94rkhfmfVcegtpgN30jbF
C58MsecRU8LUdzrwtS5v6asxxMlNbVrN+xggyDEwfGbAEKfuGCy8JPghqlD2
vnnBEDf/0c0csCPeK5SM67rrjFC3+7GpGKEfx9PvmH/jM0LLUg6NAoI/cn0U
cWUJI1x8Y6ai6M0AJW6LP5/BCH/SpEf6zjNAU12hXsbECF3XOb8/rULwK0go
+Z2TEZb/690atJsBZ96sJx8ONEIL34ZlwVk6nB2nKWfcMUIzrbJP7Ll0sOdv
4RV+aoQtocejjfzp4GbwaeJJrhF+/aXRrC5HB9K1x3l8VUYYHb6PJv+XBn75
YTfv9Rph82Lu5qBSon4Mp7Ncc0Z4yHpb3KFIGlwX1pWMZDHGVochfwULop4W
x5jYdhij6yYTBYsjNLh3Z0dLiLgxdt94u7FhCw0eff3z/PdpY+T6d6M0dmUW
nv4aovoYEnbcvbqT87OQIVGpMWdvjIcndELHCTvnQvYuNz9jPDp9SNvp7yx8
iIueHbtpjBU7qmP28dDgcy21yDbJGNOjX+XvP0aDr0zWd3veGqNIWIOMKBFP
9Qm8YFZhjMXH/j5Kuk6DJjfR401dxvitozei4hMNOpM51+nQjLGG1F/2nEaD
gba5joo1Y8zJkJMVJd5v4xvaM3CbCXIPi3eJnyHmQcWCwMIDJvghL4YjgeDH
oney7kk5E+RlKAn5vqXDSsY1wbd6Jjhx87TIzzY6MA24zh+6YIIbrYZfRs3R
Yf02g69pPiaYoPWCi4eJAVya0vf33zDB+w/GDHLXMYD30i6nx4km2KfNtMJP
rO9+tyqz87UJJu76XXWB2C80Oboh9qsJdnqQb/AT/sUFqns3dZhg3pdQFo3X
dDhqlPMqYtoEG+dN5fSIeUsm/F4oyz8TXNhjkDKhTwfFQn+jS1tNMWaXsdFG
Qg/3tUw3JImaYtwBl6sjncR9PG2lWypnihtJIgfK4mkwslZbPWxgihwJUOF4
lgblOxQ0WB1N0dRMeo+xKHHfHs4pFwk0xZDE8vSvP2chQnWvsvpdUxTPGxOM
apwFF+voEudUU+TnuWe6M3cWtCnMCpH5prg34MVJldRZkIikFGQ1mKKc8xEd
n5RZ2JwyKlM3aopCcVce3MqYBcZH0w/0ZeL8sawoeuEsNNVXSG3hMsND3QmO
N7tn4d3YyTdHhc1wC6+e+PTaLNz7k37Y+JQZys07PDhxmAY+PLuyvfXMsDD/
/LihLaFX4jfFHtiZoaoakseJ+8PrYeLay9wzyP0k7fWWHTQwzNl0qaH6DG48
vU6QMTgLUhWXVuYGzmCDQ81S2utZ4O1j+HH/OIMPHit17ImYhaXvtj+lNpjj
Yc0QyWbnWeja0EwxFTTHWvdK/wbjWcjfpzxPPW6OJSovjr7UnIVHMu89Hmqa
47LCnu4bWrMQrC8ym3fOHBdmmo5wmc2CjeMDlx6KOcr7sT3xc5sFCGaf+BNh
jtrPPzUn3piFfff87Pc8Mccqk0Mfl1/NAkvW1JDiO3Ns2Cfj+qVrFsZKLW3O
fzPHv3c3hDDYaVDRWdMb1meOx9feJhieJOrFkLd8vmCObx1d0144EPPWulcd
5ewWmA0ndr25SwM3AUHTid0WKJAeXGzwgQY6x+82rz9mgXKkH8cSW2kgoc1k
IK5ugT3ODYXLxHzNdYFcp21tgXP3FNaf+EHM434jWu4kCzynqWDygLCbo0y+
3blugSdpFj2jxHvs3Yty1dePLDDKg8JNbaPB/c8nvja9tsC7UxLdIsR5vq1p
8L3cAg+6BkXp3KGB+czOom09Frgoab0x24YGp5gj5U7MWSDn5VJzs0M04Odb
+XSGzRKVtiLfXYJ/fyUvnvDfZYmhkh+HX5fMQr9a37sESUvsSa2qZLk9C8Vn
9Y4WqlhiekDZ4cyzs5DiXfyqz8ISraIiNlw5Pgu/GcYHH7hbohPtuP1m3lkw
dptM07tsibTy3Lcaf2cgezxImP2+Jbo4l31ops0A24WtKcXplvjb4Qr37/EZ
ONeXKuBXaIk6WadF8idn4KO5bMKRRkucuxxoXbwwA1ta67dPjVjiVGwc+SIr
0R/6drEpS5ZI/vpMYGj3LHypXuKy5LRCbbOGH0xys8CvdusWt6AVZmXmBl4m
4q2Tz712Rc0Kee8we2US/SH6SZNZ3tIK8eKs6V6i30Kk+i8tulvhKz311PTF
Weh8RV7JvmyFY5SB2y95aXBUnN3P4b4VMr+LS/5wlHgvpT5aFMiwwvzKkhI/
daLf9x4htRdaYcMLD/MxUxrIJ5bR7jRaYQ73w46T1kS9dli4qo9aIaWx23+N
0Fd6DG18dckK9VyZbA7q00B9c5jdJ05r7LR1OcoiT4PkG9sHvQSt8XLn4PDh
fcQ8x5plLSZljXxpYk6Zq7NgFKrYNaRmjT3XPV7kd85C1kqLaYKlNTo9TA/q
ezkLZxf+6HGGWWPOqaD//hgR+u8eXfP1vjVymvA22IjOAteUiEZQhjXeChG9
GPxnBpzs88uOf7ZG35yyrG/tM1AyoIe0RmscfGO9L+TDDAxo9bf8UbfBec2l
67+OzICjTiDdrvEC0r+4rA/mmoZ9Sl1PhrovYMm0gfb+3dPQd/Kkvs3YBfww
8tnG7uA0PJS4v9rLuIDXz3aeM5OfBmOh7zmWvy9gsNXRb6x608DFZ2jbyWqH
bHI+sWSbaajenLPFjMsO2d/x3031nIZrrJtKW/js8K/mlMnL4GnA364kQ2E7
LK8b/5cVMQ1/Gd/2NRy2wwadusKBqGn4NCbarHPKDo21m8uzY6aB0nM1rFrZ
DjPV9+1OuzsNkk3DxzT07FBe6vR8wo1pmKmAkXJzO5zhY8uMIfy/KHwSq2xn
hxWcXM+6Lk7D+bd/lEvd7TDBJ7bn95lpEEi3XFTws0OP4/8ECxSnoevxp+eF
YXYY5DT0abPINNyL3W4qe9sOO08bCXByTIP+DW+2T3F2uC6n+nvb7BRwhjTn
Sj+1Q4sp+4qYpimo9D7i+C7bDgVrujcafpqCMNc7249+tMOxkVP7/6RMwWnb
2YpXpcT/r7fc1ouagmVTLd9DtXa4fUo9pyp0CnK10w9kttth0XkmkbfUKfDC
dZ0HhuzQK9/oxRbSFBw8aR+ROkOsr/PI++A5BROHvsgI/bTDC1bce9XIU/B0
/96p5DU7TMrVZpb1m4KzOy/F7+G0R99/2iFzhH++zb2aibz2KHzXPefdzSlo
ZZH9zbfXHk/tKr9dGjcFUctxmXHi9hi1dfcjo+dToM34YckrbY/OI3UBSa+n
YN2YMWesoj3mz54eHSuYgtLuNwVbtOwx3s3honv5FAQ3cl28Y2KP/0TW596q
nQKZCvfdG23skbXysXFO4xR8L6ipveFij7ThlOvWBF45b8SC2b3tcdk0EBTq
p8AtLVzi2iV7PHHk+PiByikQfTzWx3zDHsnHVth2F07BUIzyndBYexSa5GI1
eDkFjyNSFP49tke17SE9hx5NgcWlVXpgOhFvdZWCzvUp2OZ9Nmn5rT2KHnmd
RSLwumnDt7ZYaY/W3BbtropToG7q+5rcbI/ZI79K/vtvCpi122zneu2J+++l
YAr3FHwGqa0eE/boxOZb83h1EvxPRJfOzBP47bx4vIgxCdKHGCSXP8T/zODk
MTIJc/t090+sc8Ci731Xh7snIWtHVrP9VgdcWV/Qvr19Epw2cVwZ5nfA4BXT
ra2tkyDE4iRlK+qAKkzrt34k1vt/lY30HXHAD6cZhbI9kxBP33/PSs4B94e9
/vBlaBJMR0NVulQdUHaRKTN1ahK2dPcvmhk44JWMV7onFiahpkE+tdXSAb87
hT2p/j0J4eUJpkYODkj65Xa0lHkKlAp+sTV6OqDpBr/OqxxTcMpuUjre3wHb
/oxUamyegqOcnQ4XrjigX2B306GtU/Dfu8r7B2874C67muIBwha0+li++MAB
tXbO/tu7ZQq2s6T9+JzsgA0S+pJfOadgU9YDkfBMB+RcVefMYZ0CVuPrpgbv
HZA63mgzTsSz8tvnGl+RAxaCb/J1+iQsPHXIHa50wNMfL9ypHpiEKS3Tsawm
B+T7yey2oWEShhZUeH16HHDn1otq+YWT0JlwXFVhzAEvzZaLOGZMQoOSsA87
wwETje7+zro/CZXTPKmNvxzw/lJrmlTYJBTFsLTFMzsiR+Tje6mek5Ar+53V
bqMjakpM30w+NwnZw8PHD213REnKw285+pPwLLLZ/oegI7ZedtqhpDwJCce+
3CsSc0Q2kbsTT09NQnT3m7JwKUfcYXD4+49jkxARlrJocNoReTcUDUtLTkKI
eLTwLnVHdE4gr0gfngTf5lCTEQNHbHabinlBrHsEeF3NtnTEnf+NfeCXmgSH
/bbvfewdUWZ9tBqvzCScrdYfVfBwxDdxK4/ZFSbBhKy4bb2fI3Yd7flhpzIJ
2rskVZouO+L4HsGvSVqToPRlj3fCTUcsYwl9KGswCadcNz+3u++ImWoPDL6Y
TMIR7n8th5IcsYH2/WbbmUk4kE9j+ZnuiPQo+yphi0nYc6FPqvitI1q06l4n
m08C74Y6u4hCRzz08+F4jOkkbHxbGGtY4YiUA7oWboR/Fsvsr7saHTE3dChy
QWMSfjMlfh/pcsSoYtv2I4qTMJ9xU+jlCIFf2HVxJPKbMgw0ptIcsf+8oqiR
yCQMLrteUVxyRLWdHuvTeCehI8Xy3XomJ7xc+mcpjpWop6bWSNMGJ9R3LToQ
vTABFfOneB5tc8ITS4UeWwYn4HO8mLL9HicUEDfekVI3Ae+RjyLxnxPGNMj3
txVMQNbU+mc/jzrhb5mzdpg1AU+jfzUXyznh67zSSPfECYg/Ncl8Q9UJXdwZ
Ic1RE3B3qOOYkb4TpkmVHK2/NgHhNyov8Fs4Yb3jfyKPL01AyNGPMaMXnHDz
bjNn04AJoHa9+PLyohMOdrxTGPWbAPfLDxaoVCeUvfavfTOx7iB2fT+EOiG5
x5qdGjwB1k0+RhyRTni9bORjYtgEGPs7hDXHOmFY1wbLuYgJ0Npn+vbRYydU
Wad/+//xYJXKsH2aE7ZWdjA9ezABMqTj3IffOOF2nonX34j4JfmElZbynZA/
mZGelzIBoqU85JIyAi+zd5NrzydAwIXl6Y16J2x32sql9GICeLd+bzLqdMJr
iQZzsqkTsDFvmGn3sBNOVvy+8JXYP2/4MPzTrBN+2hmfJfFoAtqmdTeZLjmh
Q6ybzpvoCci7whI7z+SMN/0u76IQ+DzZnbfzzkZnZEtg2/iaOgFXcj2eiO9w
xuOvspbzHSbASU9YuHKfM0bAYeUVowk4EholuXbCGQ/ceLZxlzgRD59qbiI6
43PfrdZCvBOw/Oa37CkdZ6zSZst6szYOfVqvS9rMnHGR6Y2QD20cvow4qJHP
O+PPFO33/L3jkBbEX7v5ojMW3rl2X61uHG7yNhlmUZ0xJK4l4VLpOHi+ut6h
ftkZy+NkPf/LGwcTdfmzozedMUHshlDA+3E4NTg/HPrAGdWESiiUd+Mg4J/m
LJDijFsL3U92544DE/dZel6WMx7+/OahXME4jGdye5t9cMaZ+C+qC1/GoUb5
2/JCiTP2ruSfPFo7Djm9wSFRNc4Y/gw2cLePQ6yPFNuhdmfsfLXFO3VgHPw2
T0V+G3RGu9sPVlgmx+Fs2pMtDjPOeD/ph/RZ+jggmDxg+umMXwdzhFkXxkGk
i2P3kzVnVApY/uZL2BvIxSmynC7I7L7e14kxDowNPgc6eF3w75goxzvCX8sz
8ZeUvS7Yv3y/xal/HD7KDx7bctAFjfZZWBc0jkNi2/1P2dIuaL5tnJ2tZBwu
e2graIILirsF5nzMHgcHdqayMS0X9OUYrbCKG4fDpy427LF1Qe0D8wXTzuPA
07zPtMDVBUn2n4MPGY7DkmtH9xkfF/zmtzS6TnYcelhu2y6GuGDGt5tyUsLj
UJKoNH430gVX1ra4O20Zh1TpX24S911Qq4QjWm91DG7Uv5yvSnLBgxaC+SHz
Y+DuZOfrmOmCi3HeIZSJMTBa2/mXOdeFmM9kSf5DY3Ayvj4sqdgFJ3dsTH41
MAb8x66ul692waUdpGs/ifXV6lN3OlsJ2yAncYnYP2rH4PEZcEExt/cPdxP+
q/48j9867YLpzE+7Ev6Mwcv7loKvFl0wGDTKgznGIfrwllStVResOlvN92H7
OFAry8UnOFyx+hzb8EGhcbCyDXx9ZZsr8nT+NWiSGAfF5SMn9gq6YvRb2afv
pcdBKGa8oFDMFUfUF/m4CDzWH0xEi+OuuD00Y16fsGlfDSt/KLjiZh4Bv/0n
xqHJml03RtMV331cOOtJ+Mv9Udh82MQV/VY/ZVrsHYeEO2TzmnOueERhRUSG
axxCDvzX7+TiijfOXP186/cY2JX02bF6u+KkfsfeleExULeInUq+5IoaMnMv
FKvG4NCChufpG65IodyROPBqDOTy+UsVWNxx/suA3WLdCATXvh5e3OiORw67
RsS/GoHiflXWrO3ueKqipt4oegSY5rtFzu91x+h58e5Z6ggosXip7xB3xzOl
oS/32I7AFV42lzopd1xVUPl1VXcEyg8kRF457Y4dlW+PPFYcAXZZyexT6u5Y
I6YRXHJiBDR1yuoYBu5o1ExL2iM1AjfPWTBSLd1RtOqlYt7xEajzom+xtnfH
/Ym79trKjQDXlSvHuD3cceaZ2swrtREwvL/T5JuvOx72aj22yWwEYtNe+ly6
7I62gctH3ziPQFueUtzxm+4YZXX0RWrwCJj3X+xOfuKODIrZyQ2ZIxA/x/TH
LN0da0tGGNuKR6CHOU5g01t3LKlQHv/SNAICvIcUvxa4Y94u72e/B0fA5kCp
rX+5O26R/I/l28wIpJwyC5NscMei1dJ25/kRGNGeeTbW6Y66TNQgM8IWORda
/mjYHQ2bcku1if+dvHgnDGfdUf2UQbnawAhkhGWuX//THYvPG8xdJ/Cfuaco
XrTqjhVeSr7hH0ZAIq1V25vDA/drvt+9lDACHnku7uI8HuhocGDXq8ARyKn5
d2dwtwc25yrzPrMYgfm+2NcPRD1w4GkCy6D0CPgwF31nlvXAzM/tqkG0Yfi4
zZg3T9kD3z/YI71UPQzLopMnPHU98E3P4sHhzGGQOxVsLnLGA6vaPorsuzMM
wdrcAT22HijJvFUg2GcYis+mPYp29UClmH98SeeHgclL/rO6twc+1Rmw5jQe
BuWwpv6/wR6Yq5J6a7fWMFy957j2LtwDyYUkzlW1YSh/sbLPNZrwJyPxJVtz
GNjz7irvfeSBQvGiHVOGw6BZI+LQ/twD5U7IzyjZDMPNvvzrt1554IKvcvAm
0jDUMfTTlT55IP8h9jXX68PAxTxW9avUA8taRpn0nwxDrCjXJoc2D/xecFmm
vnEY2mSeH+Yf8MDSl0z6dZPDsEP7lEHTpAd6Bbklnvo3DBZn60nhCx4oXPHV
up9rBBI87WJP//FAfxH9na92E3y4/Ov9dzZPnEkqu9MoRPDh3u32DC5PbPr3
68FLYYIPL/b/suHzxGApA/HFPQQfPn3k2y7kic8HKyUfcxN8qNaRqz3kibB3
fG1qdRhE+oasw0544i/Zz2w2E8PgxKBekgFPXArK3lFQNQwZTBuT6ZqeOKJf
FzObNgwzPCmlz4098YHPyHa2K8MgIXpixPKsJ7qb0MYOWQ/Day1b0UovT9wv
ysjw3jQMA7oFjw0CPXHZRmG8a3QIuAy383Zf80SpmEdCV4uHQMGEdMvuric+
21j3LufJELifqWWhJXgif+TQrNuVIUi0PBBITfXEc7n6yrEeQ1BzNmxhNccT
JQy1DpTZDsFv2z6XG/meuGup/Kyl5RCI2csMcZd7Ivu6B0POVkNg7hRrntjg
iRfSisfe2w1BuCu9QaTbEx0+xRe/JQ/BR3dN9ZxRTxQvLFy+Fj4E417Pi2QY
RL4Be5LYUoaA13tV+suyJ/KdrT9a/nkIVH0tX2qzeqGqhHTZ/t4h8A7IFW7b
7IU284krFr+H4FnwlsRzfF4YzDN+4tH2YWgOdeOZFPLCsi3qICJJ8PNqRSTp
sBf+vXHLw0ZpGI6E72NekfHCcfq9/Qt6w2ATGeR/VdkL7V0kAnoI/t653TG3
Sc8LX7pcv3bJYBg+3z3mHGfuhb/cTQOzVIaBFnt7YK+dF/Zu49NKPjIMu+Mm
zTLdvTBgeYM4M+8waCco10v5eWGh7gmepoUhCHz8RPVzmBe2UrnTzGqGIDN5
uVDtthd6y4Eed/IQdD0zOd4Y54We4aqSzwl81qflZFk89cLpbWbLn1SG4GTm
BqGRbC+UNiqPXtoxBI4vHRIufvRCJ63jYUPdg3D/dcnWn6VeyD7gMnwgahDK
3vHfCKn1wiaHU1eV9Abh+wfq2voOL4xPGjBW3TUIQvlNvjFDXtiQyvm+cnEA
jD4fYvDPeuG5aj+Wjv4BuFwS7pj60wuXHBQ9pjsHwGKYxNjBRELZZ7bhncMD
MG8nmGW9joTSecfvN64MQMRYrWMKJwk5XRxczfcPgqBTwP7xLSQc1w2bNjAZ
hI+TB/rFt5Mwv2u9IAsRn75rW7wnPwlPH3khfrJhECZmwkzf7yUhk8BV74Mc
QxDifmTrsggJrRtEzmmJDcF2Rl/t6YMk5HblKI5WG4KXXjcjwo6QsLL0ufhx
G4IfCzIqldIktHrAKHlIGoI+yvgqpxwJSb0P6ilBBF9+xBYYAAlXfi4ldF8a
Ak5f9L2vSkJqf8migR/Bn1/0Y91axPl2MVYNzkMgF5BI32NAQvszUqRSgyFo
XtHMtDMl4dBmH/m/R4bAJXjJId2ShNFf1/14t2EImFaf76PZkPC3flt/wedB
iA816jvqQMLvF7rP6NoOwhHmtYdUVxJyfM1OfrE6AJVXXpoUeJJwXuqB/bmk
AbBhs9qy5k3Cc1H3RxhKA7B0fX2tSgAJM7utfsfT+iFq/YfwGyEkLDwQLany
tB8ORNop118loenmp2vOdv1QxLl1lTuShOWWJlqsUv1AcQwP+HuHhGXJGQuH
tvWDWOnfHxOxBH5Mcr/6Wfqhn9+b1PyQhAlWzLsNmPshljo9W/iYhDH8ktXH
ufpBs8nWOe0pCX/U+5YWivXDv4MdI9FpJBT3cOCKNeiHd9d1bYKySWj77MnN
4cv94DL0tdvxDQmz+/1nbQr6QVBe1szwAwnZApOVLH/3Q+uD101yBSTsnmk7
2Sw3ADfmRXVFS0g4ExFXGBc0AIo6j79tKSfh383b5i/mDcCPFzwqK1Uk/PT2
e+QhxgBkMkUWj9UT+IzeMpsn+GtjvSbb2EJCoYPaPPKyg8D7kfohv5OE7alX
O7ZpD0LNVtrR1D4S3nxm6CiiMwihF+1eRg2T0LDT36NafhCkK7v+C5ggoW4j
LWSXwCDM7DN4bj9LQju4qTVMG4CUoApB/XkSjjZOFT94PQBmHfKPTv0kocET
zWIFpwHgPPZuu/AKCf2XX5012zYApbfEYjavkfB1aozSq/x+8J1I2rTMSsbT
PGOPNM/2wyGl7TdGOMhYdo08Lb/aB0OJt1jrN5MxwOycW9SzPohbYg79xEPG
BRl+lb26faBr5L/ydCcZszLVR6P+9QLzSwb1tgCxrhv8SCK/Fz6yOy747ifj
WGPS7OTlXnC/0Ot+4QAZeaQ0OlTP9ILQZ6MpnUNkHJA+7WAs1wudO6rsTx4l
Y/e6CyvPDvfCbbLi4L4TZMz0u6mmfrQXlOtyrTbKEf54z7JXKPXC8oFDHT8V
yeje0u+490IvvAp7ajSkQkbW1YivDbd7wa5vZ32NJhkXN5qL1H3tBT6ZKM0P
esT5m9VdHjP1QUMMW3myMRmP7a3Ls1Ppg6u0QLhpTkZK6dNHvyP64JTGQoHP
WTLu8iHt46ntA8ZT55O2F8hoEbRbwGJDPzz/2/9Wy4mML683khKgHyzMTQ9L
XyQjy+iBnQy3fuB6V5MhSCJj5HPnzQM3+qFsk5LIBioZs226PK887Ad/50/J
iwFkdPJ88DfpQT9Ifj28eyCEjHHRRXzvrvTDqEBqXNVVMu7R+G//ik0/xPvx
87y/QUb7rPNjXof6Qb8l+s6TO8T6V9nZj9N9wHp4/YYbsWQ8fvbzoXWP+yAv
4tI1ykMyvh/jOcem1geeI4trZx8T8epsDX492QsiCm5BGk/JaLeouOtIRC90
PxxaOpZGxkuvLN59PNALUd/PUASyyXgxy3rBoboHVPXq6exvyIh303jEKD2w
kq7iupBLRsWWwfE04R54zVIw1ptPxiCHfyaSQ93gcO7o+cpiIl+pvolnmd3A
n5fW+6aMjEnr7sZRw7pBfSMTy7pqMlqGCjKddu4Gio2lmGUDmZhfDhjcsu2G
pLfv9F+1kvH3HjHtY27dUMO2icrcTcbAO7tvnA7vhiVzx0SzATLxPjsX+u9t
NwhlF3/JHCVjqFb2h82z3aC/unPq3xQZZcSNu20keyDIiMxlzCAj/PVONfHv
gYzUGum0RTL2pEmFjJb3QNsvYeuVZSI/Umj2ty29wKRzKUx/lYyf3gkUvjHt
BYmkjvRnrBT8PMIwDbvbCxYLRxqWOCgo0DSafPNzL1xTjfyhzUXBXTFvPMu7
euHNwxH+5G0UzLn8qeDvcC/0zcgrLfJRMD/1sfJKRy9wKD5w1hCk4Mb+5WN3
P/WCdAzjTqIwBY3qP+o/utYL58c0cufEKJhQvyX2JxD9IPO0R0WSgjLSd2PN
aD2Qd3OFKf44BY0LivbsudMDY/0m/9FOUZB0bkhN/EAPKFxj97mvQkFlMKt7
YtQNbp22j6Y0KZg2wimlQOuCuIP5paf1KWhaccNX+m4XfL3EMxltQkF6NEd9
o0IXMJoubh63oKDi8/nFppVO4BepOC5rQ8ETfgLx1lWdoO4naHXHnoL9euvU
J9M7gVLjd3nYhYKFRg16Jx51QtKe5rQTnhQc2VYxqpXcCTWkg/WR3hTsufFZ
0uVjJyyVXV3s96egi3f7sW0DnSC0s3+XVAgFXaWjeXl5u0Df7SSGX6Vg5tY1
2QizLggsuuvUc4OIP9NodSGpC9K2Tt+WjKKgd1ajqh2RT4u98vsr9yiofl7D
P162G9Y+JnZ3xFPQzmd8t9yVbpDg/Ll2MInAV5A7k/NrN1ic0z8Q+pyCHG8/
af73sxuuvUnXbc2gYJLboo4SXw+8YWX2/i+HgqEnQ2uaxXqg74xVQtB7Cp6k
ng1VEu0Bjqz3JY15FCTPanQwb+4B6X+bJoSLiXopsr6+T/D/vKHTJv8yCm76
Ly/6ytNuuP28RKquioIT9074gnE35C3xWe5rIPzlbrvGvNQFY1qUUJ9WCjr9
PBocFd0FW5/UvqjqomCx7aHTbAe64PS8SJ3AAAXfXBhsSynoBBeVkO+kUQou
Kf+pumPcCffjOvkqpiioIiDJ+m6hA75MH4VdDAr6c+uy3E7sAMbpm44eixQs
aKcZ85p0AH/06K0vyxS0ObVkns7fAeqjp99tX6WgprC8z8/FdqCcjOtyZfXG
j3/aa5YH2yEpcm61iMMbH2ZvTWAMtENNn6YoD5c3TvOp9JrMt8PSkWc6Ttu8
Cb2L0h7n6QChq3/IBXzeOByXoZ2q2gGD+UFpP/d4Y4z/imx6WAc8nv/Tc1TY
G5/tTDFK+NYBlv8Fb3EX80a3nYKPxnk6YYfNX5X0w95oQOevTLHthNb7wf4j
Ut54gKb19H1mJ0TX/n2555Q3/r19Um8TvRP0WC4NWyh4Y+F0gEGraBdwyv7b
fl/ZG71bmkWeGnbBN69L2o0a3miqK4xv3LrgWtq/EE49b6yoHfBYT+kCpf5L
79WMvXE54kthvGMXrG5bnbxs7o2jl1eVjNS6oFA7RODzWW/8YFAivYunC/zD
Vg1/XfDGee2yo+X1nSCdF3Jdytkba1x2WS0GdsICYzXfw90bdbhXrGkCnZAj
GsrIIHvjjFhIpMunDnA7uyY05uuNP9Iiv5zX74D/7oWa7w32RvGFEaee8XYY
q167ZRXmjdkX2UPzwtrhKdPl0gfh3mhzr07hnmg72Mgw/Wy65Y0PNpXNxrW1
wW7Py+KbYrzRUKgn2y2mDbpSmWw04oh8DqpQBW3a4EHv5dgrid6olsooFDzd
BsY8zN+KUrxxb+W+OxISbbBFK+zP8gtvfO8dwWwp2QZ1ocxHpbO9sX/32yRW
5TaI/Bjm4PWGiE/LPLHPsQ3U6cwJWR+88WWt5K+Zh23AKnKlfrzAG0dC7Woe
trdBqRULy/5Sb7R7XytbursdLsVcOXm2guBPX59Io1M7yFWxXHxY440nq01d
Bt+1w6/VK8ktjUS8JaVz43/aIfcEa9vmdm9skXf7PqzQAWT3qxxaPd7Y/iX9
71ZqB0g+Z1W4NkjEw3TeUjipA2a7r5JLxoj8XgTv8/jYARlb2dJWpr1R1Dj4
vy2fO8BR41rPiTlvnCqn7ubNIfgZwraF/MMbU0/3UkNvE/zMvaby8rc3Ktyr
+aBrQfBzls1/ctUbHR9Nb7DdRvBT6PpLITYfXK2NZ7IvbYcdluuGz23wwSOS
En6pdu1wt3Kddts2HxyKM+lmiWsD3X/XQ7bs8sEG9W3Htx5pAw5p9vfagj7o
retj0FPXChVu4ZPXhX1QjbTu7ASlFa48ZRf4IuaDthvmBrREWgG6wg3/HvZB
Xe5jD2JHW+Av1/rrMsd9UD5h1PvDuxbIV4vIp5zywYm3uTdY77WAb/B6xisF
HyT3nxQSvt4Cx99HCE0r++DF43fqNkW2wPz0enMRTR9MmBa/vzGpBV7tu3HL
Vs8HBVO2/lf6tQXczDlKHxn7IJ5hqf7vZwv8F3XjR7u5D6ZHp0GGVCuMlXOI
c5/zwfYP5ZuF/FvBRmpDbIQzcf7uz+fubGoDWWXjcBd3It/1sTm7DNqA1zgx
UIvsg9PeM3/v3moDxoUxz4O+PvjqTFHJYnEbVJMP228M8sFvqx4GiRNtkBrm
a04L9UET8Y8zRkztEBJTolN/zQc7tuAuKmc7WD7lwJxIH9zm+GbrRrZ2kH5r
JH03yge7436ZNdEI/n55JEa654OSbiQH+Yo2mGkaFTCK90F+jjAm36g2qBiS
4JZ64oN7jzwq0dVug5R56rptz3xwZe95kR1/WiGIqeT3YpoP7ksut7j3vBXO
bOVgtGX74GBO25869VbYePRRR9wHH8z7+FBO+GYLTMBojV+BDz4lBdF9jrZA
qYFEiUWJD26gLG96298MibbU97LlPijxuSLd6H4z+HoVp/NX+2DMymFT9zPN
YBS6/vGfeqIe3Ko/Xog2g8Rdw+i+FiLe5obsg6zNsD454VpRpw8mp37/L3Ou
CUZyRvyT+oh6hO71MpxtgqLiQx6hw0T89gKvG382QXyDz4XzEz4Y8nZrhzlX
M1AGisyUZn1QQGxEL/l4M+gx2LWF5n2wJ71Jbcq+GcRWDRRZf/rg5J9QJc4n
zcDClSA19tsH2Z6x5oX2NUPe4UO701ipKDDldHbergXuKfhsieCgoikTy+m6
5y3gqVfE6rKZivRHzG+WB1pA8xz7siYPFQMUHQduc7eCsIcBTXwnFROjryrS
T7XCanD8EKcAFUXdtlXQjFuh6/Zw2+w+KuZO6XRMn2uF948PVteJUrFq7/76
MYtWiHrpXfTqIBVlWVIko1RawfXz57dRR6j41sNVRUewFVTr1qV5SVNx/3n5
pKMzLSDYp//IUJaKWrO/fnzPaIHfsw+jjilS0bq/K7zxbAu0/Rm6wqNCxa07
4I8HRwvkbDzot6hB7L/0WqA4pxkcDn22/WBExZjB7rLyX00A8utM485Qceef
1bbwlCbg19HX9LOm4vODodPtBk3ww+rhaYvzVKwI7PkmwNEEjW5DR2UdqXg+
bltUVVwjZAWKi/K7UfHRqGhz1MlGuHaTsuuPJxX5DJ9Edi40gO2jws193lTs
tHQpW6luALksNpYifyp2Z5ZJWZU0wPYCvaUnl6jY+PRE04XmBpivjpsJuULF
J2nHaLdWG6C2e3DANoKKvSnN4y6qjZA2LdaKt6noGXJONTu5EcJ+k7/tj6Gi
hW9NiwB7E5zdUFjIEkfFV1d5WVKVm4BbXC+1PJmKmk/+bgovawK7YwEqW15Q
kWtI101gfTPkyr4YscyiomP1id+Kqs2wTrk5LPU1Fef9Dabs/JrhjPa/fXO5
VGI+O/XGmeBPhrF4qWwBFaUlk5cr3jfDbysz22slVJS/M/PiU14zaNuHrTaU
U/FFo56GWXYzPL746smuGiqaawhLpt1qBoZ392mHRirmhKlZpVg1AwSv68tp
oyJH2svnfPzNEH3tWNDvbiqe8GEdSK0j+uH2OX7VQaJ+2cyxFGoTSD+IzI8a
o+LlU+GndvA1wfUnHyy6p6n41zro2StSI3S8GP4lPEfFYkGPwz/fN4BYzuaH
nj+oOMZ28Nwx5gYI/Ch7Mv83FYsMnI3GbOqhttixnXWNisY/41fTWupA4FuM
jz6bLzI1su//d74OPBuLtiVs8MVLskdpspvroLRz+t0oly9eGfthS+6uBe6h
7caSvL64n71oiFJZC3ZTSgv+u3zRdd+KQk1rLeTOe0SXCfqi0cb78hVrtcD+
O+EIl4gveqbe1A/VqANz5soGC3Ff4v0rIriYVgcZG757PJf0xR+0ptltu+ph
hVtwM+O4L/5qV6lfeFgPuvzaL0/J+uL3ASfWWYEGeCLkq3NV0Rf5yI6naCkN
wDj4bKZexRe75XQZRQKNgMcbIvm0fPGbTGbA2chGiJVfEbPX98WDZJU1s6FG
GFU5UPXKxBfp5+8J83IR+OoaOy9b+GK5eOEZHYEmCDcNYVex8cVazlB3v11N
0HU268Ude1+cZwpz2r2uCcQdO1S7XHzx3ov3R6CkEQI9WMaEPH1RPHf69kPT
RqijSl718PbFE1lqRo4NDSAYYiWU5++La+/dIvdKNYBXePgXlhBfrCI1dciE
1wPPw4G1hzd8UZjRfnRwdx04JHMmj9zxxQad/qvFF2vhQ/pJxcP3fFHoQ13G
1LcaYH9j1+8X74v+Vx+oSZysAYu8qOCvT3yxJSlU366wGrJKC3Zvfu6L6c7O
ZbrW1fCnaqLAPIOIX++vwVW+atBt5rF69soXKTeyeS/+qIKkbsXftHe+aN/7
95jMXBXMD7vFy+QR/vu2rWOsrwalmTiZK0W+uKd0kwzldDXEfv/aUffVF59O
Tn25G1kNYysM6s4qX+S9YtnCNVsNJ1l3b7er90Vzwf6xRusaiNiokfuyxRcF
ls/zfG+vga5t3ia/On3RZnLT8jqTWjgokPxdqd8XF/AJu35dLQSJ1MbcHvHF
m57K3hvl66BO4tfRzklfdOKa3N8WXweCJ4Sb9tN90bReJHd2sA68FAy83L/7
ovMB8oOEjfUwIKjacPYXwQev1ohHfPWgzyR7WO+vL/LojdYc2lAPRcOHbysw
+2E2jevuWl8dSJQJzR5m98NAPf1p7gd18Dh1p7bgRj/cm2WUlXi8DjaGb8rk
2uqHEwrVpd8LayHQmZljjdcPE9f9TbWSqoUZzSWnuV1+mG4rUFSVWAOWB2cr
BgX90PVmdcLTf9VQtXFIpEnYD0/8SFb2OVcNp+htV0vF/NA2I+VaXmkVpDdU
j7w57IetBYKq9yWqYMebYqWnUn44sNmtIevFNwiPeZ8SI+OHdY2lOb+OfIOf
lIy1sNN+GNIxOZXbUAkOpk9sKEp+OPz8h4fOtUpoOxFbZKfuhxcrw7t0jCtB
ZWeEgImOH/7L8JT2kK2Ed8tBQSqGfqiV11l5l7CFekg9x8380FP2vPVXo0qI
KXSUFbHyQ/NeNlety5XA9MQqntfWDw+lx6ZkfK0EUojBLzYHPxyqFUp6vf0b
DNqqnvnp4oeOTluVb1G/gb6S7IdxDwIPr3rH/v5vUCwkydtB8UODb781+7Sq
4DCbsHelnx/ejd/tGJhbBY/Hd7Z8DPbDddeSrOIIfm76tulYepgfjmVdvXqM
XA1BGczRD8MJPB1r0rLyq2EmcokRccsPX6SGcP6mV4PVxVk9/2g/DPIMiRzl
rAHVhAiJa5L+6Lf818JW+BuU84Q8Y78egG6LTMaz5FKQbwou0LgZgJOh6Rqb
WUrh3Z2glht3A/BLye7l9B0lIKYTOFN9PwCjFN1ct4oWQzJHAMvGRwHoYP+3
7O2pIthR6cevmxyAUhY+v2StPsPtq75Sd1IDUEKQxKwWUwisSlTthswAnHp9
2nfXWAEErnrbbXkdgKOPSsqvmBfAQiEl0DA3AHNyNI5UMvLBJYAcG5MfgI/b
RZ9nZ+fD4ElSVktxAJIVP52LicqHMz88v24rD0Cm88dkr8blQ/1bjx7T6gDs
E/TlMfySD6oE+x80BKAMw52UuLEACiQucna2BmBRmUkhnVQAx2Zchfi6A7B6
UuJH+WwBZKS7yFkOBKCaxlaBl9RCEHR0Nn40GoBNd20Dbdd/hgdCTm69UwGo
ESg0ypLwGTYNOVwRYAQgbe+eFnehIrj6xP7RucUA5G0bsbuWWAQrVnbvkpYD
MODf/fU5f4uAzHehZvBfAL59sUEFoBim2m1H9rEGoqZ/ntrcuWKwvWezcoEj
ED2pbodkzYqhw/Acz/PNgch5eyTzmXAx6HKdPTjGE4hiFhY9g9VFUFZrpSzK
F4jMrlXJDdpFIBdpaeW0JxBJytcDNLM/wxt1C0q6UCA21kFPw0Ih/MdmfnPq
v0B8H1rVx3egEJK+mD0TPxyIuWT+vCjDAtgealrgJhWIltm8B78E5MPt0yYt
2TKBaL+hmTSdmQcsK0YztNOByDuS2Bs89QkCPhmySCoHIj4w5+yV/wTzPgb8
XhqBSE46+os/8yM4SelLvdENRG4NMeefxz9C/5yu9oIRka932uZvAx/A9JWO
nZR5IKbIPvz6LOsD1LppB3qfDcTpRLs5t4cfQFlMKzb3QiD+uSmdP/v8A+SN
a2T9dApEicr/TBbqP8CR5+pfT7oH4kk34TPmPB8h7bxajx85EJNW/2pu8/gI
AoKq3/N8A3F+vWeHYvdHuNerzLkSFIgOrkc3ixl9As4EJSH5MAIPTb2Xng2f
IOwMygWHB2JUVYSxlHYeLG8D46Jbgdic+uaCaVEeeDYruK1GB2KdzVxV3b58
GI86fQXiArFfX4i02TMfzurKP7qcGIiBwvoq7sn50LJB7t2XlEBkl09zuPEm
H7S+naphSQvEMYHpoJSkfCi99j+Gqzue6jcK0xDqRyRFaJDskoYi5xipSKQS
hawkI5KQcd173XtxCYmyt8zKquy99ybZs4GmZJTf/fN83vc95zzPec75fs/J
CdVMBr8Xs2ntVoVwUuXECiXbjfH/Gvvn0PZCeLV+jLvujRue4/nbnfa8AA6W
yklsKXZDp37lAvZNBRDtdlTlfIUbXljQbrS++Q52yMve8Kt1w7durNeGkt8C
ffGwY1OTGyZftHKZm30DLg7SiRd7GXqYPPQo3DUftm1ZfCQ3yLjvLy6+dSQP
4mNKLvOPuuGPjxsV9a/mwfFjFHHmKTe8lWG5rWskF5qaNJk/fnRDnQNfJt57
5YKx6Y73bfNuuE2at3NWPhd+Lg1mv/nhhmVeemrR7LngG5joG73khpUWaQO9
v3JA4KC1ifeaG9KEVGh1v3Mgp1hW3prZHfmf7OjaxJkL6rrLnJdZ3LE9xof9
uUIuDH6smD251R236Y78+/MoF+y9fMuFtrtjm1SXu1B9Lmzi1Xm+eac77tcx
lHXemwfhWbvs5/jc0byR7ex3Qh5UvX8hVCTsjoIRpz9wKueDnsO93/Fi7nik
6aTPt4h8+MJyos1H2h0P+2r4tM7kAzHmb8q9o+7oylK4c6vwG+A5Vut57aQ7
vjieahej8QbSmwKuKSq649nz1MOaN96AkulVaWFldzymdK55VvsNdC3t2cyu
7o5VtY9IXhJv4E7g5NA3DXecJee/sP+cD2simfn92u54Jc3m1Z0n+RBc7BhQ
dtUdyZ6iU5cP5MNB3dMWKQbuOFafZn4wIQ+KPjIrBhi7o9y7u4dTuPPgklfj
jgfm7ui+xYDG7ZELkzuffDGwcsesW9rbBydywDVLvxrt3PHHWFmo6sUc2Ka6
L+qQozveCBwwlSzNhoSdO0I3cHqgxMTownBhBmQll/Je4fFA4qqWaVtrOhTI
WUUk8XlgZzjLVB9zOlRXcQv8EvJAlnmOc4k30qDtcmmsmogHOl7YSuoYTIXB
sTv7w8Q9kCc/p+WkdypM23MnT8t44Gb/pUfyV1Lh278S0RPHPPCRet4qx4VU
WHt8J512ygM3+sxf4TFLhS2C3FL9Sh44E1GoPRWZCtxZJa8OqXmg9rVvbre/
poKQwh1Z1wseOLzp11IhI754E1d+wyUPLA/cCqL9aXDMoOQE31UP1Bss/vzP
KB3wo2XhXQMPPPjDYter2XTQdOFSLDL2wEqZgd4PNhmgx1JSxm7hgWnrn3Ir
xjPALMxS+eZdD6T+slmIx0ywE+Gqybznge795dfuEDPBNa9Yfe0BI1/WqdaL
kZlAUbFsvPjIAx94Juu4+mVCUOf2izEED4xXnewkaWZCpElx27y3B/YptivX
jGXAi6+3Lyv5eWBmzzWF+xczIIewvScw0APDTnaVGIWmQ8l/xXqjTz3wRNAD
n8cVadAQffv94QgPzBqg29IZ/HZLbjckxnqgm/bNrVFzL2CkqGikI8kDN90N
sPrO9AI+X7htuj/dA80idg9/2pcCiwOcU/dfeeAV49fz968mA5NVkWVVngem
p9F+piQkwbYli0/chR6Y0VKll7ktCXbTOG3NyzywSrlLvPp5IgjvLFrIq2bw
zyn50E81EWSSLe5vavTAa616dtqciXBajvPX1TbG+2ur3G7LCXC2qtA5pZvB
7yzXua71BNC5bLG8OOCBoUeO8BbsTQTDMQ4P9REPvFcwOy+nlwh37Av/PZv0
wLusIgMf4xLB8Z85afajB45vPp737U8iEB5zbJJf8MAYN/PPuYZJ4CdQSPP9
6YGfKgxy6muTIDTTnO39Hw/s+lhP/iOdDPGnOQLE/3ngS65leavAZMhsLOBw
2+iJwbSt/6ZHk+GtvvmTJlZPXL1KirHckwJVs//x7OHwxP18hLfPT6dAq3PB
M5sdnvjLZeCFm3wKDGw25yvZ7Ym/u1eOfeVKganQ/6K3CXmitlW1E39dMnwV
LhAyEvbEBedIngi9ZFjJNUt4KeaJykxCbY71ScCi8p/IP2lPvMD9qKRVKAm4
Ot+9uCTnibUCErQ7FokgYGImHifvicmPiBEz8Qkg9nVb1tcznmgSXf+cbzge
5AjvZFDVEyM61KTO7I8Hpf/McoLPeyLVZuR52cdY0IjedmxcyxPt2CLNp97F
wDXJd29lr3iig7HtrWPvosGkyPQUWd8T2awn7Gw/R4HthW0lXUaeqG8ZK3ZM
NwpcBt4qCZt74kBo9nTXXCTEowSJz8oT2ytbu6UKI6EpLaaa084TFRSuVaRm
RsLP7VwsLI6eGPP+dEZeRSQIPKKcX3P2RM2Z26MFvyLh7PgS/Ye7J/IUXJLd
pRYF9y7YtH4keuJi51X9PxlR8DxnhHOU6okPVlZNNh+Mhgo+Xd1euifWgfw0
z8to+ESqDW0O8sSoM2kNnxRjgPuzfH9lKIMPzfrTu1pjQFE3i68gwhMjM7XU
+a7Fwu2ivYavYj1xp5PbzbTmWAg88DQ2OYlR762N6mqH4qCAzjIemeaJf6e4
bD4Zx8H4j0fCT14y8ErFaX+wjgP2m/O3fXIZ/LyhfLY+Gwdy1SZpnu88MfCI
7lDMl1gwlOz5/KDEE8XsT3yIMYoF2tNz0taVDL38lnUdjY2B16tF9iZ1nhhe
c81v6U00DJjL5Oo1e6Lu7Ia/+7KiYENLwq+LHZ44Ee9s7BUQCVejfR+dGvRE
g8jbDoaK4eC5aa348Kgnzl37GS4q/Bxe2Nr/OzjlidyZMpb/9j2Djp4JFPjk
icUPF+Y3ngmDZUU9b+4FT0y3nOtrcA+FAymNtaw/PXEHjvEZjj6Fi/+dYV1f
8sRPf+9GRd55Cg8fZmssrnniV8Ei0VzupxA7LPz4CzMBS6+XVpYOh0D92eft
4ywENG+dm71VGwLfXrJzD2wl4K8L9mrKdSHAz0u42radgLfbuxVNGfdVCd+f
1ewkYOG9bHUZ1qdgO2PxvoifgHn7ro1Yqj2FZ5cG9uTsJaDf1UiHtqCnUP5W
0zhVhIA+H/bTGmefwkeh8vgYcQKOq43sWD4fClw+RyefyhCQO5XnxPyrUDj9
NeUgXY6AGgLk9o08YWB+nc+KKE/Apm8lFsT7YRBQHpDhfIaAYpryAWPlYfDm
ENO8rQoBI1+YG1guhcFI0IPD5ucISPfl2ta4/Rmw/pm5b3CRgK6WQicWNz8D
WZMb+dqXGed0sw1VXWFwo6H191k9Al6PTwsnPQwDyhHlU4o3CcjcFVum9zUU
Xobnux81ISB1X8U1ZbVQ6GMSKxO7TUCjrWNBQ25PYd0qimmvNQF3Wnhd6IkK
AbFODtWd9gQs4Xyavz/nCbglLNYzPyJg6kH9RFp1ECSx3WX/40nAwLT4Fda9
gdByf+jiApmADX/3fdyYEQC/32sHTfkQkLVyZ9cGO3/Yq1LdORhAwNOO1vZN
NnQ4n3GCp/MJAWm2KoWNKX7gyJ2hV/+MgJRJvYaNu/wgyk0wojSKUa9E3uPq
hb5QMxH8IS+egPcecYIz1RcIMpJST1IIWCHRKl/r5AvybrUe9zIY9hbR0LtE
X/hRe6tV8zUBOdbpfx2SfSGLa0VQPJ+Ar7eOWuiO+IKlUeg9lkIC9oqZ3iZJ
+cG+dJnyyVICsji6cL977AeDvxo4K6sIGJqa5sTLRIdQNDeJrSdglu/L9/pE
OlwK+Jvt3kJAxXfH+aXZ/IF14DmzQScB08TLX8yF+EOV8FHdE30EFLhkcbt4
RwB42Lck7vhAwMYdGga8xAA4UWz589soAS+zTt+sbg6AbyzMam1TjPh5P/03
fQmADN2o0MxPBHSw7KiZ6Q4Ai9jj074LBBRk2nPI0ysAhD63H7f8SUBrk7KE
oc/+MHDcmqb6h4Ds9nI9Obv8IYS0qX/fXwI+XJQiGmyjw8XW2EP/mL2w98qV
kAfdvsDCd8r1A4sXpqgM5ay4+UCFRXdDwVYv3Dy/l2mVmwZu2XZ8z7Z7MfAU
r3JmUeDY2hbrBzu9UMJxm/P7a96wcC6xSIffC3Pz7VbDBcmQ9lRxq8xeL/ww
ejlK+D8SmI323dwq4oU8VvvlzksQQUDyftZHMS/8nO6yz2meAH3OW//WSnvh
VC91fXnME4KrUrSSjnphm+euLW4HPUGDA2OJJ71QY6mw//1LD9h0Y3DBSNEL
z+iOflux8YCyFCdQUPbCcubj9n90PcD1O0fwbnUvXOXbzD+s7wFHz6SPLWp4
4dejm5+FuHjAnK+qbLc2Iz/9VzfnsjzgRc8wKfuqF1p+VBLsX/YAk32uXY8N
vHDwxxbCexNP4LflFrYx9kJhKb6ow1Oe0PMu68F5cy+k/llvHvQmQODGczUH
rbzwxmvNL0yKXnBee5xno50Xhg4eyP7FTIQNUe63x+57oWyzsNWMJRFKZna+
LXX2Qg5ZAbfaaiI4H81miXL3wsCimM/8HCQ4QtC47kr0wm/7qvj2KZDgc+NU
6jWqF1L++hGZlUmQvNPrz1G6F3KxRObs3U1i7Cd8F7YHeeEO546X+0qIsPtl
XsT8Uy9sit//J02KCF1/tD43hTPiSzDV4wcCBKh9PJ0Ww6jXQXrHl/88QT2Y
7E9N9EI7SZH0ti3uwDQkMGSW6oUiYk5RtZOuUHTonRRmeWHLalXcxTJncHpw
2VMwxwv71NJuh+U6gUz5l9aVN15Yk7o/vbffET6y04QGirzQe0o85RDch0S9
ffZvyr3Qua7iOGXKHgwTi8pDarww5nRXstGMHfAuXN3u0OiFGa0R5ZvcbKHj
1FcTrTZGvPXp6Um6DdCpfjkS3V64voO4vuWfNah1Cm9gHfDCuDrRnk3vrOHh
zoS/l4a90OnsyrHKKGt4YSC0HDbhhfd+WPfwxFpDX0zUr6FZLwwKMg6g5FnD
lond34TnvXDrX7tFtRFrkBd99sX6hxeSdr68Q5CwASvrHbM5Swz98VoYnEu3
gYhXwRN/1rywI8Lnkom1LdxeZvm6l5mIZQV3m38/tANCVK1t9UYiLncRa3Lr
78GzM5TPlixE3B9kGM0u6gCvRlWs2NmI6O7yUcn4mwPUkZhnXm4lYrqV+eb2
zPswIlxhfpmDiGa7OfqMlBxhqZYw/ms7EUMXenXzAx1hu9WZW+E7iJj/Xv/+
bx9HEGNfG1LgJeI9dZGZ3YKOgFlFN0Z3E7F/jUKQ0bwP+pceDZD3EDHY8Nsb
dX4HcPh2Uk9UiIjFx+6xW5yyA7+Q392N+4i4r8uPye/9XUg89uaynTARo1Jb
HnXrWkJR34P27aJELOIZb5WcMoMu16Na+WJE3LNcEjpLvwWf+b83XZck4nwM
68ID5RuwofT1+VVpIqrFGGmG7NGDPbfu1cUeIeKzewJSpP1X4BiztJqKHBE5
9quJVZ+8DBeTvlROHyeinud/ZdfEdMDibAb4yRNx91lBf89b2uAxa1UqpUDE
A0bFt1h2aUOo3yGFjjNEnIoJOVLMoQ0vJWcKHiARJY882BH2nzbUtSaf2KVK
xLPmkwU3ubVhxN48v+gsEWWlR6XKtbXhN9eBo8bniWjAfNX4KYcOcOSPvWbW
JKI+/3xv1FcdENWLk07RIqJ2n7//FWddgD9Gmed1iLiwS+6+dtFV0I8UEJ/T
JWK4sfRE/5vr4KD44UXQNSImPXLj9le+Cb4jESJy+kQkcw8JCPLegniifmLf
DQZetiPv2K1NoeDArn1uRkS0e3g5XoTVHDpremMETRj6WWF95y1rAZ8tQ/dU
mhHxqEJ1T2GxBWxguxJhcZuIX7yyApUDLIA/k2sXqxURR8Jn3xdHm8NRrY7Q
TGsivi80V5FZMwWNr4Hc2nZELHD7VMAfeQvMn2gF/7An4ujQwbddxBvgIbeN
45kjETfkRx3dKHQNQnub/E89ZOjR96W3e602ZLn4sQ27EDEkIrl3xkQdavjO
+xDdiHjzgMwtLbkzMFTMslnEk8Fn94GJZmtZWDSqJdd7Mfh/fFDOouEAcDBR
mGzIROwYWbxNJ3GDaKIKgYNKxIdpfprv720AJTXmtRwfIvq5F8ZbDy8p6c2U
P7pGJyJbD7/x3dJFpXu+hKU/AUQ0ev41qbZzUclH4szD6CAiWhQH5O75sagU
37L6A0KIeG6a6dKxXytKBfeKHCZDifjuI9tt144tcMvTqM3gORE3BuZu22C3
C1gCmKQ6Ioh46EbB5dUzovAqMslPPZqI3UdmxEVN5eBauvpsSSwRW6O2BFX+
UoK1d5/U5BKISKCdu506pQ7JdQGJ6UlEvHVvg6bCa23Q7D3MtO8FEU3fKA0J
5l6FH5NdRs/SiHjlSN5WlRwDiPjxsHhbJpHx/c2tdXUxBmTm4/N+ScQTn7lu
UXRN4SNnifPyayIaplnJNX43gyChWz32uURU8I8ZvvjHHE5Ibzg6k8/QQ82R
qVZdCxhRSAkyfEfEmuUkpvP/zIGqcX6+q5CI409eHxFk6EfK4IvGhRIi7vjy
c1E0wBS67wSmlZcR0fvI3pCfprfAzVmW5UQlEedcqertZ2/CAWqPeVY1EV/f
atD8I3AdGp+6VB6oI6Lgom+s64kr4JDIvzeigTGv1Ec5E2O0YXdOqQdnMxEj
xC1u39qpAeXlJoPUViJ+znH8suPLWbBs2yi/1s6oT6OCtxmrKvw3/CLMsYuh
twiuR0XHlSH/y4WfH3uIGD2vdOeYJILhypzOrX5GvU7/DkxTB9jIFvyq9z3j
3Gy54veAEmTsktt2cYiInmO7xXjmlEBXtO9u1QiD38g1g/qXAMvHHtXLjzP4
lc6w5W9BiFcVOPh6kqGnbV3yva9V4JxuOfngDEO/TA3KLZ/OwoKJ2VjURyJa
/jOubf+gAc/sNytxf2HMw1ftoWUzOnCGkBblO8+o/wM4fsbuGkwFaC7/+8q4
X/SNg+/nDQiIWtB7+IOI/1m99GxNMYHBgmPcZktErOy+oPgx+g6Q6vvtB5aJ
eKcinZl1gw2I9bm1XlojYk+EuE045z3omBKUrP1HRJJ7uRxoOIDLzwpfBWYS
6nvqcZ4/fh+ENljM5GwkoR5wpd4ovQ9127eoibGQ8NVg1+Gno/fBbm9GQiwr
CXPz8tSqE+4Dj4zWOs9WEkYpv9Z24LoPxYrfDP3/I+HDZA/meWUHMNN8WsS8
nYShKe2rL5/eA/YbJ3a7cpOw7v2mP1lEW8ixev9wgYeE0XOvxNkeWoO+i0e3
xS4S8soYFmeEWAETba/sBz4SnoRW9qhvlpAaWhV4WYCEc0oSVnqRt+FS0u25
eiESSt6IWmJ9YgG/c1g1lPaTkD/X8aFtmznEVGSm5guTUIfLfWPxeXNQa7+0
WVKUhAt1RzL//TaDueHvZgliJByoa+9d7DGDp3OhFbskSSil9na2d9oMTq+e
FAqUJuHixb32FsfNYYLtg/umIyTcxawXdrDfHPx2E967HSVh9pmvSTmTFmCb
FLJN9DgJDRwDX89FW8IlmVToPEnCQCOJfI9td0G2sNjR4zQJz2e+HXNFW+BR
60g5dIaEORNZOTsZ38PfbVMDXUDCz1IrBcaWjvDeYHkrQYWETc9VVVLmnKBk
6j8QP0vC2dohLhV/F4i1P+DYc46E9tFvS9/yuwFx5USKlwYJX2jtusvn6AHm
VM0BCS0SvjFxXJywIYD6dpOtfdokbNHJ22f22QvEopyUSLokPLMlTyLIjgjs
on73pa6R8PFuhbf60USYz45J7r9OwswDr//YUonQoZDbT75Bwgcqp4rvHiVC
bl0du4wRCVcTww6rmXlB6OUPZ97fImGVzi0mdWECuAx9daCYMfIt3rSs1OAB
N+5sSj58m8E/YXv10XvuoPhjd//gHRIuT7bFC0m5wV5PaXaaNQN/7d24Eq5H
sIFV5YysHQmfVa9tbT7kClMheg5D9iTkcUqLzbrvAvWCNkk+jiTMP1nA+eOr
M2SkefUdfcjI78g9A7kkZwiQC2UbcSGh6SMl5uBAZ7AvS1P0cyOhk4Vrhkqh
M+heKLU/5knC+JI8nWEZFzjW05k46kXCGYvLj7b+c4Fdt2Z66WQS8klmjmw8
8QhWPq2wnqCSUMJvf9CeSTcYcuJUHPdh6NmWcEx4qyeUrQvbB9BJ+EHr+xbl
DC9IoMsnnnxMwqE94x6u+iSg7NTqnQgioaV84fkuZm+wjDdlDQwhIXdut4hA
GQUuSDornAoj4T5+HfYgZxpIvaXfm3rO4L/y/OdZbl/gUI5LCIokIf48ovPL
3Q++N+f1nI4h4VTL55AdsXTo0WvYMhNHwvZbNg7aNv7wdnzo9JNEEh4eq/hc
OOQPEbbf7RRTSKi+w2ly5oc/eCxtTphNJWHPotCsyxt/MCbz94RkkPAOm7Nw
n6w/KP93eIvSS4a+BiZLrj6ig0i46ulPr0lo66OsyRrnByzC+nahuSQ8sHOq
I+eNL3x8aRsPb0h48XwB37Y2H2iWJ3V/fkfCezY9TW8XafCqOozlWREJu64e
Ef5wggbBlzJOKZeS8GeJmhY1nAoP3pfZzpUz8K4evOm/lwp6Ft1xz6tIuCc0
4nZZOwXkv852qdSScFDlcfjOlxTY47a2eaGehFeMgmMpJRT4t4nrVEQTg89r
BzXVNlFhLOigrVorCed3tz239adCNf/puK/tJLxaNOw0o0+DFymXuiK7SBis
fi5y7L4P+B4x36zeS0KZx9Na2wd8wabYRf57P4NfvYQOfl/GPq0eYBM9SMIS
k2lxd9cAONIZH3tumKFP2s9+iYhA+NDaoD8zSkLC03djAxbBQGv6xk2dIOHX
9bblq55PQLZ+d6vwNAm9xrLrib4hMFSNPlWzJByFq3P/XJ+CT4WVsulnEhY/
i6WPq4TC0dLg1fU5xnx2t6ttHQqF4cKCN7FfSWiYJ/h6AMPA9+2Y/ZkfJHSr
bn3DZBcGcnmsEkO/SBikeu3QcfMwGHl9ZMptiTGPZh+vfxcLA78s/Vi+FRKG
nZtLJNeFwrF0on7BGgnPere8Y1cPhdGUNO7r6yT8VU4G99ynQE/saFlkJqPh
xdGecN6ncDzuDy10ExmXOLVFTniEwFjUPmW5LWTUOnNmc+GXJ+Affn61k42M
+jsfrH+3eQInwhzeOGwj48fRXxqw4QmMPwm35+QkY56E492Z3GAICKwQf8VF
xuevKmg+pGA46f9x8iIPGQkjcht97wfDhM/22C+8ZGzeI617lRYMjyny+nQ+
MnbMbvI1qw4GeZIJt7gAGe2PhAx/kXwCk56+LfVCZLzU37JoUfUEAt2yaZb7
yejceONcs08InHIZwM0iZBTg4HOcdXsKUw+YVpNEGXhuWU9lPg+FIAexNyri
ZCxf/fujpy8MTtvp2I9LkjGA+xDXrPRzCLaMnxSSJeO5DNubWXMRoGDeEFMq
R0bZQAM62/EomLn17brhCTL2VjtqHzCIhieGu7lX5Rn+ijquaWjGgKIBtkQo
MPDznuv6yhQLs9esaPJKZHzN7S9DfhALIbrB2I9kPNTgaL8QHwtntAtWHqqS
cfhv9vYU/1j4qDmWz6NOxp7ElgHp07Hw9Dyrfd55MnrdVAgwfhsDSmePiOtq
kvHu1b7Lutti4JOy/uQ3LTK27cl+fOFCNIQqEWOCdMgoIkPniXKLAlBIuy5z
hYwajUnb+rMi4fPJDq7Wa2QM/lP9S/ZLBIQd+9Nso0/GaIXiaoAIQNl9NPab
ZKz7/v7scnY4fJE+j+lGZNz+XY17WT0cnkk4rJwzIWM3bNPrYgkH5UPh+TNm
ZIy5/mLOZPE5zAlX3KPeZvgvGKb84g2H5/s+iolYMfxT34mq2IeDiuD2ySpr
Mv7OvZDOyxwB83zyMaZ2ZPyrZEVrb42AcF6T60wOZNyfq/05uycSVHf4csU5
ktHzY9q109zRsMCZ3XzmIRl/Rsg+j/OKgYhtA9QhFzL+Fy36wZ87DtTYmNDd
jYGf/1t7knE8fN0stsLnScabgY9PvTiZAJEbdPILvMho2xUZsm9rIpxdd7l3
nUzGTY6KxUntifBtNU7sN4WM01YWLxQ8kkDidlbVHR8yCr0wZO1gSgaLtgLD
935k5F/+IsF0OxliT9b+1gggY5WbvdXblGQYiO8MLgkkI2Xjb/O2ymTgZh+R
kHnCwG8kXyRQlAwXH3yuiXtKxoal4VmtJ8lAG/ptzPWMjNeh/m+CZjJUnN24
TA4nI1eMZ2jgQhKsvOJ8+iuSjKykqThdYhIc2y0gbRlDxovPXrzy3ZIE90hi
9f1xZLRs4HlQTU+EtM/HTC8kklGNZpJ0ZnsiTFxRXi1KJmN/s3FNYkwCCJRq
hUmlkrHl3euzPxh86IneOBybTsYg7Wxxt8l4CAqybOTMIqOOVPbMRFI8NPxx
NCe9YsQznWxS9YiHDWZef39kM/pFjn7hhH08KDb7P7fIY+i74pfNKCEenI+F
y/a9YeiBtm7xKSseGL8XzecKGHjObTe3XomHzyw5twuLyLiBOq5cdCcBRBxK
1yVKyXjZ+dGS4q8EMH7fGBFdTsZkv4+/JGITIVylT46jioyqhNI0M7Mk6Mqc
aPWqISObHty/pJgM6oRVZvNGMkpF+zyb2PUCiLNbonuaySgd/Z/kT7ZUKNLh
OaHexqhHlkOm6s9U+FW4r+NdByMf1ZIzS01pICMsbS3ezajf8uLtUt90sAo4
tSmql8F3wqYtZgczIHHxbOy2AUa/177ZdDEqA4aMdeUJg2TMWBBLH57JAN4G
466vQwx9GEw5vWTJBB1ZG1vTUTKG/ORND1nNAHqkC0v3OBnjonv+URsyoGYj
JV5timHrqX276ZgB/2yDT7+dIWPOh9sU0/V0kO+L7jn0iYwcPkG9s87p4Ajp
9yK+kNGE89LV5rE0yEp7w7p1gYycZn6dG86mwQxXVaLHNzJWVmaIYmYq7HNv
U1z4QcbNNz4MpvGnwo2pwb5bi2RczhNiSY94AaFasw6dSww88Xd9R6RfQOvb
n+yqK2S85uHFuWsoBVj2MaXkr5HR8cnfVv20FGAsOiC6zugvuYPzc2Ep4PZj
9/vnzN5oVNvlYZ6aAvk3Dz5g2+SN+SPNJvSRFFiokf3PncUbp9f8Xa8qvgAx
GaXUOVZv9CmfvJRb8QLMnmsoG2/1xoYWeGtqnQrRTNc/tP/njY7+0TylJ9Kg
7675Q+Xt3vg0WVYkbH86bO+258zj9kYLe6FD+xj1oKT4qj7b5Y2uUTd5o69n
QRlH2PAWfm9k2+cRKOn0Ev64JLg8EvDGm+ebJz2pr+Do+EuuL0LeqF/TNGVJ
eg22GkWZhvu98XiB9PjRw9kwflh+z0YRb/yYmn64NTgb9Ha+paeLeuOFrywC
Zv3Z0LIit6It7o0J4oN87kw5oDyWc/e3pDduHtCONNqaA29rD7+PlvHGzNvq
A5zL2SCV+fK8qqw37tZh8pRvyYaEYMmCT3LeWBB1uWLENxt4ndMPBZ/wxiua
thw8x7LB/+ah5ydOeaOpm/mmg6mvgUk5hWVYwRs/9R62fDP4CpxFhZ29lbxx
bUeidQHHK/iyNWFaXNkboxrff7516SWYfBe61qHqjUzn1o+0J2VBX190jbO6
N7bePso/sSsLNEv4jwle8MaTH/+O8ORmQkVCeFK1pjcK2a7xklwz4bgP7w7r
S974OnnNYdQ+EzJsQ8nbLzP4V9EMIEZlwj5d7h9vr3jj1pbo/+T+ZkLYyWBT
Iz1vFHjQfWJnWBawC3J0bjTwxtBlESUD05dA3BCAGTe98Zpbv81m41ewOMuW
rWPsjZQvB2YqKa/ButVn75KJN8YU57uZW2bDaO7moBhzb1zZQQsg7MyBq+He
/1QtvfFF/ZS8dGMONHky3/ts5Y16vBfClNxyAcy9hoNtvBHWZpbO7M+D/PN/
L568540u79K659/mgYSMe8mwgzcGP2l513gsH+J2LEtSHnijSHyrCjEsH3iW
naMknL3xolG/3/XefChNlfP/08TQU+qnYG+hQmgSazC/eJeCZyP81+eOVcKz
uTOnC20oeKZA+3jwpkowz87bLnqPgq9GHtfL1lXAESfx2RAHClrv/TYo7lkB
ayfjStcdKahXeNBNTLoCGld5Qm0fUtApkE9we345PCunW793oWDRxReqZznL
wcybSVndjYLVCSrp+g/K4PA55115HhQMurhjTWy2FNbY5+b3elHwXi1UfXAo
hYY205oAEgVLXefni3aWQlhIf+SyN4XRprcPCQ6WgJme1n1LGgVtHfjp1ypL
QIa/+ly3LwWjeLdapraWwOqwvBD6U1D4QP4tBSaGv4RXv7IeU/A/S3sfHoNS
CL0t0swXTMHbUktSm/tLwUQ8MoEWQsHxEwpyKS5lID3P6fozlII0m9vcWifL
YSWbesnkOQW7RFj7AlgroM5pVaQ1goIOjXIZBK8KeCp/f/VUNAWZT83PfVur
AJO1mc4XsRRkP2bza8GjEqQqDNN2JFDwashRNlithGXvLgIxiYJx4Y+Sgx5U
Qd2589fmUyh4MXZYMHO8CkK2lkneSGPwP/ZQ6ZVyNdxql9tQn0FBu0fH084E
V4PU0/QBuZcU9N4ZWvqmqRr+6O19Hf+aggkLlis6X6uhlj+M+l8uBQuOZbgp
/62GkBF2Q7d8Cjae3R5V/KsajBOJR2ffUnDu6HH2733VIGH5m/VqIeO9/OSu
vynVsCRuO1pRTEHJU2TTGotqqJkffyNdRsEv9u82NPNWQ3DO9YDICgoeiopZ
2VRRBUYPW822VFMwKWQkMtmiCiROqZ5yqqWgtNVYzmfWKvi9VsA5Xk9B9U83
VFazK6G6QmZGq4mCXldobwtMKiGYklxS1EJBDUvqgxd7KsHwPP/TQ+0MfII6
OV1TFSC+LfhuaCcFHVsa0urKKuB3+2Zk7qEg54ffce6ZFVD11J33Xh8F95i2
SV7JqoCg69/nBgcY9S0QP8RVVQGGe+5Un/tAQZW/ldf75ipAbHQoIn+Ygjtp
d5L3SFXCr0Rdh/1jjPyGv6m+IlRCpWWDeuAEBRUqTh55NVEJgRJKgqtTFJw5
kl8VfK0Kbizk/bwzy+gXtc3h4j1VIJor3tTziYJKO4ZeFt+ohp8P4+KV5yj4
bAfy8UxXQ8Bfutae7xT8dND/0tSPGtCvZBLx/UnBeol6o712tXCQ6rzya5GC
nWpPk3e+r4Uf5+c6TP8w/G9r52CWq4OybWapbSsUZDPSV+hxqQP/jn5Phb8U
NDpC32+ZUgf6oVpX09YZ+qEGSTwpqgMR/WqJnRuoqHIqUEz1XR1833OKmbyJ
ijJfFNc8ouvgz819L4W3UHHterkJ3qkDpugtBrVsVDzk2tBAEagD1qGFTXe2
UbHiSozYlspa2C7Ql83KScW8URnuEzdqYbdhqWEGFxW5PbITxudrYF90MutF
Hir+YeHatECqAbEh//x5XirqTtbS/xOogSMCD0yC+KjYemiplVpZDfKGN7bJ
ClBx1zdmNmaXasBo5YIuISo6fnH7zxar4fyQmIXTfipeKJZYG9lXDToC27fz
ilDR+N752Mf81aBvuFT8TpSKAT8zEkpkqsEkeuSOgTgV13d9lyw0qgarodod
q5JU1LrgZtX1ohocBF6WR8tQMY7LgEuPtQZcDUNtlGSp6BZnmxHsVQPEaPdd
Y3JUPM/8caaHtRZ8h8yqSScY+Nf5Gx/H1UKwgIa98Ckqyr6tmzVWqoNwQ9k9
tQpUZJPfaHBttA7io3fXWypRkfRrq46YRz2kDa07sipTcV9IqYcPRwNkC8wK
ZahS8fbN+nTH4AYoMGxr0lSn4pQE4UboWgNURL9xnj9PRX3Zb2rPLzVCw1D0
gSBNKnJM/su0826EDgFK25FLVEw5fiqbEtEIA4Y2bl06VOy1pZiPBDfCWLSu
qNMVBr5F0s3tNo3wcehU1049KpbOUZwOSTbCV4H9hHf6VFzIOJ7r2NsAvw1Z
JQxuUrGjzJ6maN8A/6K/9q4YUVGceNLu0b96YBnuI0WbUNFC5MaWB371wCFY
Jq1kTsXmNkcLZ9564DVKeT96m4qPvjM/omfWgVBMAJVkRcX3rUtscpfqQHT4
gaywDRUH7uw4qbyxDmQEbw7X2FFx+UHmSHZbLZwwUvGzdKBiDb9hUXBeLSjF
iB9nfcDgT0V37w+GrT68fTz9IeNcb3zvaEctXBL8E6DpSkXVpRv/rrDXgZ7R
qPy8GxUv2qUunb5VB8YxdVOBngx+9XjO2LTWgeXwy+AjRCo+aZH9mXW5Hu4J
hil2kam4Ov72Qt1sPTgbeXx8QKXim2ebikLpDUCIMQ/d6UtFodthQceONQJt
WAPf0an443r2O/mRRggUPDqn/5iKWxLWnX6QmuCZEV/4ShAVTw3KhNTtbobY
GCa16BAqXjZnY6FHN8OL4dmvZ8IY/kn9oyNbWuCVYHvU6HMqdn41avDTY/wU
Gr09R4qkYlXgPGsBtQXKYmJ+HoihIvWtZvnh0BaoG6bE1cRR8aZeh6kFuQXa
BG01LROpKKi+HmKn2wJ9RleWtqRQcUKlpmGC4X8k5nRSeioVXesMbsSlNsPM
8H5tzQwqalOVTz082Qzzgmyrc1lUlDLzc+otbQJKUw/N9DUV+cj3FkovNAG/
Szx3Xw4V88c3fU4faIQcYdtYjXwqDv3s5yq3b4TzHSclyt9S0UtvxSFvRyOM
emx8K1dIxVvH5wvTGxrAWbxdOa2Yiiwl6+m8IQ3wX19kq0AZFc2rFvRfOTZA
MtnS4EkFFdXHNN5ct20AhcNHpzdXM/Q45PhGhNgAXR/+OrjVUvGs9Y8UrVcN
cNe3cW2hnor/5ldzZH43ANPxMF/zJipeXePIPafXCM/HTXgGWqj49lg/P7Q0
gkygVPzFdioWBx6L/nS1CWpO/5Gs7KRiU9s1G/25Jrg5W/3ueA8VG9dNj397
3Aw/ngapZvRRcdPLcyr0Yy3gizfbhd5TMWyrV0D8YAvsnRe9+fQDFZPzQwUo
bq3wNuLHzJYRKlJY5aKiONpAS73M0WOMiqGR4e9fPGmDqR9+/75NULHh3JWp
Dett4B53jX57moq1ZKegT7rtwH1xP+/gLBWP6tBupNLbIf3PXMKlz1S8MryB
rzq5HTClQLp6jqFXnaX5HQnt0H+ZUnjyKxWf4sPWamI73PunfTbrO6M/9rNL
Kam3w+bMPZ37flFxa+6LkG2LbRB9fdYw7DcVRSx66MmMfI5uyvvItszQ378Q
Qcn9bdCYTXAirFJxo71l3dH0VjAx0mD6+ZeKfU/y37keboXfbLwBd5houM0w
ojylsAUevx3fNbSBhs03nEV4tVpAxPxlks5mGvLskQnPWGiGYs5Hh2u30HDX
WtLmpMRm0C1RKz7FTsPWV3683rbN8Mlq+7lX22hY5X9MY/1SMxB3DnUd4KSh
L9fulm+azbCrKtX4ORcNMx1YNS9ZNMOrew8+b+WhoevnawZi4c1wdg84E3lp
aFph6pk20wxD9ewbFnfTsPjw0CfuSy3wwKnv8d09NHx+1yizubkF2Pcn8o0I
0tC2tLzKxLAV4lvtUnT30XBJsVssarUVTrqdkq0/QMMznpcKwpPboE10c6nC
QRqyzJtJfrvcDhbdHeezDzHw80m1jv5th1Wv6B4RCRoK7WLjU73cASFSViYR
UjS8ez/wPldMB4i/l5v77zANRzat178c7YAK6roLWZaG4l3GSRW8nXD9aPPG
JTkaJlUMn7PCTlgYeRZkc4KG7l/Ysq7c7ASqv9meMXka7thxeqnXshME5GVS
ryrQcDfHx+JvZp2QN7V8tPEMDeNSfkhc1ekEjSe1ZWeQhvZHbI5fO9IJ42ee
aOSq0HBG5DV5cFMnuH427BM9S8OxoauflDs6gOO5mFnUORpabqxMw7AOSFH9
Nc+pwTg/OPexQq8DXG1ltQsv0rBusvM0lbsDNMLuZZtpM+ozmabYldgOAmWZ
XNt0GfhvDSi3SLfDwsxHxzdXGXzxD8+ItrRBBadoj/F1GiYnl/rwerdBiLz5
cdYbNOSqUdqVrdcGFqbxz3IMGXitdII6LrTBCfrw0o1bNBz91zvEadwGrHn8
BpvMaGgs7ZVS/LQNBj9cL3ppQUNSvd9y36c2yNoUtuf6HUb++WuBQsbt4CXd
5cFkzeA74g8H93w76OpxjqTb0nBDSvjJjRc6QMTrIlyxp+Hii+rkhKQOaOio
Y37hRMNAmmR/pXknRC5vNNd2oeGHTPqGnspOsD2gXPPnEQ1X/eQve/F1gZIm
4WCiBw3NmXb/FbvTBVxOxTRNLxpePZnDG5vaBVPRf2Z/kWgYye8ccXagi7EP
H78QS6GhFjxu1FzqAt8Fx4xzPjSMPqzIWbWxG27syt763Y+GUa+TfF//7QIp
nLeNDGDYIlXOXDNd8M9Kok01iIYSo1/Fm8u6oOPJncPzT2jYpXlIzofeBUlF
ycHPQml4ysTBNOBiFzhPjn+H5zTMzn6UT2ftgvPb9l75FMHoH26f2NtVncB/
3DA/JJphvyt/su7ZCXNGETsV42h4eM/Lm+zQCWW0PufpBIY+aXmxI6ydEPx6
x0BgMg1f0YtvGY50gNmAzin5VBqOf+F92FPZAceZAyPH02n49VNhy3J+B7BK
NK/Ss2j45sX9mYGCDhjUZTU69pqGGcszo92tHZDlfrZsOIeGD16zvk782QGE
ZPJen3wa6vjfzLsm3gk6reXEI+9oqCCaX3zDrhMO/F4bf19Iwy89cUrU0k74
JXRa1buEEb+yXXHPri7GPuSSLFVOQ2cWtcmPzl0Q7pC/ua+ShtN2X6/ffN8F
1hHfLb1qaNgx8TM+6XQ3KFbJNIjVM/CNc9mNP+sGzi824l2NjH6VTnK6+rkb
Jnak091baFhWbvg3WLYH8hVnvoi009AxhEbLu9sDtNvCWm2dNPS+uskxKLgH
9ANNXrn00FDb2l++J7kHJN7FcO7vZ/Sf59a0gy96YG100KHpPcPfPR0d4bAe
aGPd3fVgiIZN5zUXjR/0QLzsNTnBUcZ5/rykqmoPON4ICa0bZ+A92XB3bksP
qHm3L9pPMfiffKLzp6YbeLO2XeebpWHq18b/tAnd8KnnQkHVJxoe4DuvOXey
G0r+0vhs52h4M9K1LXOxCwJFa9x2fmXombOxRKC4C0y0mYfKvtMw3iNB1si/
C466Kp2x+kXDwuBCsXWrLnj6nwlh6jdjvlUGPSrQ62LsO6Ryk2WGfpMpI1O6
XXBNPolpeJWGOGBnucOYoe/WGmWDfzS8wSvMqu3aBbvMZ8i9TD7Y1TxxYl9C
F7j+2VJzeaMP3tXNFgru74LBx+Kb2zb74Pm5H13S/N2gIKyprsHqg+ybvpbt
vNMN0QW2PnXsPigbVyy0VtwN/7QCG1T+88EB1lxXBd4euDX5mq2c0wd3CBlO
zzr2QIVrp4YCtw+K6zx7NtvWA/s5fvq/4/HBstfP3Lcf6gVyEk+r3C4flLuU
e1jDtRcm5U9wZPP5oLKQelZueS+otV3XlhLwQfPa3EvVK72QYv4oOE3IB3OH
JOMeHOoDluXITpH9PijgeGXrdbU+uBNYwp0g7IOXXjr8zNXpgwbhkSuCoj7o
li+5SL/YB+KF66ERYj4obXzqSKJ8H9Av7e/bKcnA80hc5T5vH8xNquwKkfbB
6i9fGrg+9oLWIwt9jiM+aBaSN7cvuxdecdAi6Ed9UMvALTjqfi9sT04dZDnu
g5IpXjvfHe6F+6ca93if9MHFs3FPCud7oKvts+H6KR8c/JMq0vOqB+QstsW6
K/rga8OxYGbnHghdlh5dUvJBEcsJ6uezPbAYqL3PSdkHrb5TVDr29YCeyH3T
b6o+SJUtfuDJ2gPuHUlU16c+KPQ5abN2QS8MR06HWB/2Zeyn0a/nzr6HnU60
tScDvmi649HxMfdhYLuvcuu+sx86r7K8qHo5BvLDSrmCj/zwfMQFv/KWMbC6
oLC5yd0Pv3O7xgstjEHd/mOZB0h+2F9ivRAsNw6Lj4/8a/P2w0Cd5QrNa+Mg
siJ12Z3mhytGF0yancbhiqV48iE/P3zLLK77M3gcyF0Hl7r9/fCogORyTdo4
5Cgd0CAG+iHrV5sz94rHYSxDKEbqiR+yP2NpvN4wDtt37fk28NQPuw9Y6cu2
jwN471KlPvNDeeHzz1cY9r2vO57JRvhh348Hb1maxyH25vZPw1F+uPcJs8RK
xTi01m9TpMf6Idm9UKUqdxzW5NiCTiT4ocE/a3afhHGQjN88MZHkh+af9rqF
B47DjW0bjge9YPhzmknWdx8HP9d/PgrpflgqeUbx4N1xKJhaGZzN9MMxPgEH
FYNxmNVZkg595Yda5r9/NVwcB97Sn0TM8cN6Q5174WrjoC7+rXsuzw+dvoYr
aiuPw8OwOdGIt37Ye0HY75zqOCQzf3p0ttAPHQQPDYdrjEOP3XTL92I/PHso
Q1rw+jhsHBzfG1vmh5dn1He7Wo3DUfURR41KP5zoN7uzlzAOprmDtb+r/ZDH
usvF/Pk4BAv1706q88MRebevznnjsPC7vWy12Q/Nsiw/WH8bB0HzFq60Nka+
Ek7j1zkn4GJ7g8XVTgYf4X/STktPgLtC7TumHj8U1E/+uvPCBGSkVrK/7PPD
Hw6t3SumE/B+R5mRwXs/JFVeYOVxmQBWYlH25iE/FNPt78zxmQD5ubcbc0f8
UOPlj616Tyfgjn6envG4Hz6py5kvi5iAZzWv09mn/LCwm0/ka+QE1B3JWns7
w+AriveD7PMJWIxO0zb/5IcfXJ0s+IImQIQtJZFzjlF/4T5zV+8JuPIwYbF4
wQ9/JvIkXns4AeTxmPNW3/1QcdHX9sPtCcjRiozi+eWHTIN3Z1X1JmCs8NlC
xW8GH3911GvOTQCn6FNlu2U/LGe6I/hIYQKUQoJC+db88PYZ6cfXjk6A3T//
2dp/fpg/P5HMy+Aj2tr3tCMzHauLXCsVpCaguY/yWGgTHb/cKdPZdGQCVlRI
Y00sdBQ3D5RzlJ8Aideeci5sdNRRa36nfXYCDPa40YS30ZH7oG3PSUY+vj7O
79s56Mg5NmIdZz0BBT8dpTy46KhUezZ4hDQBs7fsvcR46EjOYK+Tj5oA3hab
rh5eOkaU80xNvpmAs/JWB0l8DP8XLvf91zkBTskWrtICdFw5sVQ4/mUCkrab
Nr8XoqP/i38TAZsnocvDSIi2n47rx448UBOchKYbdn8OitBxl5eUyHfZSaiU
9+yqFaWj25uwxLuqk1DA+zjrtjgdZZLrdGUuT0L2r2jaZik6/ujBzOkbk5DW
lWWSIkPH16krGhYmkxCXXXL6rCwde5smzPJMJ+FZYAvPtBwd/1G0tXhuTUKg
7dAC5QQds309rZkMJoGmMdcgcoqOeoXeVBGdSfAUW0usUWDwcU6l+frZSXBi
2eZpoUTHwcnB+cBTk2A7tef6JmU6fv/32alFehIsqiRlk1Xp+Ducks0pPAmG
8Qpb1dTp+F9e/7wq/yRcJWhOT56noxVHUoYszyRoGt4s99ak40HXHJkHXJOg
ctomQvgSw99DMys77kk4vdv9QbUOHf+6uNzW2jUJR3/Ttcyv0LFUz0uIfd8k
SPREHtqoR0cmB94fd6Um4UBuBnOSPh3VDjE+c4qTwBdc9EHlJh1TDj2/Y3Np
Erbfa3ozYURHMNvz75fZJLBeHAwim9DR1HH85cZHk8Ak8fnuAXM6hkw9rJ8P
moSlLSuqVbfpmJj8zYYtdRIWptmEzKzoOJMhl5tdOgkz1Xx/mG3ouORR0avW
PQkjCeJdCXZ07Polvlt2dhJ6vU5lKTvQkX8hiWnhzyS0GF2gjTvSkZJ2xHEz
6xTUKBiYkB7Ssft5SNIuniko4bt7er8rHQVHlr+NCUxB3pIrT6UbHYsLW1bg
wBRk9PoumHjS8UTXAQUFkSlIzAtvYCLSsc7An2+z8BREPklLjCfT8frTA1f+
Ck3BE/sCD6Qy+Bj8teH17inw1WrQG/Oh4y8+rY9N26eAKDlwhEhn3HdUnBdk
5OPK9pF932M69on1e1PWJ8F+dmmqPIiOj/baTnxYmgTL2i3lt0IYfJ/bEvvj
+yQYJ+2KWA+lo+/ufjW3hUnQIx16EPecjk+8vR1W5ydB69ZJLYiko6bYvHfr
t0lQO3Pu0Gg0HY/pulVyM/wp7rnO7BVHZ+xTOSsFTFNwbNnyg1AiQ/+kBifC
f1Mg2e/8piyZ4b/p+uoyg48Db2hBxql01Oht+pUsMwX8T5/d/ZdORwn5ItEZ
5Sngvv9CNTaLjp+48pb36E0Bm/ZbQaXXdLz7x8MwxXoK/rD3dXrm0/GZ7c0N
+iFT8O3jdKbgO4a+asc7nJKnYLZukVpaSMePN25kd+RPwUjyZhOjEjoae12v
4aiegj7yztN/y+j4geaSPtU2BW0mB3liKuk4UUnkExiYgjql4wuKNXSk3Uix
DhuZgjKBsw1DdQz9bdzZqjExBW9WriZ6NNLRTpHaf2VyChTPXjD82kzHtmSe
n9yM86qgM7xmbXT0mD/65zfj/flB2Y6eDjoeLTO6ZTrIiCciSj/XTcd6VvOG
pp4puGrPr1bUS8f7EpHhZYx8PhRy/JMaoKNz1z1qT8MUmG3aWBA3yJhXeZMm
aYz8P15aus89zNDD2f1VHeVTcC/iiyR1lI6HmxKv95ZOweLk6PTSOB3fCop1
HyybAg+ZnjjrKYb9y+gqd+UUbHjUYDA8Q8d89V28dXUMPVWX7ND5xMhX9Pm0
WvsUcHLktFZ9oaO2ECHKhpHvM/0Un+MLdJwn1br8nJ0CgaQI5bRvdPSSX/zu
ssTQ7/zjVf6fdFyeydImsE6DuDz5zeNFOn7baixN4J+GE63W4g9WGPOvqCT1
JExDya5bk9NrdGS9u6N3WmcaVM2uxOivM+aptYsq2XQamrLOXW9m9kehZtNL
WQ7ToLOkwKW0yR+l7uxN4iVMQ5/ykeZsFn9kMzxI8fGbBqMAEaowmz8G5YXI
DoRMw1Tfbni21R8vkW7//BkxDdb7/1tm5fDHx/3Dx/tjp+GbDXOe+3Z/jG3c
yBKUMA0ubxdtF7j9sUkmje1U4jT8Y/osarrTH3nO7Pi0kXFO0RwZ697lj99K
MmcOM96zP+uKVOf3x+OiroqckdPwZKzuaqGAP95PJ9RsDpuG3ZLFHFJ7/ZGL
wOfkEzQNsQ9fN8Tu98djJRxaO+nTIFKRROYS8ccWa+7n8tRpyGQPV6SI+uOq
Y4qjB2kajl4L+P1bzB9nrIL4LL2moSCOmH1X0h/JfYt3bBm20mcn6yFpf1zI
e+/wlXG/9thdEe0j/ug3Fr98xGcaLnoZjVQe9cc7rlvzLjHidzVeDj923B8f
lX4cU2Lkq8+jrpt60h+/Vx2ebE+dhlHj09v4T/vj5he81RnvpsEyXaYuQNEf
uxyGgvUbp2Hu5wHiupI/jlI4ODWGpsFRaddpR2VGvJ+Z82Nfp2HZd+uvKVV/
5F12yHm0cQaI3esvr6v7o5bT9hsPeWeARejXnabz/ih8+f0fZbEZCLD6uP+M
pj9uePvzuan8DOzIG/rwWsv//4arPByq94ujiJQQJWUXLaRNyHJOC4l+ibJX
EoUiEqkUhSQz946yRmn7khLJFopEKSKSpEIlDTP3zpAIUX73z/c5z3uec85n
Oe+LFpVN8oFWXEj/25KsuYOFf/uf1qk7cEHd+oVdsgMz7wIxy63uXMi+XC4l
6cjCHQt7vdo9uaDflVd7ypmFimZVBs0HuFCse+uMwJXB70HFZnsfLqwPTjHa
t5uFBdWCGeRBLlQ/if/ZupeFLavHdV55ccFqRmSupScLfVkC0t6DC432xw6U
ebEQbtz8eNGVCzuv+qgtP8hC7/V5ol1MPQpeTfmtviy0zO3N1bXlQvvSNRan
DrMwLGDl26RNXEgbTGvSOMJC26dGHS1mXHB79G93fRAL1VUC78UbcWFRhDcd
dIyFjheyEg+v5UL35oZwpeMsdCldaTWbOd+QXildfYKJHzAtE67jwv7W5HSf
cBbOPWlA+ZpzQfvKxNI5ESwckrCVydrCBa6HZ3npWRZWc5yjkh25kKPz0npv
NAvLzlyrGmL69RPodYjHsnDAxYZvFs6FZcWXffLiWBjX2O9ec4kL9Kmx37tY
LNwzZnnz3l0uBEk+V/wvgYXFnNPWHz9yYXXz0izbRBba34kYNhrkwnAyZ+2v
ZBZKfPy92WZ6H5TuHqlNT2Pm3a1RvFexD8K03HduzGDhGsPJqZ+afWDMr+7h
XWOhWSQ9VqTXB38KdIIv3WD4LF3pGLe6D56EsUVNbjP5dH20Y9b2QYTFUMLX
LBauFu9p6WfiKO6iHpfDQn/JdfEqK/pArLHygUEuCx/M79XL0emD55e14EMe
C++eFr+oo9IHsa4X30QUsPCaY+VBa/k+sFYf2KNTxMINT4tdGyT6YGbfLkFT
CQsr7w5NBU0weOdVnA4tY2H8KN9u+k8uECHqs1Qes/DtrH4Xm34uvNz2cUxG
lo3/LGN5aef64Lf6wdf38tm4YtmXfzZl/TCnrvaZ0kM2en049nnHy35Yclij
LLaIjWnPexd4dfbDBtnI/OESNuoubhFIjvaDW0nnf/vL2DgtQptkz+PBMbf1
GS0VbHwYc09xyoQH7KnUSxaVbLw1sTQf9vHg6dadEco1bNS/ZfFy4AEPOoQF
IXHP2fhIL9suoZ0HQ4kyh3/XsXFfmD197g8PpE38Pb3r2Wi14pJFmDIftLvr
nVtfs9F35/kSW0M+mEfrbsc3bDwVcYGSs+GD05Lzm/Nb2PimPUug6sKHwKae
9YvesXEwubRczoMPccG4Kv49G+tvhae27+XDzfmZumMf2Pi4UX17tjMfKp5M
qBz8xMbNbS6EKJPvnaerQlsnG3d8eqJzdx0faIlHMzd+YeNs3tbviap8EL+v
IFrwjY3bY8kXPWJ8ULUPHlXpZaPSiYTEtl4e2Gfo9473s/HstO+3uNk8OISs
Tz4UG9slv8rev8iDmB/9Le8FbNSYOsLZGsiDa/FWLzcNsvFtjb8Y14UHpQb/
VT4cYqN0Hms0dgsPmttEi9VG2JgVIPFX0owH/Sc97hGjzHxaXsYrGfFAVK3y
xsQ4G+mws+HLmfkrP1dO9ZtkY/XcSpvwjTxY43eC+PCPqY/nfUhkJw+2ybRH
W4oS+Fb9i2rgIR4cKFpzqmgagbdsREPWxfEgwuVSkIYEgVN7mj+fy+VB6l/h
QY4kgW2Whj/N3/Gg4Na2PX9nEhiT1J6j/o8H3+kZNh/nEKjLPDL8mHlOXjqA
W+QJNKt4r3crig/zjGrXlSgQ2KgmcqbhHh8MOtX1teYTmJpnauj3hg/W5yK0
Li0g0LV24Mhqmg+eOp0LphYSOHu+Tc38aRScem0iG6BKYHKHs7ajPAWJQakS
n9UJdDqyuvDkAgruK45MWmsx960Uhg4rUfCiwuFX6WICX8xVOe43h4JujwKe
9hKm3+lxy8Wm+DA2Xebr5WUETnfsGJzTzwe5e4fbRfQJbHgVZZX7mg/L7Oob
jxgw+QQVkqq5fNg8rFPbuYrAs4tQ8f0FPhy36HlQto7A2x/any4EPjBP9Gwd
EwIN4lZNFi3iQ07ctatJpgSuqLkQG/eXB8/0Jy6LWRDoJXW+mtfDg0+tLheD
kEDlof4skTc8+BVWGtm9kUCh3Qaluqc8mKWicHybJYGfxW3mTpTxQKfmqH/F
FgKv/Cl/oVHBA/Bp3r/EhsCu7cS9sFoeJMVlrni9jcDJ75wXDYye+u8G/Amw
I1Bj3DnJ7BcPzF6b1ck6MHgOvnsunM+HBFr6ctEuAsMXsGZe28SH3tmf9zg5
M/HfKkeyQ/hgYnBv6bgrgQnlpf6L7vKh56j1MwsPAs2npcgmzaVgXeJ84psn
gVplzjDTkgJWMdclxpvAbU6GA/JHKfj6vkRb14fA58ubM2qTKVg7GjNY78fw
xfDPh/iHFMQp7Xri709giveSIqtaCrpMtOLmBBL4cLzAdFcDBavdh3YWHiVw
x0y+cmodBbGnn6k5hjD1aK0SPVlGwadrCdTocQK9c30jvt2gwOCpx6P0kwQ+
a/T+oXOOgpivK6LNTxO48/QnnT9uFHSI/tv+NYLA7o1y1+1WUqCn1aQcfY7A
uVkeoVYMv85tvspdHEOg7cU2edl2PrQfOFz4KpZAVvGx3A6Gr8surI84fJFA
0i++8WE0HyJypGxk2ASGXpd1jNzP+EV9h+JDksC/bPEqrjUfllB3vu28RKDh
ctsoNObD6Vlheb8TCTy457YdaxUfWvStTl5JYfQSq3LWk/GzxXaKlmZXCKT0
v3wcZPA4FdQr+yWDwI70vX3Du/nw5lJR57lMAvuKpz0pjuSDZlFUjvZNAo/N
cBuYzvAzrM0+5OVtAkf1JiXtuvjQOKKOh7IJ/KbnN5apQIH6/EHp2XcZftQp
BJVupyDE+OmHB7kEHpnJ/PMvUlDvSt52yCfQ/82c6kPPKFAN3xM4UsDoRV42
f84IBcFX9UzTigj839lDFs0aNNRVTkiYlhI4Vq17q8iShoVfGlq7ygh8NZvT
utqDhiCR9Myzj5l+0wx8NgfQ8FzD75BWFZM/v7UyMJAGpU3G6+qqCfyglDP/
7QEaArxniPnVEpideeq6oj0NNefbm6TrCBwarI0KXE3DvDtZV/JfEXhaP2tn
tDQNh16FHLB/TaCmSFP8jm4KnvI2rRpuYs6ExfC8PAoUpOf+TWkhMPpuQMP6
UxT46vW8MnlH4IXnG+KXWlPw5H8PkzrfE6hjtisSGf+QCzy7L7KDwMrmqtKS
AT4cTLDT0/zM6O1I1ZnoJmY/PFQde95F4HfR0gdOxXyQeSeo9flKoLYKtEZm
8cFr+Aln5ncC/9yaeZV7kw9limz3vB8EOrS/G51i9DPLyF13Rz+Db4J0Vl0l
H/a5LPs1xGf8cJ2T8aNOPpScHK9KFhBYdvV1eos4BTMzXsUbDxIYsHnxpitG
FOx9kur0eYhACcnqhcuCKNhoYytmP0JgVkXXRfm7FCzu+JdXN0ogb8fZzs7v
FEgeLHQ1+8Po45HvNndVmnn/HhAvnCTwPe8a4exEQ/O5BQ91pxi/t/71L/ci
DYVzmnZfEyVxhbjH6j2lNKRcOys5dzqJF19PX1P4iYaTy9cWx0mQ+NUggt46
QsPu8j6Pf5IkUuURqCcuANySIR0iTeKHbbyc91IC0Hq//RFvNonG0cPlZtME
IOEl5uUhS6ImXbzl7U8a+IMlMu/lSTyQPeYd2k5DU4RfhY0iie7f7iw8WkhD
wSyVg9XzSXzTmtbveYGGpPQWuXXKJDqOLDXXdabhxJKYytxFJE7ShU5NWjS4
lxr5aaiRKCL567+wAQosNlMKqRokqo3H19k+oUCzNbN6ljZzv4b+sodNgcQ+
B/8oHRLPK7nXZHpSwBOIK40tIfFESJdOozkFjeHltQHLSby8K0HRS5OCAqmA
wO/6JO63c3RLkqUgKVV9oetKEtMdS4bWS1EQtrit7s1qEp1vGge2zaLArehC
8GZDEjc+/O0ZvpCpZ4OpaoURiSqdtHLvWgo0moX1ButJ3LSmad5uFwqm77kV
mmXG1CvjlNoYQ0E/31FjIZAYW5cyWM343esTUk0JG0hcRitNBg1RkC9ReUJi
M4lL/HJeNBvQcDkpSPu0FYm/w0I9Mo/QEKqp3fLTmsS6wnf7o+7T4FLwIdzH
lkSf2ipTtT4azCxYul3/I7F+3e6plYsEoNZo8c5hB4kvBh9Z3tkqADG3oYhX
DiQuVeS7VgUIgNuXtczCkcQMlpem4gUBNIS6thc5k5iV3qJXlSSAvGmzo5a6
keibnFRpkyKAhEvV+td3k+iwXGjbzBJAiFrIRwUPEsPMy+BbqABc8nTPx3uS
yC2XsCcdBWBq+nmliDeJP9Y57N2uJwDVerIz9CDJ/D/qewcnaBBz3hhH+ZJY
UDwedqGOBm7vyBrPwyTuNRu+uZ2koT747pf2ABJ1B+b5pzjScF9kD2tbEIlK
piUFuQz/E0hZo5pgEqdr+srXUhQcW/S8xyiUwce9by63igKne2FkXhiJpdKc
hJ4rFKw3Xr5e6xSJynk7bplFUKBS1/0j7TSJVqLHejUDKBDZdfmSTCSJ8iYD
k94+FPR+szSPOcfwe8MLb38m/jJwvH88mtHTi6IzRpEU3Pt7PykwlsTaFNld
zlcpIFn78EcciX03MjwGmf13dIEC7cZi+utellM1TMGuOy9TWwgSO1Y1NKjo
02BsGL7JKoFEvvFHI8XDNLSHb1wmnkjiz6xwUqWYwbtGSu55MokPjGbXjfyl
QUHq7WhUGondB8sm1C0FUGiX1r0hg8THK8dvrIkVwI4UjxcimSQ2RNSYTK8S
wECnzv2nN5h+B9ds+8QTAKklvBxxm8QzLONtaTOEoHeo5KR5NomNFVUBnYpC
aCg4vW8yh8TPR32GFRSE4De6acvjXBKbvqZeuyAmBEkL6RWn8kk0+Jj/0rZH
ANkxrQomDxn8V7h3G5UIYPPrKxOjRSRGNanq1J4RwHc5z57SUhLPWhW7fbUQ
gPr1gQdrnzD8UioDyTIaqn6UpvyqIvGaRFHo9+M07NGLOFP4jMTF71K7r5vS
MBls6X30OYkLtyvULJWiIb18lu3KlyQejT8eLdpDgbFI26qBehIvlLah1isK
PlhlKOU3kpgv2TZ3mPGH48T+Kf9mRv8JMhNrmP2n0LaUu7yVROmqfybDbRQU
Kv9s5Lcx/hKqp5s4SoG9Z1nR3Q8kXk3pqKvSpWHwTmS67yfGL7OlMs940UAK
rc7pdpHIPpo+bJFDg76hjC/3C6O/iLkXfw3RjL+8357VQ+JKc8ftBiiAQzVX
Db1/kPjJX2eDA1sAUlLei7T6SdwSa6z26J0AcuyWT+vhkyhLkr9/yAvBKmWI
d0PA6F3bLa3OSgg/OstbPAZJvBPu2fLGXwgxWuceqf4icUGq3Ial0ULQPGSd
2TVC4pqQm4qtcUJ4VjDn/NUxEm/nn1ycfUYI+0bbD7tPkAjKv1S99gvhn3mm
g/I/Ev9zVtmSbiyEqzEHTD6KcDDj93yVVAZf09d66mnTOHgvfvyNaa0APskN
SzhLcPB0YpxZO4PnCZfHAkUpDubXBVsNGQpg3vWotjZpDpoqa4npDdBQ8mPr
40QZDrbpjw1Ny6Nhl57cLQc5DrrNuHLhUTANQ8EdcXIKHLTONnFT28Tot/x6
YMs8Dl5tPqqTqE6DgYiPE2cBBwPyM/its2h4Y7XCfPsiDso1BKj8lqTBnxjR
mq3GwReuY0/2KdIws+3JzEYNDh6prAuoXEXDXeWYn/HaHKw0cpqY3E2Dtadt
x1ZdDoa2GdXvTmb85Y78U8llHMxMurEjtIOGGOHHrJd6HDzzwHDuDi1mvxne
ZMcacHDy9Od354MFUBPue8xyNQeXZwi2HqgRwL4aA7fphhwM6okR15jDzFNy
FGuNOJiU7ntb1FEI1+yqdKPWM/NLcn1/JUEIZinnZTaYc7AsstB+vEoInzq3
jUwBB22dXf52dAnh//uUOMk=
              "]]}, "\"\[VerticalSeparator]2,1,2\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]2,1,2\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1:eJxF0GlI0wEUAPClK1ySOs3wKI9G5FULTSpz80zRppKJVJSWx0wZm3fTqaU7
1Mw80073n6VGl1JYumyFjiz74BHJzANUiq6lbl41Wwfkew8ejx+P9+A9xzhe
ZKIBiUQK+5v/6lfNCiuIvcAk/Y/0phyPQNlbn1XzjdVsa9k0WKBoJpFlWvCv
emHYD8LQd9UKskarJSzAdvudg+cIGjh8WDk7Q3iAfauExgcyA8FUbXRbVXw4
mPmUfyjfLApMZCjujx05Cp4IGR/SBcWAEw/mquP6T4H95Evkfm4C2LhjkmQ7
yQa7zgVzvUuSwV6dNi8YBhxwa0jstpc8LvjZejM9tTQVbNPRPNrWkwbeKtSl
ya0ywDHulOripEy8zznsllKaBeYxIngcTTY48Eqxm2gnH6w0L2hcJ84Bn0nd
0ch6lwuWWVrUGpjmYV/1mEmLz8f5qcrRR0QB7h+kGRipzoI7uPLU6dpz4FKr
gpFc90LwrkGiIXgcPauTOi2KisCcUPnd445C/E+LR9lyH7rP6VU8K1kEnrPd
t6aILAart1B03+6hmwLm1aahErA7n8k4PY8WDNwU82uKweNXP1Sn0EvAlpmS
lSoVmpLmH5uWXQoeyjthJ3E8D27/GdWY9xp9+HqSvSu7DNzLGlk2MbsAXnRg
v7nzAO2T1B/nFFoOjumqjx7VoPd6CgKCKi+ChwX+Lmtr0FndFKryEvphxOUJ
v2tot5T2HEYz2kE607q7C02hJGymfULfjnA1nPqCDqrTfCbUaBGt8ImdFq1n
NETa6NGadFUJdWMFuLJTyhvYhKaTkqIrrNGc8gXaBnv0xxbz50YuaNH3kaZe
NzTNU3ZBQkef7KYfI3ui9UZLvj170DciFNuLvNDedWITPwb6/Rhr4bcP+g9K
cRxt
              "]]}, "\"\[VerticalSeparator]2,2,2\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]2,2,2\[RightAngleBracket]", 
            "Tooltip"]& ]}}, {}, {}}, {
       DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
        AxesOrigin -> {0, 0}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, DisplayFunction -> Identity, 
        PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
        DisplayFunction -> Identity, AspectRatio -> 
        NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
        Identity, Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
          AbsolutePointSize[6], "ScalingFunctions" -> None, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
               Part[#, 1]], 
              (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
               Part[#, 1]], 
              (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
        True, PlotRangePadding -> {{Automatic, Automatic}, {
          Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{
         "\"\[VerticalSeparator]1,1,2\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]1,2,2\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]2,1,2\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]2,2,2\[RightAngleBracket]\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
                "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], " ", 
    TemplateBox[{GraphicsBox[{{{{}, {}, 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1:eJxF0GlI0wEUAPClK1ySOs3wKI9G5FULTSpz80zRppKJVJSWx0wZm3fTqaU7
1Mw80073n6VGl1JYumyFjiz74BHJzANUiq6lbl41Wwfkew8ejx+P9+A9xzhe
ZKIBiUQK+5v/6lfNCiuIvcAk/Y/0phyPQNlbn1XzjdVsa9k0WKBoJpFlWvCv
emHYD8LQd9UKskarJSzAdvudg+cIGjh8WDk7Q3iAfauExgcyA8FUbXRbVXw4
mPmUfyjfLApMZCjujx05Cp4IGR/SBcWAEw/mquP6T4H95Evkfm4C2LhjkmQ7
yQa7zgVzvUuSwV6dNi8YBhxwa0jstpc8LvjZejM9tTQVbNPRPNrWkwbeKtSl
ya0ywDHulOripEy8zznsllKaBeYxIngcTTY48Eqxm2gnH6w0L2hcJ84Bn0nd
0ch6lwuWWVrUGpjmYV/1mEmLz8f5qcrRR0QB7h+kGRipzoI7uPLU6dpz4FKr
gpFc90LwrkGiIXgcPauTOi2KisCcUPnd445C/E+LR9lyH7rP6VU8K1kEnrPd
t6aILAart1B03+6hmwLm1aahErA7n8k4PY8WDNwU82uKweNXP1Sn0EvAlpmS
lSoVmpLmH5uWXQoeyjthJ3E8D27/GdWY9xp9+HqSvSu7DNzLGlk2MbsAXnRg
v7nzAO2T1B/nFFoOjumqjx7VoPd6CgKCKi+ChwX+Lmtr0FndFKryEvphxOUJ
v2tot5T2HEYz2kE607q7C02hJGymfULfjnA1nPqCDqrTfCbUaBGt8ImdFq1n
NETa6NGadFUJdWMFuLJTyhvYhKaTkqIrrNGc8gXaBnv0xxbz50YuaNH3kaZe
NzTNU3ZBQkef7KYfI3ui9UZLvj170DciFNuLvNDedWITPwb6/Rhr4bcP+g9K
cRxt
              "]]}, "\"\[VerticalSeparator]1,1,2\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]1,1,2\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1: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
wYe4mLnxmwZYv6f23iEOKnz6RimxTjbArJhXhYdPU+ELg8Xd3rcGuC+sUVKQ
8Kf2DNoYVxHrp/8mJl+nQrOroHhzN+FPZ19k1UcqdKWwbdCkGmAxaaDiOZUK
g+3znVXrBpieKSMtSLzfJjZ3ZOIuQ9w0ItQtdIGYB+WLAouPGGJ6wb1NCQQf
S94pWmdlDPE3TYHP9y0NVjPDed9qG2LlTVmBn+00YBh0WThhY4gTZiMvo+dp
sHGX7pcMH0P0VU9n52CgA7uaxIPDUYYY8XBcN28DHTgv73N8nGSIoxoMq9zE
+v53a5J7Xxti2r7fNTaEPt/U2ObYL4Y45O4VxU3YF+Kp7dvaaYh5n0OZVF/T
QFQ/91XkjCFWLRjJaBPzlmTE/VCmf4S9A7qpkzo0kC/217+8wwjD9hnobyH6
4aHWmcZkQSO8ccT52mgXcR/PmGuVyxjhX0+BIxXxVBhd/1Y7omuEC/FQ5WBJ
hco9cqrMDkaoZCxxwECQuG9P5lYKBBrhlaTKF19+zkGk8kFFlbtGKFEwzhvd
NAfOFjFlTmlGuIfjvtHevDnQIDPK3Sg0wjX/9LNKaXMgfINclN1ohHxOpzR9
UudgW+qYZP2YER6Ou/rwVuYc0PONPtBWjHDfeHY0rXgOmhuqxLazG+OZngSH
mz1z8G787BtRfmNk5tQWmlmfg/t/Xpw0kDJG0QX7h2dOUsGHY1+Ot7YxFhf+
N6FnTfQroZvHHtoao/J59Jog7g/PR0nrL/Mu4O4nGa+376GCXu7Wy421F3CP
7AZe+tAciFVdXp0fvIBV9nXLGa/ngLOf7rfzxwX0e6zQeSByDpa/W/8U22yC
XGohIi1Oc9C9uYVsxGuCLW7V/o0Gc1B4SHGBIm6CXUrpoi/V5iBR8r37IzUT
XJM70BOlPgfBOgJzBRdNsGe2+RS78RxYOTx07iWb4BE/lid+rnMAwayTfyJN
UOP5x5akqDk4dN/P7sATE2w3PJG/8moOmLKnh+XfmWDrIUmXz91zMF5uZvXf
VxNcvbs5hM5Khaquur6wfhOUXH+boHeWyBf9nNnzRRN86+CSkW5PzFsbXnVW
sppiKpzZ9+YuFVx5eI0m95vilhfBpbofqKApfrdl42lTlCf9OJ3URgVhDQZd
IRVT/OXUWLxCzNfsNl71GhamuH5fbuOZH8Q87jeq7kYyRX01OcOHhNwSbfj1
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
F4a+Mn2Xf6QPor9fIPPkEPHNtli0r+0FZe0GGusbL1S6m8FxjNwLqy+UXBbz
CH5ahyYy+HvhNVPReF+hF9bZ/zMUGe4B+4ui/1WXeiG3eP/ks6we4C7I6HtT
QcST9W4cJawHVLYwMG2o9UKBUF4GWaceIFuZHTNr9ELX5CO6t6x7IPntO51X
bV747cAxjdOuPVDHspXC2OOFn+/sj5KN6IFlE4ck40Ev1GawCv33tgf4cko/
Z415oZ96zodtcz2gs7Z3+t+0F3IJGfRYifRCkL4XuwHdC5X/eqcZ+vdCZlqd
RMaSF45kiIWMVfZC+y9+i9UVLxQiheZ83d4HDJqXw3TWiHi94yl+Y9QHwsmd
L54xk4n6phuF3e0D08VTjcubyEhpHku5+akPwpVv/NBgJ+OvmDceld198ObR
KHfKLjIqX/lY9HekD/pnzykscZFxJO2x4mpnH2ySf+ikykvGqoGV03c/9oHE
PfqdJH4yljTk6ySG98F/46p588fIGNmwPfYnEPUg+bRXSYSMi+J3Y42pvVBw
c5UhXpyMXkUlBw7c6YXxAcOjVCkyZl4cPi90pBfkwll9HiiR8QIY1z/R7wHX
LuvEaTUyDoyyiclRuyHueGG5rA4ZPauifCXudsOXyxxTMYZkjI3Z1NAk1w30
5kvbJkzJ+OPZwlLzahdwC1SJS1uR0cqPJ96ipgtU/HjN79iR0VJng8rUiy4g
1/ldGXEm45x+o/aZxC5IPtCSccaDjI67qsbUU7qgjnS84YY3Ga9EfRJxzu+C
5YprSwP+ZAzy7ji9a7AL+PYO7BMLIWOZRAwnJ2c36LiexYhrZOzesS4dadwN
gSV3HXujyHg/S39tMbkbMnbM3BaJJuPl7CZlW+I8rXaK76/eJ6Paf6r+8dI9
sJ6f1NMZT0ZJn4n9Mld7QJjt5/rxZDKe492ZxfalB0wv6hwJfU7G228/qh39
2QPhb15otWWS8filJU0Frl54w8zofTSX2O9saF3LsV7ov2CeEPSejHU+lqEK
gr2wKft9WVMBGU/NqXYybusFiX9bJ/lLCRmYXz8g+P9Pz3GrfwUZE48WxFx9
2gO3n5eJ1deQcfODM75g0AMFy1xmhxrJuCtvVzjjcjeMq5NDfdrIqPdTNDg6
pht2PPmWXtNNxlnrE7IsR7pBdkGgnmeQjIU2Q+2pRV3grBTynTRGxo1Kf2ru
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
Dho7Of/p7BHC/wGXQSM9
              "]]}, "\"\[VerticalSeparator]1,2,2\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]1,2,2\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1: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
tLp9atUXmTQtwkM3l+BOqmWSyU/SfohBBWS9S/DHkFCUtumLOw+ymzRfLYHr
cYu2z3998UOhS4N05BIsDJpNsVH6oaOUf7y92xKYxZn+sdjnh/wJt/6dNF+C
IXUTxiw6P6zp3LS2I70vyvTG3DOMfnhgnxnbXlLc0G4odfa4H4rfNbbXNFuC
K+EGhjYsfmh1uMUBSP0KZPXdnrP7oa4p16xB9BKc36MXsXDeD9mip0obipYg
rU4nk+uiH+rx+h0TI92fo4HaFQ4Cfvj6cOL6CdJ9iLym1fdSxA9lyKL3+kov
A8UfjaWVa35Ipyrrzee7DL7v1Cl4pfwwTrTt0fbrZVjzUGN2kSPNnzK9GP95
GWwEVAUKlP2QEPneqPfACox/U1b8ruGHAt+uTzXxrYD2ayWCgJ4fhu/UPx1V
XoF2B0U/d2M/jI3cFlkyXQEpToXYYgs/lDqz+FfWZgXKZuXy1m38MGJovq+D
sAKXsmTrhR398OEtvlNj2iuQY379k7erHyoIb7Foia/AKVaZH2VefljlWNoZ
yLICcaNSNH/8/TAs0z2F9vcy0CRKsl8N9kPTfRC52L4Mwbp45WYISR842CSY
tgybh0Gz+r4fWqwys7IQl8G5V9zh3wM/TDrvXjxA0mM2+tpteOyHL6QPyLqe
XAZj5atJQcl+qN8ynDZO8kPf/itFdel++P7TTPCH8SVQ+CDaRpHjh4xS8e0P
2peg9q7IlPRLPzzVdixDqmEJRKSE/9wt8MOjFw6k324ivRe7QozNJSS8dAvH
IvqW4Gy14P8oru54LN8vTElSSSIkCiUyMkpEnUNLSOurKIpEg1CJMl7vzvuS
USSRZJSkQSpZaZAUZe9R2e9qKCPV7/79+Xzu5znPuc91netcZ+XM4mCU567c
vXRkBFKCja1tyoOxXO7M1quzebDAzGg/pyIYQRJO1ZP+4v5cdbq6OhgHH27L
2XiUB2KPDLizPwZjxVYsFCf3C/LXT7dvCsaExNu/m1oIn2f+PG/SHowW/lE3
/GX4kHa9ZNeinmA8usG/P3EjH9asZuqI9wXjSJa1mc1ZPlRX24kPDQVjQe73
Bck3+XDQfUFbrYDgWxEq013Jhx9j7Q8ffw/GUx82vrj9hQ8R0ekRKWPBGJzz
Y9XwL4LP8hNujKlg1M89xZn8x4e8YiOzE+Ih+KnCyz39Lx+27J6Yt0syBP95
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
6w==
              "]]}, "\"\[VerticalSeparator]2,1,2\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]2,1,2\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1:eJxF0GlI0wEUAPClK1ySOs3wKI9G5FULTSpz80zRppKJVJSWx0wZm3fTqaU7
1Mw80073n6VGl1JYumyFjiz74BHJzANUiq6lbl41Wwfkew8ejx+P9+A9xzhe
ZKIBiUQK+5v/6lfNCiuIvcAk/Y/0phyPQNlbn1XzjdVsa9k0WKBoJpFlWvCv
emHYD8LQd9UKskarJSzAdvudg+cIGjh8WDk7Q3iAfauExgcyA8FUbXRbVXw4
mPmUfyjfLApMZCjujx05Cp4IGR/SBcWAEw/mquP6T4H95Evkfm4C2LhjkmQ7
yQa7zgVzvUuSwV6dNi8YBhxwa0jstpc8LvjZejM9tTQVbNPRPNrWkwbeKtSl
ya0ywDHulOripEy8zznsllKaBeYxIngcTTY48Eqxm2gnH6w0L2hcJ84Bn0nd
0ch6lwuWWVrUGpjmYV/1mEmLz8f5qcrRR0QB7h+kGRipzoI7uPLU6dpz4FKr
gpFc90LwrkGiIXgcPauTOi2KisCcUPnd445C/E+LR9lyH7rP6VU8K1kEnrPd
t6aILAart1B03+6hmwLm1aahErA7n8k4PY8WDNwU82uKweNXP1Sn0EvAlpmS
lSoVmpLmH5uWXQoeyjthJ3E8D27/GdWY9xp9+HqSvSu7DNzLGlk2MbsAXnRg
v7nzAO2T1B/nFFoOjumqjx7VoPd6CgKCKi+ChwX+Lmtr0FndFKryEvphxOUJ
v2tot5T2HEYz2kE607q7C02hJGymfULfjnA1nPqCDqrTfCbUaBGt8ImdFq1n
NETa6NGadFUJdWMFuLJTyhvYhKaTkqIrrNGc8gXaBnv0xxbz50YuaNH3kaZe
NzTNU3ZBQkef7KYfI3ui9UZLvj170DciFNuLvNDedWITPwb6/Rhr4bcP+g9K
cRxt
              "]]}, "\"\[VerticalSeparator]2,2,2\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]2,2,2\[RightAngleBracket]", 
            "Tooltip"]& ]}}, {}, {}}, {
       DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
        AxesOrigin -> {0, 0}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, DisplayFunction -> Identity, 
        PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
        DisplayFunction -> Identity, AspectRatio -> 
        NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
        Identity, Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
          AbsolutePointSize[6], "ScalingFunctions" -> None, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
               Part[#, 1]], 
              (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
               Part[#, 1]], 
              (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
        True, PlotRangePadding -> {{Automatic, Automatic}, {
          Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{
         "\"\[VerticalSeparator]1,1,2\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]1,2,2\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]2,1,2\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]2,2,2\[RightAngleBracket]\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
                "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], " ", 
    TemplateBox[{GraphicsBox[{{{{}, {}, 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1: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
bqT/uaqNmvHnMJ0+G1J/j3l7aWojP8tODoHYbMjia1T4bq2Nl56+8HXezIZc
q1fHnG5oo+QuXrfAq6+g6PGDhcl72qjyX1NMts4rKG/1rrBI1kYXDenrirKv
oJbK5P7nfG3c1XTPLW3vK2i+hFZ6DdpomFDL8bwsGzqdzgh3ftJGxhzyup9a
Ngw8Y6BTWdRG9afFAxwdL2G093t/w7Y23ty1N3RB9iVM7e7LwgM6+F/BYSu+
4ixYlCrzfX9WB7USGGI/n8+CVc9nqqKXdTAs3PWz8asX8DfrDnu+mg466b/1
tLj8AqhGHZfPW+mg57W0C6MjmbDzgEZtppcOkiecmA7HZ8JeRZHYU2E62DSg
wpbokQkH/Y/ZJSbooC3NnIKdUyawFfwTO/JGB6+p5Ye13c4EzpmJ3dG1Oph+
cVHcrzoTeI43DzH26+ARjfJF3VMvQEAr93XonA7e7i7TlM98AWIhMYE0Wzq4
euHtUxb1LJB676Plv08Xqdjtvp86/BI4uuc6ks/oYpnNxaN9e7OBes5Ytfqy
Lj4schs2P/UK6g9LKtDa6iKn2QzNfpfXkHkht/60ry6at8+yXbifC6FyJ2Xk
7+tiV7bFslnyG3AweVBln6GLfbmkLwSFPFD2oJYML9XFwvrM9D/ZecAX7lGW
3aGL1Iv2LJ/W8oApZUKsbUIXX6yPsGieyYelYt2ib+u6aOvgVKApng+d7Q1C
zHv1sNGnWMfjYj4UTIrmCXDpIS/qL4wy5kPMxosL2uJ6OJDwVZCtNw+8WI69
8lTTQwt9peF34Xmgz3OP+xFBD31/NY+tCeWBOG48L76hh47Gpw16st/AMQNn
rk8Revjpwr00tW+58NdlJOVPqh6+beax/i2WC8N31NnZ3ulha+dX1eDY11CZ
UJVwtU0PA8WjmW7seQ3PCgSOmX/VQ8Ojwle4M3IgqDn1ceAvPRR/tMMw0yYH
CGMsB1P36OPbcurNJq0ckPt9+2Ethz7W6bcDj1sOnNm7tnfykj4GzvrPMVbl
AP0Zuwg6FX28eozv0FWZ1zB7ZWD3OUt9ZCsMEan//RpatBVDFb310aVj5NXb
4VzIcSzd4XRPH1tMTvSNLLyBqCDeW/8908e4mzarI1F54PYkYTunUB9XP5fc
kxTJB81cRv+OZn38pVOidmosH4Qa/P9+H9VHfHNdbei/Ajg4vHRj/099zFik
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
8fhFdWoBGMdsbh1fIqOktlV46Po83E6yjjdbJWMSMSiPqmse/hoTCpLXySj8
MKNBO2ce3I9atXzZIuPPfLc62Yh5mO2zGOeg9cXHMn6xjh7zYBFj/tdqly8S
nvr/Y7Och35NM5Z0Jl+k7Vi3daC8L6p7TXknWXzRYpcFx04Krms1ljlz1BfD
75g6alvMw+VwI2O7E76YfKDJCSj98uQNPV5w+mKQOc+UUdQ8nNthcG/2nC8a
R40X1xXMQ3KNXhrPBUo9v+8RCcr9ORSoW+Yk5IsrB+LWjlHuQ8RVne5XYr54
gypqJ1l2AWj+as0vXvVFZXX5GwLkBSC/06Thl/HFBvGWRxuvF2DZS4PVTcEX
/xs3vxD7ZQHshNSF8lQp8yOqTLr2LMLId1XlFS1fVPh+bbxBYBF0X6sQhAx8
sWiz9tmQ6iK0Oin7epr6Yk3Ehti8+SLIcCtFF1pR/Dg9tyVvtwglUwrZa3a+
GN0/091GWISL6fK1os6+eN9f4Piw7iJkWl77fMPdF3VF/5zQkVyE4+xyP0pI
vjjsXNweeGIRYoZkGP76+WJKmmci4+8FYIiT5rwS7IseuyBirnUBgvXx8s0Q
XxSFfQ3CyQuwfgC0K/7zxYAlVvYTxAVw7ZJ0+veAwvecZ2EvxY+pqKu34LEv
tsnukXdnWwBT1SvxQQm+GNw0kDxCyUP37ssFNSm++O/zZPCHkXlQ+iDeQpPp
i1Yysa0PWueh+o7YuOwrX7RvOZIqUzcPYjKif+/k+aL8/yiu8rga3ydaJAkh
pZIiJaWFihaVmRKSbPmiKCJlKRWlaLndXfeWFkpS0kolS4S0SZSEaN8XtN8N
0Wb7Pb8/38/zvvPOM+fMmTM6s1PplUQv/q2VrXochDVzhxS49SOwotRo1czi
IPTgrnJYNjICyUGG1rblQaiz0G/Ltdk8WGhqcIBTGYTZknCmnvQX9+fqszU1
QYj5W3M3HueB2CN97uyPQahgi4Xi5H6Bvnrp9k1BKEy4/auphfB55s8LRu1B
GOMbedNXhg+pN0p2L+4JwocbfPsTNvJh3VqmtnhfEK64ZW1qe44PNTXbxIeG
gvBL3veFSWl8OHRkYVutIAidKkNkuqv4MDre/uDx9yC8+WHji9tf+BAelR6e
PB6E+bmjq4fHCD4rTrkyfhN8885wpv7xIb/YwPSUeDDOrvI4kv6XD5sdJuft
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
mPB/+ns7qg==
              "]]}, "\"\[VerticalSeparator]1,1,2\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]1,1,2\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1:eJxF0GlI0wEUAPClK1ySOs3wKI9G5FULTSpz80zRppKJVJSWx0wZm3fTqaU7
1Mw80073n6VGl1JYumyFjiz74BHJzANUiq6lbl41Wwfkew8ejx+P9+A9xzhe
ZKIBiUQK+5v/6lfNCiuIvcAk/Y/0phyPQNlbn1XzjdVsa9k0WKBoJpFlWvCv
emHYD8LQd9UKskarJSzAdvudg+cIGjh8WDk7Q3iAfauExgcyA8FUbXRbVXw4
mPmUfyjfLApMZCjujx05Cp4IGR/SBcWAEw/mquP6T4H95Evkfm4C2LhjkmQ7
yQa7zgVzvUuSwV6dNi8YBhxwa0jstpc8LvjZejM9tTQVbNPRPNrWkwbeKtSl
ya0ywDHulOripEy8zznsllKaBeYxIngcTTY48Eqxm2gnH6w0L2hcJ84Bn0nd
0ch6lwuWWVrUGpjmYV/1mEmLz8f5qcrRR0QB7h+kGRipzoI7uPLU6dpz4FKr
gpFc90LwrkGiIXgcPauTOi2KisCcUPnd445C/E+LR9lyH7rP6VU8K1kEnrPd
t6aILAart1B03+6hmwLm1aahErA7n8k4PY8WDNwU82uKweNXP1Sn0EvAlpmS
lSoVmpLmH5uWXQoeyjthJ3E8D27/GdWY9xp9+HqSvSu7DNzLGlk2MbsAXnRg
v7nzAO2T1B/nFFoOjumqjx7VoPd6CgKCKi+ChwX+Lmtr0FndFKryEvphxOUJ
v2tot5T2HEYz2kE607q7C02hJGymfULfjnA1nPqCDqrTfCbUaBGt8ImdFq1n
NETa6NGadFUJdWMFuLJTyhvYhKaTkqIrrNGc8gXaBnv0xxbz50YuaNH3kaZe
NzTNU3ZBQkef7KYfI3ui9UZLvj170DciFNuLvNDedWITPwb6/Rhr4bcP+g9K
cRxt
              "]]}, "\"\[VerticalSeparator]1,2,2\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]1,2,2\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1:eJxF0GlI0wEUAPClK1ySOs3wKI9G5FULTSpz80zRppKJVJSWx0wZm3fTqaU7
1Mw80073n6VGl1JYumyFjiz74BHJzANUiq6lbl41Wwfkew8ejx+P9+A9xzhe
ZKIBiUQK+5v/6lfNCiuIvcAk/Y/0phyPQNlbn1XzjdVsa9k0WKBoJpFlWvCv
emHYD8LQd9UKskarJSzAdvudg+cIGjh8WDk7Q3iAfauExgcyA8FUbXRbVXw4
mPmUfyjfLApMZCjujx05Cp4IGR/SBcWAEw/mquP6T4H95Evkfm4C2LhjkmQ7
yQa7zgVzvUuSwV6dNi8YBhxwa0jstpc8LvjZejM9tTQVbNPRPNrWkwbeKtSl
ya0ywDHulOripEy8zznsllKaBeYxIngcTTY48Eqxm2gnH6w0L2hcJ84Bn0nd
0ch6lwuWWVrUGpjmYV/1mEmLz8f5qcrRR0QB7h+kGRipzoI7uPLU6dpz4FKr
gpFc90LwrkGiIXgcPauTOi2KisCcUPnd445C/E+LR9lyH7rP6VU8K1kEnrPd
t6aILAart1B03+6hmwLm1aahErA7n8k4PY8WDNwU82uKweNXP1Sn0EvAlpmS
lSoVmpLmH5uWXQoeyjthJ3E8D27/GdWY9xp9+HqSvSu7DNzLGlk2MbsAXnRg
v7nzAO2T1B/nFFoOjumqjx7VoPd6CgKCKi+ChwX+Lmtr0FndFKryEvphxOUJ
v2tot5T2HEYz2kE607q7C02hJGymfULfjnA1nPqCDqrTfCbUaBGt8ImdFq1n
NETa6NGadFUJdWMFuLJTyhvYhKaTkqIrrNGc8gXaBnv0xxbz50YuaNH3kaZe
NzTNU3ZBQkef7KYfI3ui9UZLvj170DciFNuLvNDedWITPwb6/Rhr4bcP+g9K
cRxt
              "]]}, "\"\[VerticalSeparator]2,1,2\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]2,1,2\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1: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
CxJW56v1iWVfgZ+jHcbPUkgIyjmbNLKuQdjPR0Xc6ST8ZpJd4+J8E5BdWNjz
JcsP4/y3qJdM4TNvsdPSaxLyRlkp1f8wA3/xW1122ST84hrVf27RHJTl1xyc
yCXh95wDY82XLGDgeJK/0VsS1s8msJ1eNQfa2dPTHQUkNA96fUCM5R+5a9/O
nikmYdaPuXkpX1PovOOXUlZKQpVjOwLnTG+Bq5Mih3IFCWPdadqtJ2/AblqX
eUYVCeeM63QWRa9CfZBzxe5aEgr/8I52Ub4M9vEiO8LqSKiNg7zxUbqwLavE
nbeR5Ucpi9u3tpyFsjKTj7RmEq7Ndvi2+dtJsGxZq/KnlYSH3x33NOPUhP/6
X4Q4dLD4CeZ/XHhYHXK/nZn73MV6bz6r3Tkki2C0PKV36z0Ji5V++6VoA6zd
GPCq+wMJ5W4tlf/uVYO0rUrc5/pIODW8TVpwSg0uSfXcrRwg4a6EP9fevQRY
OvT4ncowa//hNFuRJoRYTdE9r0dZ75dQh0r3aw04damMsmeChDJr69SbvpyE
GROzoYjPJDSZv1nT+uksPLNbrybwjYQPkluDSyf04AQhJcJ7msX3fTh84p4+
jPnqLK3OkpCR951HeO46+EbMGDz6yXrfLV56NCeZwMf8QwJmCySsqz+j+jny
DpDfvbfrXWL5KTuVnXONDUj3uDZf+MPy6xMZm1De+9A2JiZbs8p631zLlOCs
PTjPlXsfZyfjE7IB7+nDD0B8jcVE1loyJmnxJ18veQC1fBu0pDnION/fsT9o
8AHc25EWF81JRvecHK2quAcgqHD+n+AmMnKqvda1538ARarfjXz+I+PjGHf2
aXV7MNMJKmTnI+NgeOvKy6D7wHVdeZuLABnXd65bzCDZQpbVh0czgmT88OWV
zMZH1mDo7N5psZWM++WNitICrYCNvkPxkzAZRdSauSK+W0JycKXfRVEyKp7Y
Z2UQfhsuJNyeeidOxiXDiAXOpxbwO4vzrNouMm7Mdnhk22IOUeXpybkSZMwS
cFtbdNoctFovrJeVImNg/YH01d9mMNX/wyxOmoW/obV7vssMgqaCy7fKknH1
ZN5k97gZHFs5Iu4nz7rv2R12FofNYWTjJ7d1B8h4dEU/ZM97c2BsI3xwPUhG
6SOzCVmjFmCbEMgtdZiMfXZ+r6ciLeGCQjK0HyGjnsm+XHfuu6BYUOTgfoyM
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
0KU8+6kKIXT37Bj/CxwUt/L73dkrhP8DGKQpTw==
              "]]}, "\"\[VerticalSeparator]2,2,2\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]2,2,2\[RightAngleBracket]", 
            "Tooltip"]& ]}}, {}, {}}, {
       DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
        AxesOrigin -> {0, 0}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, DisplayFunction -> Identity, 
        PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
        DisplayFunction -> Identity, AspectRatio -> 
        NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
        Identity, Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
          AbsolutePointSize[6], "ScalingFunctions" -> None, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
               Part[#, 1]], 
              (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
               Part[#, 1]], 
              (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
        True, PlotRangePadding -> {{Automatic, Automatic}, {
          Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{
         "\"\[VerticalSeparator]1,1,2\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]1,2,2\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]2,1,2\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]2,2,2\[RightAngleBracket]\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
                "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], " ", 
    TemplateBox[{GraphicsBox[{{{{}, {}, 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1: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
vnfX+F9g1u3s/3R/HIL/Aw6JLzY=
              "]]}, "\"\[VerticalSeparator]1,1,2\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]1,1,2\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1:eJxF0GlI0wEUAPClK1ySOs3wKI9G5FULTSpz80zRppKJVJSWx0wZm3fTqaU7
1Mw80073n6VGl1JYumyFjiz74BHJzANUiq6lbl41Wwfkew8ejx+P9+A9xzhe
ZKIBiUQK+5v/6lfNCiuIvcAk/Y/0phyPQNlbn1XzjdVsa9k0WKBoJpFlWvCv
emHYD8LQd9UKskarJSzAdvudg+cIGjh8WDk7Q3iAfauExgcyA8FUbXRbVXw4
mPmUfyjfLApMZCjujx05Cp4IGR/SBcWAEw/mquP6T4H95Evkfm4C2LhjkmQ7
yQa7zgVzvUuSwV6dNi8YBhxwa0jstpc8LvjZejM9tTQVbNPRPNrWkwbeKtSl
ya0ywDHulOripEy8zznsllKaBeYxIngcTTY48Eqxm2gnH6w0L2hcJ84Bn0nd
0ch6lwuWWVrUGpjmYV/1mEmLz8f5qcrRR0QB7h+kGRipzoI7uPLU6dpz4FKr
gpFc90LwrkGiIXgcPauTOi2KisCcUPnd445C/E+LR9lyH7rP6VU8K1kEnrPd
t6aILAart1B03+6hmwLm1aahErA7n8k4PY8WDNwU82uKweNXP1Sn0EvAlpmS
lSoVmpLmH5uWXQoeyjthJ3E8D27/GdWY9xp9+HqSvSu7DNzLGlk2MbsAXnRg
v7nzAO2T1B/nFFoOjumqjx7VoPd6CgKCKi+ChwX+Lmtr0FndFKryEvphxOUJ
v2tot5T2HEYz2kE607q7C02hJGymfULfjnA1nPqCDqrTfCbUaBGt8ImdFq1n
NETa6NGadFUJdWMFuLJTyhvYhKaTkqIrrNGc8gXaBnv0xxbz50YuaNH3kaZe
NzTNU3ZBQkef7KYfI3ui9UZLvj170DciFNuLvNDedWITPwb6/Rhr4bcP+g9K
cRxt
              "]]}, "\"\[VerticalSeparator]1,2,2\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]1,2,2\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1:eJxF0GlI0wEUAPClK1ySOs3wKI9G5FULTSpz80zRppKJVJSWx0wZm3fTqaU7
1Mw80073n6VGl1JYumyFjiz74BHJzANUiq6lbl41Wwfkew8ejx+P9+A9xzhe
ZKIBiUQK+5v/6lfNCiuIvcAk/Y/0phyPQNlbn1XzjdVsa9k0WKBoJpFlWvCv
emHYD8LQd9UKskarJSzAdvudg+cIGjh8WDk7Q3iAfauExgcyA8FUbXRbVXw4
mPmUfyjfLApMZCjujx05Cp4IGR/SBcWAEw/mquP6T4H95Evkfm4C2LhjkmQ7
yQa7zgVzvUuSwV6dNi8YBhxwa0jstpc8LvjZejM9tTQVbNPRPNrWkwbeKtSl
ya0ywDHulOripEy8zznsllKaBeYxIngcTTY48Eqxm2gnH6w0L2hcJ84Bn0nd
0ch6lwuWWVrUGpjmYV/1mEmLz8f5qcrRR0QB7h+kGRipzoI7uPLU6dpz4FKr
gpFc90LwrkGiIXgcPauTOi2KisCcUPnd445C/E+LR9lyH7rP6VU8K1kEnrPd
t6aILAart1B03+6hmwLm1aahErA7n8k4PY8WDNwU82uKweNXP1Sn0EvAlpmS
lSoVmpLmH5uWXQoeyjthJ3E8D27/GdWY9xp9+HqSvSu7DNzLGlk2MbsAXnRg
v7nzAO2T1B/nFFoOjumqjx7VoPd6CgKCKi+ChwX+Lmtr0FndFKryEvphxOUJ
v2tot5T2HEYz2kE607q7C02hJGymfULfjnA1nPqCDqrTfCbUaBGt8ImdFq1n
NETa6NGadFUJdWMFuLJTyhvYhKaTkqIrrNGc8gXaBnv0xxbz50YuaNH3kaZe
NzTNU3ZBQkef7KYfI3ui9UZLvj170DciFNuLvNDedWITPwb6/Rhr4bcP+g9K
cRxt
              "]]}, "\"\[VerticalSeparator]2,1,2\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]2,1,2\[RightAngleBracket]", 
            "Tooltip"]& ], 
          TagBox[
           TooltipBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6], 
              Thickness[Large]], 
             LineBox[CompressedData["
1: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
uTaDK1IMnZuwxH+6kjsvlpuBW9gqLHPJEjt7mP7tqLfA3IVaEfYNS6SgYhF9
nNwC6adPLTzfs8TFs0oGLc0tYMx0O+EktRVO3n75z2WoBZgPjcgnH7HC6GS/
qOVPLdBHJrbNfMoKmf10r3KntEDM1pPXT7is0Pfjif1+ei2guLpucETICuOt
m7Z0/jUDxYwmdayEFbaHRbCcfNIMNcN55XQKVvjaONK17kwz3OqivRGtZYU5
3/il/fM+gUij0/GDplZ4qSjgmzt8gp/lrW3h9lZY/M3KLnioCXLzOG9Relqh
CUWuz9/bTeCYFcoTctsKu04mrQaLNMHZlJlR0nArJM3lyBylaoKJR1LRgbFW
mLS9b2PlRyOkhKWJ76ZY4W76I5bE342gf/vfN79XVvjWsTq39lgTHPY0fraV
b4WGfHaSV/SboNO+XNWn0goXbl90b8hvgkhT5r1fTVbo3JJSTHvmE8hq+7x3
77HCI8U5LmVvPgGpYr/Z9xErlKrcUraRaQbfyw9rltaskEN2ynEntgWELqy6
2e9Y4ej3OWv3a63wnU359ByFNc7n7Zu6N94KOYw5PVb/WWMl9fKtfI82sKXZ
f2eSxRqLAooiv/1sA3YyWwGzs9YoekLMlM6wHcZ+10+NXrLG779iPh/LbIeE
b6fjDK9YI91cp3hAZztoTwdKf5axxrAPxqSyn9uBbnjsl46aNbKYnftxuq4d
WjuvZvYZWONMGqe4SUw7hDYkamtYW6OpZyN7MbaDZPnvfV0u1jhqZaB4fLwN
RC3nhRJ8rdF+10TLxqsN+KiHrC3uWOMl6jeL1WRtcL6gKZ47yho9UjzvR8W0
AqthScOvx9ZYH7fOynWyFY6SZa1XPrfG1tRzCfmFLUCT8/hM6Gtr3Dv44NNn
3RYg17ynrVZojSaLYWQN1C3wZ9srhLmKON7KrrnW2ww/0q2LJpusUXBJkP5U
QTMsKGjP5HRb44LrFxf5nGaY+CF9xOuLNcZ7UF6LrWyGoURBGfEZoj/PGSsU
FpuhU5LDi3LVGjUf8zZ+vdQCTYsMmV2/rZFRkFd7PqYFqh6R9SeQ2qCV0KMw
pn2tUCT2k9zyoA0qTdHUaka1wpvJScELR22Q9tZuShFHG2RE9Fits9rgwVKn
1uzGNkjkr42r4rRB9ovXRWmc2+HhcF59qIANMikynjU40gFhwWm/1K7ZYI3L
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
XT2Ti+t1huDLonrQaw55XJrNxedfWtpffa2DpY/Z8ftucXHRXFf7juI6WHjh
0n9Tt7m4ZKaH++KbdSB3/OaatDyyn7mt7n1mHcza8kTN7j6p/10Dc/0f1oGY
wZuxzodcnLsM1zR8qoNx6abayAIuir+/vNj0Xx18G+y7o/aUi2Ka0/hyq+th
4M1PVkkRF2UdM7cHUuqhK3uGl+dzLmaDcMeHynpooius/lvKxXy7yDFXhQao
8Vomf+0l4Z+7w+aZXg3wxm6V0OY1F+26I+e2ZDdA6aK1lR1vuMjnWr4TdjfA
48mdmRHvuMgJeLGwcW4j2Kzd4CF6z8U9DXlXV61ohPJ4W8UDNVyc9/oupdm8
EZzajD81fOJioJ59QZZJI9RoaXPX13PRao7JERtSHzsDFzo+a+Si8ruMiGlj
DdBeJDOl38LF+VSb/bIvG+CAxPTC9DYu7hj43rQisgEGN48dl+skeGlqluUY
NMCxFJ4eq5uLK/1fv9rRWA8/v3b3jX0m579b6e0YWg8Rhg3pR3rJ+1k01eeK
9TDtTKV7Zz8XHx/84SL2tA6iXz1fsHWIiwzOxU8We+tgnszD6nIeF+l+B5Zu
kqyDS243zq4SctF6zvzBxme1sCgrxT7nG+Hr7zvLxcJrIVNw7vfCH1ycoxDQ
yXSqBV1L+uNzP7k4+7CSebpWLTyghwSKjXPxRfEPzkzZWjCvPqJ7cpKL7OfO
h75L18Jzpf1f+/5wUU5zX8tshVpYc2DHNbd/XPw7O6SKYVALVXnrd78Xj8Gp
BqOjUjtqYeuY9Xw7iRjsLWfa1zFqocne6P0DyRgcW5PgfrekFjxjtVias2Jw
5X9zE2dO1UJvkzJcmh2D80vu7ZjuUAdHNOZOSMnEYNabi6vi2YQ//uL54bIx
6PnqggW9sg5Cn/wMEMrFoLLXt65iiXqYEhvW9laIwdk+v0rWWdYDc2NXT71S
DCrFzr0U7lUPO1L9Fuv5xmBKa4d3P8nPW5fW8f81TObhUOdxHLcl1ziLlG1b
UYlcWSxFn0+UrFWObCnJETmqLVY5k6uym+9vbCRXKA2DiBnGjBnjSJawrNxH
JFRSiWRTq/X363nez/t5Pe+3rHwCrnzVpirKbYWPqqdaCksSUP+LZojvpUYA
n3bPbTYExb1ypV6Z1UFyfJZuiy3BV7dtfl8/WQsvC84unrUj+K3gjrJRdC2Y
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
QS5b
              "]]}, "\"\[VerticalSeparator]2,2,2\[RightAngleBracket]\"", 
            LabelStyle -> "TextStyling"], 
           Annotation[#, "\[VerticalSeparator]2,2,2\[RightAngleBracket]", 
            "Tooltip"]& ]}}, {}, {}}, {
       DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
        AxesOrigin -> {0, 0}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, DisplayFunction -> Identity, 
        PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
        DisplayFunction -> Identity, AspectRatio -> 
        NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
        Identity, Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
          AbsolutePointSize[6], "ScalingFunctions" -> None, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
               Part[#, 1]], 
              (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
               Part[#, 1]], 
              (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
        True, PlotRangePadding -> {{Automatic, Automatic}, {
          Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
       FormBox[
        TemplateBox[{
         "\"\[VerticalSeparator]1,1,2\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]1,2,2\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]2,1,2\[RightAngleBracket]\"", 
          "\"\[VerticalSeparator]2,2,2\[RightAngleBracket]\""}, "LineLegend", 
         DisplayFunction -> (FormBox[
           StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False], TraditionalForm]& ), 
         InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], 
                "}"}], ",", 
              RowBox[{"{", 
                RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
              RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
              RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
              RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
         Editable -> True], TraditionalForm], TraditionalForm]},
     "Legended",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"], 
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, GridBoxItemSize -> Automatic, 
       BaselinePosition -> {1, 1}]& ),
     Editable->True,
     InterpretationFunction->(RowBox[{"Legended", "[", 
        RowBox[{#, ",", 
          RowBox[{"Placed", "[", 
            RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.755329028102186*^9, {3.7553290582142143`*^9, 3.755329119636959*^9}, 
   3.755329249750143*^9, 3.7553310368704576`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"photon", " ", 
   RowBox[{"count", ":", 
    RowBox[{"3", "~", "15"}]}]}], ",", 
  RowBox[{"2", "~", "9"}], ",", 
  RowBox[{"0", "~", "1"}]}]], "Input",
 CellChangeTimes->{{3.7553295950957947`*^9, 3.755329689015143*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    SuperscriptBox["p", "2"], ",", 
    RowBox[{"2", "p", 
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}]}], ",", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}], "2"]}], "}"}], "/.", 
  RowBox[{"p", "\[Rule]", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "t", "]"}], "2"]}]}]], "Input",
 CellChangeTimes->{{3.75532943455545*^9, 3.7553294814849863`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Sin", "[", "t", "]"}], "4"], ",", 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "t", "]"}], "2"]}], ")"}]}], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "t", "]"}], "2"]}], ")"}], "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.755329482047844*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Sin", "[", "t", "]"}], "4"], ",", 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "t", "]"}], "2"]}], ")"}]}], ",", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "t", "]"}], "2"]}], ")"}], "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7553293569409647`*^9, 3.7553294245730963`*^9}, {
  3.755329493924711*^9, 3.7553295227704887`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{0, 2 Pi}, {0., 0.9999999999999671}}, {{0, 6.283185307179586}, {
        0., 0.9999999999999671}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.755329502540614*^9, 3.755329523244031*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"T", "=."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"defs", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "\[Delta]"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", 
           RowBox[{"-", "\[Delta]"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "\[Delta]"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", 
           RowBox[{"-", "\[Delta]"}]}], "}"}]}], "}"}], ",", "T"}], "}"}], 
     "}"}], "/.", 
    RowBox[{"\[Delta]", "\[Rule]", "10"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{"EffectiveHamiltonian", "@", 
    RowBox[{"Hamiltonian", "[", 
     RowBox[{"defs", "/.", 
      RowBox[{"T", "\[Rule]", "10"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "\[LeftDoubleBracket]", 
   RowBox[{"1", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"part", "=", 
   RowBox[{"Part", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Addr", "[", 
       RowBox[{"1", ",", "1", ",", "0"}], "]"}], ",", 
      RowBox[{"Addr", "[", 
       RowBox[{"1", ",", "2", ",", "0"}], "]"}], ",", 
      RowBox[{"Addr", "[", 
       RowBox[{"2", ",", "1", ",", "0"}], "]"}], ",", 
      RowBox[{"Addr", "[", 
       RowBox[{"2", ",", "2", ",", "0"}], "]"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"EvolutionPlot", "[", 
  RowBox[{"H", ",", 
   TemplateBox[{RowBox[{"1", ",", "1", ",", "0"}]},
    "Ket"], ",", "t", ",", "part", ",", 
   RowBox[{"Method", "\[Rule]", "Constant"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"EvolutionPlot", "[", 
  RowBox[{"H", ",", 
   TemplateBox[{RowBox[{"1", ",", "2", ",", "0"}]},
    "Ket"], ",", "t", ",", "part", ",", 
   RowBox[{"Method", "\[Rule]", "Constant"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"EvolutionPlot", "[", 
  RowBox[{"H", ",", 
   TemplateBox[{RowBox[{"2", ",", "1", ",", "0"}]},
    "Ket"], ",", "t", ",", "part", ",", 
   RowBox[{"Method", "\[Rule]", "Constant"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"EvolutionPlot", "[", 
  RowBox[{"H", ",", 
   TemplateBox[{RowBox[{"2", ",", "2", ",", "0"}]},
    "Ket"], ",", "t", ",", "part", ",", 
   RowBox[{"Method", "\[Rule]", "Constant"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.723156586423044*^9, 3.7231566222308173`*^9}, {
  3.723156705020296*^9, 3.7231567291498604`*^9}, {3.755331060679771*^9, 
  3.755331061245503*^9}, {3.755331140727207*^9, 3.755331183655624*^9}, {
  3.755331221569615*^9, 3.755331231927639*^9}, {3.755392005194868*^9, 
  3.755392007424973*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox["\[Pi]", "10"]}], "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox["\[Pi]", "10"]}], "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", 
      RowBox[{"-", 
       FractionBox["\[Pi]", "10"]}], "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0"},
     {"0", "0", "0", 
      FractionBox[
       RowBox[{"3", " ", "\[Pi]"}], "10"], "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["\[Pi]", "10"]}], "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["\[Pi]", "10"]}], "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["\[Pi]", "10"]}], "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["\[Pi]", "10"]}], "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["\[Pi]", "10"]}], "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["\[Pi]", "10"]}], "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", 
      FractionBox[
       RowBox[{"3", " ", "\[Pi]"}], "10"], "0", "0", "0", 
      FractionBox[
       RowBox[{"3", " ", "\[Pi]"}], "10"], "0", "0", "0", "0"},
     {"0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["\[Pi]", "10"]}], "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["\[Pi]", "10"]}], "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["\[Pi]", "10"]}], "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["\[Pi]", "10"]}], "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["\[Pi]", "10"]}], "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["\[Pi]", "10"]}], "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", 
      FractionBox[
       RowBox[{"3", " ", "\[Pi]"}], "10"], "0", "0", "0", 
      FractionBox[
       RowBox[{"3", " ", "\[Pi]"}], "10"], "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["\[Pi]", "10"]}], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["\[Pi]", "10"]}], "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["\[Pi]", "10"]}], "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", 
      FractionBox[
       RowBox[{"3", " ", "\[Pi]"}], "10"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {16, 16}, 0, {
     1, {{0, 1, 2, 3, 4, 6, 8, 10, 12, 14, 16, 18, 20, 21, 22, 23, 24}, {{
       1}, {2}, {3}, {4}, {5}, {9}, {6}, {10}, {7}, {11}, {8}, {12}, {5}, {
       9}, {6}, {10}, {7}, {11}, {8}, {12}, {13}, {14}, {15}, {16}}}, {
      Rational[-1, 10] Pi, Rational[-1, 10] Pi, Rational[-1, 10] Pi, 
       Rational[3, 10] Pi, Rational[-1, 10] Pi, Rational[-1, 10] Pi, 
       Rational[-1, 10] Pi, Rational[-1, 10] Pi, Rational[-1, 10] Pi, 
       Rational[-1, 10] Pi, Rational[3, 10] Pi, Rational[3, 10] Pi, 
       Rational[-1, 10] Pi, Rational[-1, 10] Pi, Rational[-1, 10] Pi, 
       Rational[-1, 10] Pi, Rational[-1, 10] Pi, Rational[-1, 10] Pi, 
       Rational[3, 10] Pi, Rational[3, 10] Pi, Rational[-1, 10] Pi, 
       Rational[-1, 10] Pi, Rational[-1, 10] Pi, Rational[3, 10] 
       Pi}}]]]]], "Output",
 CellChangeTimes->{
  3.7231566233416643`*^9, {3.7231567057214384`*^9, 3.7231567173345547`*^9}, 
   3.723156877798854*^9, 3.723156960275408*^9, {3.755331157111493*^9, 
   3.755331184132957*^9}, 3.755331232436242*^9, 3.7553920149934177`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wpduOAQw+2LPffqT+Vn6nPYy/8NT8wtfy
J+H8des7b+fo3YLz0+0vznxT9BjOz3uq+XjLupdwPpdii/p9iw9wfp/Aaa2F
CZ/h/KTbIfuZz3yD8wuPtiTlq/+C8zcW8ARLeP5FuKc6+5VBOIMDjN80/0/g
lzeMcD7D5QcOe6qY4Xy1krSKEC1WOP/J1+lh3HvZ4Hyvp1m1kwo54Hy/JxO0
5eS4HP79B4H39q8OJzWcWMsNl9cTvCbrHM8L53PZf02885kPznd/G/VdKVQA
rv/GoRTGKB1BuPzWjiNxCl8R/DTW0gfnzgnB+clF1Vt5ZgnD+frp2ud8EkXg
/PNCOtyllqJw/u51TbN1mMXg/GpGrYAzdxF8rjtVHnlbxOH8p8sUp8yvkYDz
p2hIsuwMlYTzJ8xKO56oIAXnR02JPcfzHMH/4bL05/x90nD+46dOFYfaZeD8
RbaG0mcTZeH8ta2lgum6cnB+e2iyN/NXOXj4mN5ZuLL9rDxcfobm7LVnvRXg
/PoDvTO8dyL4vtKhS0+pKML5jnnHowU7Efz5MkkqZ74i+CqHl0/zi1ZC+E/3
kNalfQh+2meWiye1lOH8pI2fFDr7EfwJl3h6jxxH8Pd9Vvv5/z+CDwCNCAVR

           "]]}, "\"\[VerticalSeparator]1,1,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]1,1,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJxFz2lI0wEYBvDZtGLOcFqmqdt/Ji7nkX4IMvJIg8yLTJcw6djUzfJKcWBq
ZabpEG3V8GQMNQ0RZ8YM7FimpnktdGXRjMQ5RFPQ1tKptQryfV94ePh9e14m
P+tsyg4SiRT9N/9adoO/0z+5Ioj0/wY0RFQCcTl42+ZB1W2CuAaW9VYyrAgx
OD1QlLHGqANrNlOlK4w28C7tLGuZ0QNuHJFnf2MMgxWdYm2672ewMHiibilH
B87Ue+qUigUwhVnC+np0BVxlO8puvGQA87Xxr8hjP8HZb0r4WawNcNdVapzj
6V+4pyBt0S+BFLLtYvlW7I8lCzBJMxPyIp8M9sgV5MWzrcBzxppz1i93giP0
V67fz94NjpmTeNHpFPBiP7/obYc12Jc25Rp20QZMCTbypg17wKeWuWtuHFvw
p75kC643DdxdPnCBMKIFVqIZtdoOnJRT0E2ttwcfFnqpo3h7we/svK1FAfvA
zxXFDd5kB3CBBfvM2Bc0ZTo/PFO5H6xvZUrlhY5g6SEnyx6OE1hSLxjiEQfA
XOl5NXUevX6yxSRXOYN1+tC8vjIXcFOgv/M4zxXcUSqiCX3o4DJOUiTZiD4y
3dhWNs4A13o2dIxHEuCbvZW1kT3oaGdOy4g7E3wicyiRJkbLXfjuY0a0e/+j
6phEN/zPp489qUILDJYTw+yDYH7Xd0J8F51eHLcVcQ8tilN+pD5AlxtFVZJq
tCLAtFkjQ5tem6da29GSSWrlwBC6vjkj9c4wujlXHRY+in7qINkYVaOnufap
mg9ols4pbFaH9lPm0x/q0cdKtaaUeXQUS/Z4YRGdk0bQV1fRhcdvmZ4Y0KU2
s+9zjejazuaK9XV0U5Gl8NkGuj02JbRwC610G3QN+o1WGTxMZjP6DwbEFmI=

           "]]}, "\"\[VerticalSeparator]1,2,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]1,2,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJxFz2lI0wEYBvDZtGLOcFqmqdt/Ji7nkX4IMvJIg8yLTJcw6djUzfJKcWBq
ZabpEG3V8GQMNQ0RZ8YM7FimpnktdGXRjMQ5RFPQ1tKptQryfV94ePh9e14m
P+tsyg4SiRT9N/9adoO/0z+5Ioj0/wY0RFQCcTl42+ZB1W2CuAaW9VYyrAgx
OD1QlLHGqANrNlOlK4w28C7tLGuZ0QNuHJFnf2MMgxWdYm2672ewMHiibilH
B87Ue+qUigUwhVnC+np0BVxlO8puvGQA87Xxr8hjP8HZb0r4WawNcNdVapzj
6V+4pyBt0S+BFLLtYvlW7I8lCzBJMxPyIp8M9sgV5MWzrcBzxppz1i93giP0
V67fz94NjpmTeNHpFPBiP7/obYc12Jc25Rp20QZMCTbypg17wKeWuWtuHFvw
p75kC643DdxdPnCBMKIFVqIZtdoOnJRT0E2ttwcfFnqpo3h7we/svK1FAfvA
zxXFDd5kB3CBBfvM2Bc0ZTo/PFO5H6xvZUrlhY5g6SEnyx6OE1hSLxjiEQfA
XOl5NXUevX6yxSRXOYN1+tC8vjIXcFOgv/M4zxXcUSqiCX3o4DJOUiTZiD4y
3dhWNs4A13o2dIxHEuCbvZW1kT3oaGdOy4g7E3wicyiRJkbLXfjuY0a0e/+j
6phEN/zPp489qUILDJYTw+yDYH7Xd0J8F51eHLcVcQ8tilN+pD5AlxtFVZJq
tCLAtFkjQ5tem6da29GSSWrlwBC6vjkj9c4wujlXHRY+in7qINkYVaOnufap
mg9ols4pbFaH9lPm0x/q0cdKtaaUeXQUS/Z4YRGdk0bQV1fRhcdvmZ4Y0KU2
s+9zjejazuaK9XV0U5Gl8NkGuj02JbRwC610G3QN+o1WGTxMZjP6DwbEFmI=

           "]]}, "\"\[VerticalSeparator]2,1,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]2,1,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJxFz2lI0wEYBvDZtGLOcFqmqdt/Ji7nkX4IMvJIg8yLTJcw6djUzfJKcWBq
ZabpEG3V8GQMNQ0RZ8YM7FimpnktdGXRjMQ5RFPQ1tKptQryfV94ePh9e14m
P+tsyg4SiRT9N/9adoO/0z+5Ioj0/wY0RFQCcTl42+ZB1W2CuAaW9VYyrAgx
OD1QlLHGqANrNlOlK4w28C7tLGuZ0QNuHJFnf2MMgxWdYm2672ewMHiibilH
B87Ue+qUigUwhVnC+np0BVxlO8puvGQA87Xxr8hjP8HZb0r4WawNcNdVapzj
6V+4pyBt0S+BFLLtYvlW7I8lCzBJMxPyIp8M9sgV5MWzrcBzxppz1i93giP0
V67fz94NjpmTeNHpFPBiP7/obYc12Jc25Rp20QZMCTbypg17wKeWuWtuHFvw
p75kC643DdxdPnCBMKIFVqIZtdoOnJRT0E2ttwcfFnqpo3h7we/svK1FAfvA
zxXFDd5kB3CBBfvM2Bc0ZTo/PFO5H6xvZUrlhY5g6SEnyx6OE1hSLxjiEQfA
XOl5NXUevX6yxSRXOYN1+tC8vjIXcFOgv/M4zxXcUSqiCX3o4DJOUiTZiD4y
3dhWNs4A13o2dIxHEuCbvZW1kT3oaGdOy4g7E3wicyiRJkbLXfjuY0a0e/+j
6phEN/zPp489qUILDJYTw+yDYH7Xd0J8F51eHLcVcQ8tilN+pD5AlxtFVZJq
tCLAtFkjQ5tem6da29GSSWrlwBC6vjkj9c4wujlXHRY+in7qINkYVaOnufap
mg9ols4pbFaH9lPm0x/q0cdKtaaUeXQUS/Z4YRGdk0bQV1fRhcdvmZ4Y0KU2
s+9zjejazuaK9XV0U5Gl8NkGuj02JbRwC610G3QN+o1WGTxMZjP6DwbEFmI=

           "]]}, "\"\[VerticalSeparator]2,2,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]2,2,0\[RightAngleBracket]", 
         "Tooltip"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[VerticalSeparator]1,1,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]1,2,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]2,1,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]2,2,0\[RightAngleBracket]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7231566233416643`*^9, {3.7231567057214384`*^9, 3.7231567173345547`*^9}, 
   3.723156877798854*^9, 3.723156960275408*^9, {3.755331157111493*^9, 
   3.755331184132957*^9}, 3.755331232436242*^9, 3.755392015192657*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJxFz2lI0wEYBvDZtGLOcFqmqdt/Ji7nkX4IMvJIg8yLTJcw6djUzfJKcWBq
ZabpEG3V8GQMNQ0RZ8YM7FimpnktdGXRjMQ5RFPQ1tKptQryfV94ePh9e14m
P+tsyg4SiRT9N/9adoO/0z+5Ioj0/wY0RFQCcTl42+ZB1W2CuAaW9VYyrAgx
OD1QlLHGqANrNlOlK4w28C7tLGuZ0QNuHJFnf2MMgxWdYm2672ewMHiibilH
B87Ue+qUigUwhVnC+np0BVxlO8puvGQA87Xxr8hjP8HZb0r4WawNcNdVapzj
6V+4pyBt0S+BFLLtYvlW7I8lCzBJMxPyIp8M9sgV5MWzrcBzxppz1i93giP0
V67fz94NjpmTeNHpFPBiP7/obYc12Jc25Rp20QZMCTbypg17wKeWuWtuHFvw
p75kC643DdxdPnCBMKIFVqIZtdoOnJRT0E2ttwcfFnqpo3h7we/svK1FAfvA
zxXFDd5kB3CBBfvM2Bc0ZTo/PFO5H6xvZUrlhY5g6SEnyx6OE1hSLxjiEQfA
XOl5NXUevX6yxSRXOYN1+tC8vjIXcFOgv/M4zxXcUSqiCX3o4DJOUiTZiD4y
3dhWNs4A13o2dIxHEuCbvZW1kT3oaGdOy4g7E3wicyiRJkbLXfjuY0a0e/+j
6phEN/zPp489qUILDJYTw+yDYH7Xd0J8F51eHLcVcQ8tilN+pD5AlxtFVZJq
tCLAtFkjQ5tem6da29GSSWrlwBC6vjkj9c4wujlXHRY+in7qINkYVaOnufap
mg9ols4pbFaH9lPm0x/q0cdKtaaUeXQUS/Z4YRGdk0bQV1fRhcdvmZ4Y0KU2
s+9zjejazuaK9XV0U5Gl8NkGuj02JbRwC610G3QN+o1WGTxMZjP6DwbEFmI=

           "]]}, "\"\[VerticalSeparator]1,1,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]1,1,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
           "]]}, "\"\[VerticalSeparator]1,2,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]1,2,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJwV2Xk4VO8XAHCllWKYQUXSXEm29K2IyjmhTdqjSIrsS1lDKCEiexISQkXK
lsgaUrLLvlV2WWYuRdnK7/7+mufzzJ37vHPOec977nM3G14/Y7yUg4PDdwkH
x/8/n9wyXLHD6L5K3/HcR0peP/eVN4lpnhczh5jYryfTtqarLH4q9hITc4Gk
oLAQ8a31KjxhORlc7Z4ARzJPj9ztVXlSErhpuZgfjPOL83ZIkCoypFHQomkw
JIq/uauhPaPylSf230JbGDgWZ+Gnu0tA/Plqhbn5h2C7pJx81LESrPY7Wv/Z
FAVmHW0fIyV44U1zT9KUWgxsEuC6dTWHDnOWmt2TpnGwVdv9ME17HcQv6fb7
c/ApTGXvijtttxHUa0O3/G5LgN5GE+LB3c3wI/Jw6ZR5EiTLVNkcChGHAKO/
er/mn8HAKtW5Ax1boWneLHxiUwqsDY25zSOxHW5UiMqTmS9hI/tCJzt8B2x4
0FzNUnsFXqliNTNvd4KhFHKOmabDHSt8bKu1B5bO36yfcsuAIOHwC9+blKG5
R2vj1MFMsLwtImttux+cX3Hn/WzLAnRSVP/lfQA0woZW/Ix/AyqZx3XMlqqB
iHPpuUnzbGhrv7LRKlgdStScJsj5t7D+n5KMaPthWNnVt5W1KQ8OP+gZEBM/
Ce0lRY7jP/JgmZ76Co7gU/DyeeSHscx8OJUhqvz2wWk4YXfi8qhaIehUK3pe
zz4LEavzI4ZN38OBL2dkRM5egGwnDTv7dSVQMMYy3hGkAzGjiut/uZWAkgUX
L9cXXbjWwG/682Ap3HGIsV927RLwx3xeOtlWBpxNkXv9PQ1gnicnxWbfB9gX
GCwgCoYwcCfx1ET8BxBXCz4TtmgIOaa3YknzcpjRuKwkHGAEujt3KbPnP4Jv
vvnllCZTeFoVZzu2qRJmegpF/USuw1TkW6nvAZVwa9vTA1sEbeCQaXV/42wl
PLZ+SRyLt4Fxzj9a+U1VMJ15sd24wBb27D+h7OdbA6Op7HuNaxygIX1h6Vay
HmI/N3NfFXEBflitv1auAWpOhlR6fnaBvRLhyr5GDeA2xTU5cOMmBE2l/Lr5
pQFaLzLeXu90hV2hLcaGqV8gykfGIarwFtyuktHYcbkJNuiJXPW94QnJmbkS
qQ+b4O64n1TsN09ojFTl3FLTBPsiRGybD3uBuOmFwnVKzcBYu7g0bqM3VHF6
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
           "]]}, "\"\[VerticalSeparator]2,1,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]2,1,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJxFz2lI0wEYBvDZtGLOcFqmqdt/Ji7nkX4IMvJIg8yLTJcw6djUzfJKcWBq
ZabpEG3V8GQMNQ0RZ8YM7FimpnktdGXRjMQ5RFPQ1tKptQryfV94ePh9e14m
P+tsyg4SiRT9N/9adoO/0z+5Ioj0/wY0RFQCcTl42+ZB1W2CuAaW9VYyrAgx
OD1QlLHGqANrNlOlK4w28C7tLGuZ0QNuHJFnf2MMgxWdYm2672ewMHiibilH
B87Ue+qUigUwhVnC+np0BVxlO8puvGQA87Xxr8hjP8HZb0r4WawNcNdVapzj
6V+4pyBt0S+BFLLtYvlW7I8lCzBJMxPyIp8M9sgV5MWzrcBzxppz1i93giP0
V67fz94NjpmTeNHpFPBiP7/obYc12Jc25Rp20QZMCTbypg17wKeWuWtuHFvw
p75kC643DdxdPnCBMKIFVqIZtdoOnJRT0E2ttwcfFnqpo3h7we/svK1FAfvA
zxXFDd5kB3CBBfvM2Bc0ZTo/PFO5H6xvZUrlhY5g6SEnyx6OE1hSLxjiEQfA
XOl5NXUevX6yxSRXOYN1+tC8vjIXcFOgv/M4zxXcUSqiCX3o4DJOUiTZiD4y
3dhWNs4A13o2dIxHEuCbvZW1kT3oaGdOy4g7E3wicyiRJkbLXfjuY0a0e/+j
6phEN/zPp489qUILDJYTw+yDYH7Xd0J8F51eHLcVcQ8tilN+pD5AlxtFVZJq
tCLAtFkjQ5tem6da29GSSWrlwBC6vjkj9c4wujlXHRY+in7qINkYVaOnufap
mg9ols4pbFaH9lPm0x/q0cdKtaaUeXQUS/Z4YRGdk0bQV1fRhcdvmZ4Y0KU2
s+9zjejazuaK9XV0U5Gl8NkGuj02JbRwC610G3QN+o1WGTxMZjP6DwbEFmI=

           "]]}, "\"\[VerticalSeparator]2,2,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]2,2,0\[RightAngleBracket]", 
         "Tooltip"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[VerticalSeparator]1,1,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]1,2,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]2,1,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]2,2,0\[RightAngleBracket]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7231566233416643`*^9, {3.7231567057214384`*^9, 3.7231567173345547`*^9}, 
   3.723156877798854*^9, 3.723156960275408*^9, {3.755331157111493*^9, 
   3.755331184132957*^9}, 3.755331232436242*^9, 3.755392015349689*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJxFz2lI0wEYBvDZtGLOcFqmqdt/Ji7nkX4IMvJIg8yLTJcw6djUzfJKcWBq
ZabpEG3V8GQMNQ0RZ8YM7FimpnktdGXRjMQ5RFPQ1tKptQryfV94ePh9e14m
P+tsyg4SiRT9N/9adoO/0z+5Ioj0/wY0RFQCcTl42+ZB1W2CuAaW9VYyrAgx
OD1QlLHGqANrNlOlK4w28C7tLGuZ0QNuHJFnf2MMgxWdYm2672ewMHiibilH
B87Ue+qUigUwhVnC+np0BVxlO8puvGQA87Xxr8hjP8HZb0r4WawNcNdVapzj
6V+4pyBt0S+BFLLtYvlW7I8lCzBJMxPyIp8M9sgV5MWzrcBzxppz1i93giP0
V67fz94NjpmTeNHpFPBiP7/obYc12Jc25Rp20QZMCTbypg17wKeWuWtuHFvw
p75kC643DdxdPnCBMKIFVqIZtdoOnJRT0E2ttwcfFnqpo3h7we/svK1FAfvA
zxXFDd5kB3CBBfvM2Bc0ZTo/PFO5H6xvZUrlhY5g6SEnyx6OE1hSLxjiEQfA
XOl5NXUevX6yxSRXOYN1+tC8vjIXcFOgv/M4zxXcUSqiCX3o4DJOUiTZiD4y
3dhWNs4A13o2dIxHEuCbvZW1kT3oaGdOy4g7E3wicyiRJkbLXfjuY0a0e/+j
6phEN/zPp489qUILDJYTw+yDYH7Xd0J8F51eHLcVcQ8tilN+pD5AlxtFVZJq
tCLAtFkjQ5tem6da29GSSWrlwBC6vjkj9c4wujlXHRY+in7qINkYVaOnufap
mg9ols4pbFaH9lPm0x/q0cdKtaaUeXQUS/Z4YRGdk0bQV1fRhcdvmZ4Y0KU2
s+9zjejazuaK9XV0U5Gl8NkGuj02JbRwC610G3QN+o1WGTxMZjP6DwbEFmI=

           "]]}, "\"\[VerticalSeparator]1,1,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]1,1,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJwV2Xk4VO8XAHCllWKYQUXSXEm29K2IyjmhTdqjSIrsS1lDKCEiexISQkXK
lsgaUrLLvlV2WWYuRdnK7/7+mufzzJ37vHPOec977nM3G14/Y7yUg4PDdwkH
x/8/n9wyXLHD6L5K3/HcR0peP/eVN4lpnhczh5jYryfTtqarLH4q9hITc4Gk
oLAQ8a31KjxhORlc7Z4ARzJPj9ztVXlSErhpuZgfjPOL83ZIkCoypFHQomkw
JIq/uauhPaPylSf230JbGDgWZ+Gnu0tA/Plqhbn5h2C7pJx81LESrPY7Wv/Z
FAVmHW0fIyV44U1zT9KUWgxsEuC6dTWHDnOWmt2TpnGwVdv9ME17HcQv6fb7
c/ApTGXvijtttxHUa0O3/G5LgN5GE+LB3c3wI/Jw6ZR5EiTLVNkcChGHAKO/
er/mn8HAKtW5Ax1boWneLHxiUwqsDY25zSOxHW5UiMqTmS9hI/tCJzt8B2x4
0FzNUnsFXqliNTNvd4KhFHKOmabDHSt8bKu1B5bO36yfcsuAIOHwC9+blKG5
R2vj1MFMsLwtImttux+cX3Hn/WzLAnRSVP/lfQA0woZW/Ix/AyqZx3XMlqqB
iHPpuUnzbGhrv7LRKlgdStScJsj5t7D+n5KMaPthWNnVt5W1KQ8OP+gZEBM/
Ce0lRY7jP/JgmZ76Co7gU/DyeeSHscx8OJUhqvz2wWk4YXfi8qhaIehUK3pe
zz4LEavzI4ZN38OBL2dkRM5egGwnDTv7dSVQMMYy3hGkAzGjiut/uZWAkgUX
L9cXXbjWwG/682Ap3HGIsV927RLwx3xeOtlWBpxNkXv9PQ1gnicnxWbfB9gX
GCwgCoYwcCfx1ET8BxBXCz4TtmgIOaa3YknzcpjRuKwkHGAEujt3KbPnP4Jv
vvnllCZTeFoVZzu2qRJmegpF/USuw1TkW6nvAZVwa9vTA1sEbeCQaXV/42wl
PLZ+SRyLt4Fxzj9a+U1VMJ15sd24wBb27D+h7OdbA6Op7HuNaxygIX1h6Vay
HmI/N3NfFXEBflitv1auAWpOhlR6fnaBvRLhyr5GDeA2xTU5cOMmBE2l/Lr5
pQFaLzLeXu90hV2hLcaGqV8gykfGIarwFtyuktHYcbkJNuiJXPW94QnJmbkS
qQ+b4O64n1TsN09ojFTl3FLTBPsiRGybD3uBuOmFwnVKzcBYu7g0bqM3VHF6
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
           "]]}, "\"\[VerticalSeparator]1,2,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]1,2,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
           "]]}, "\"\[VerticalSeparator]2,1,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]2,1,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJxFz2lI0wEYBvDZtGLOcFqmqdt/Ji7nkX4IMvJIg8yLTJcw6djUzfJKcWBq
ZabpEG3V8GQMNQ0RZ8YM7FimpnktdGXRjMQ5RFPQ1tKptQryfV94ePh9e14m
P+tsyg4SiRT9N/9adoO/0z+5Ioj0/wY0RFQCcTl42+ZB1W2CuAaW9VYyrAgx
OD1QlLHGqANrNlOlK4w28C7tLGuZ0QNuHJFnf2MMgxWdYm2672ewMHiibilH
B87Ue+qUigUwhVnC+np0BVxlO8puvGQA87Xxr8hjP8HZb0r4WawNcNdVapzj
6V+4pyBt0S+BFLLtYvlW7I8lCzBJMxPyIp8M9sgV5MWzrcBzxppz1i93giP0
V67fz94NjpmTeNHpFPBiP7/obYc12Jc25Rp20QZMCTbypg17wKeWuWtuHFvw
p75kC643DdxdPnCBMKIFVqIZtdoOnJRT0E2ttwcfFnqpo3h7we/svK1FAfvA
zxXFDd5kB3CBBfvM2Bc0ZTo/PFO5H6xvZUrlhY5g6SEnyx6OE1hSLxjiEQfA
XOl5NXUevX6yxSRXOYN1+tC8vjIXcFOgv/M4zxXcUSqiCX3o4DJOUiTZiD4y
3dhWNs4A13o2dIxHEuCbvZW1kT3oaGdOy4g7E3wicyiRJkbLXfjuY0a0e/+j
6phEN/zPp489qUILDJYTw+yDYH7Xd0J8F51eHLcVcQ8tilN+pD5AlxtFVZJq
tCLAtFkjQ5tem6da29GSSWrlwBC6vjkj9c4wujlXHRY+in7qINkYVaOnufap
mg9ols4pbFaH9lPm0x/q0cdKtaaUeXQUS/Z4YRGdk0bQV1fRhcdvmZ4Y0KU2
s+9zjejazuaK9XV0U5Gl8NkGuj02JbRwC610G3QN+o1WGTxMZjP6DwbEFmI=

           "]]}, "\"\[VerticalSeparator]2,2,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]2,2,0\[RightAngleBracket]", 
         "Tooltip"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[VerticalSeparator]1,1,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]1,2,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]2,1,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]2,2,0\[RightAngleBracket]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7231566233416643`*^9, {3.7231567057214384`*^9, 3.7231567173345547`*^9}, 
   3.723156877798854*^9, 3.723156960275408*^9, {3.755331157111493*^9, 
   3.755331184132957*^9}, 3.755331232436242*^9, 3.755392015655242*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJxFz2lI0wEYBvDZtGLOcFqmqdt/Ji7nkX4IMvJIg8yLTJcw6djUzfJKcWBq
ZabpEG3V8GQMNQ0RZ8YM7FimpnktdGXRjMQ5RFPQ1tKptQryfV94ePh9e14m
P+tsyg4SiRT9N/9adoO/0z+5Ioj0/wY0RFQCcTl42+ZB1W2CuAaW9VYyrAgx
OD1QlLHGqANrNlOlK4w28C7tLGuZ0QNuHJFnf2MMgxWdYm2672ewMHiibilH
B87Ue+qUigUwhVnC+np0BVxlO8puvGQA87Xxr8hjP8HZb0r4WawNcNdVapzj
6V+4pyBt0S+BFLLtYvlW7I8lCzBJMxPyIp8M9sgV5MWzrcBzxppz1i93giP0
V67fz94NjpmTeNHpFPBiP7/obYc12Jc25Rp20QZMCTbypg17wKeWuWtuHFvw
p75kC643DdxdPnCBMKIFVqIZtdoOnJRT0E2ttwcfFnqpo3h7we/svK1FAfvA
zxXFDd5kB3CBBfvM2Bc0ZTo/PFO5H6xvZUrlhY5g6SEnyx6OE1hSLxjiEQfA
XOl5NXUevX6yxSRXOYN1+tC8vjIXcFOgv/M4zxXcUSqiCX3o4DJOUiTZiD4y
3dhWNs4A13o2dIxHEuCbvZW1kT3oaGdOy4g7E3wicyiRJkbLXfjuY0a0e/+j
6phEN/zPp489qUILDJYTw+yDYH7Xd0J8F51eHLcVcQ8tilN+pD5AlxtFVZJq
tCLAtFkjQ5tem6da29GSSWrlwBC6vjkj9c4wujlXHRY+in7qINkYVaOnufap
mg9ols4pbFaH9lPm0x/q0cdKtaaUeXQUS/Z4YRGdk0bQV1fRhcdvmZ4Y0KU2
s+9zjejazuaK9XV0U5Gl8NkGuj02JbRwC610G3QN+o1WGTxMZjP6DwbEFmI=

           "]]}, "\"\[VerticalSeparator]1,1,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]1,1,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJxFz2lI0wEYBvDZtGLOcFqmqdt/Ji7nkX4IMvJIg8yLTJcw6djUzfJKcWBq
ZabpEG3V8GQMNQ0RZ8YM7FimpnktdGXRjMQ5RFPQ1tKptQryfV94ePh9e14m
P+tsyg4SiRT9N/9adoO/0z+5Ioj0/wY0RFQCcTl42+ZB1W2CuAaW9VYyrAgx
OD1QlLHGqANrNlOlK4w28C7tLGuZ0QNuHJFnf2MMgxWdYm2672ewMHiibilH
B87Ue+qUigUwhVnC+np0BVxlO8puvGQA87Xxr8hjP8HZb0r4WawNcNdVapzj
6V+4pyBt0S+BFLLtYvlW7I8lCzBJMxPyIp8M9sgV5MWzrcBzxppz1i93giP0
V67fz94NjpmTeNHpFPBiP7/obYc12Jc25Rp20QZMCTbypg17wKeWuWtuHFvw
p75kC643DdxdPnCBMKIFVqIZtdoOnJRT0E2ttwcfFnqpo3h7we/svK1FAfvA
zxXFDd5kB3CBBfvM2Bc0ZTo/PFO5H6xvZUrlhY5g6SEnyx6OE1hSLxjiEQfA
XOl5NXUevX6yxSRXOYN1+tC8vjIXcFOgv/M4zxXcUSqiCX3o4DJOUiTZiD4y
3dhWNs4A13o2dIxHEuCbvZW1kT3oaGdOy4g7E3wicyiRJkbLXfjuY0a0e/+j
6phEN/zPp489qUILDJYTw+yDYH7Xd0J8F51eHLcVcQ8tilN+pD5AlxtFVZJq
tCLAtFkjQ5tem6da29GSSWrlwBC6vjkj9c4wujlXHRY+in7qINkYVaOnufap
mg9ols4pbFaH9lPm0x/q0cdKtaaUeXQUS/Z4YRGdk0bQV1fRhcdvmZ4Y0KU2
s+9zjejazuaK9XV0U5Gl8NkGuj02JbRwC610G3QN+o1WGTxMZjP6DwbEFmI=

           "]]}, "\"\[VerticalSeparator]1,2,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]1,2,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJxFz2lI0wEYBvDZtGLOcFqmqdt/Ji7nkX4IMvJIg8yLTJcw6djUzfJKcWBq
ZabpEG3V8GQMNQ0RZ8YM7FimpnktdGXRjMQ5RFPQ1tKptQryfV94ePh9e14m
P+tsyg4SiRT9N/9adoO/0z+5Ioj0/wY0RFQCcTl42+ZB1W2CuAaW9VYyrAgx
OD1QlLHGqANrNlOlK4w28C7tLGuZ0QNuHJFnf2MMgxWdYm2672ewMHiibilH
B87Ue+qUigUwhVnC+np0BVxlO8puvGQA87Xxr8hjP8HZb0r4WawNcNdVapzj
6V+4pyBt0S+BFLLtYvlW7I8lCzBJMxPyIp8M9sgV5MWzrcBzxppz1i93giP0
V67fz94NjpmTeNHpFPBiP7/obYc12Jc25Rp20QZMCTbypg17wKeWuWtuHFvw
p75kC643DdxdPnCBMKIFVqIZtdoOnJRT0E2ttwcfFnqpo3h7we/svK1FAfvA
zxXFDd5kB3CBBfvM2Bc0ZTo/PFO5H6xvZUrlhY5g6SEnyx6OE1hSLxjiEQfA
XOl5NXUevX6yxSRXOYN1+tC8vjIXcFOgv/M4zxXcUSqiCX3o4DJOUiTZiD4y
3dhWNs4A13o2dIxHEuCbvZW1kT3oaGdOy4g7E3wicyiRJkbLXfjuY0a0e/+j
6phEN/zPp489qUILDJYTw+yDYH7Xd0J8F51eHLcVcQ8tilN+pD5AlxtFVZJq
tCLAtFkjQ5tem6da29GSSWrlwBC6vjkj9c4wujlXHRY+in7qINkYVaOnufap
mg9ols4pbFaH9lPm0x/q0cdKtaaUeXQUS/Z4YRGdk0bQV1fRhcdvmZ4Y0KU2
s+9zjejazuaK9XV0U5Gl8NkGuj02JbRwC610G3QN+o1WGTxMZjP6DwbEFmI=

           "]]}, "\"\[VerticalSeparator]2,1,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]2,1,0\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wpduOAQw+2LPffqT+Vn6nPYy/8NT8wtfy
J+H8des7b+fo3YLz0+0vznxT9BjOz3uq+XjLupdwPpdii/p9iw9wfp/Aaa2F
CZ/h/KTbIfuZz3yD8wuPtiTlq/+C8zcW8ARLeP5FuKc6+5VBOIMDjN80/0/g
lzeMcD7D5QcOe6qY4Xy1krSKEC1WOP/J1+lh3HvZ4Hyvp1m1kwo54Hy/JxO0
5eS4HP79B4H39q8OJzWcWMsNl9cTvCbrHM8L53PZf02885kPznd/G/VdKVQA
rv/GoRTGKB1BuPzWjiNxCl8R/DTW0gfnzgnB+clF1Vt5ZgnD+frp2ud8EkXg
/PNCOtyllqJw/u51TbN1mMXg/GpGrYAzdxF8rjtVHnlbxOH8p8sUp8yvkYDz
p2hIsuwMlYTzJ8xKO56oIAXnR02JPcfzHMH/4bL05/x90nD+46dOFYfaZeD8
RbaG0mcTZeH8ta2lgum6cnB+e2iyN/NXOXj4mN5ZuLL9rDxcfobm7LVnvRXg
/PoDvTO8dyL4vtKhS0+pKML5jnnHowU7Efz5MkkqZ74i+CqHl0/zi1ZC+E/3
kNalfQh+2meWiye1lOH8pI2fFDr7EfwJl3h6jxxH8Pd9Vvv5/z+CDwCNCAVR

           "]]}, "\"\[VerticalSeparator]2,2,0\[RightAngleBracket]\"", 
         LabelStyle -> "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]2,2,0\[RightAngleBracket]", 
         "Tooltip"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[VerticalSeparator]1,1,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]1,2,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]2,1,0\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]2,2,0\[RightAngleBracket]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7231566233416643`*^9, {3.7231567057214384`*^9, 3.7231567173345547`*^9}, 
   3.723156877798854*^9, 3.723156960275408*^9, {3.755331157111493*^9, 
   3.755331184132957*^9}, 3.755331232436242*^9, 3.755392015800918*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Real Field Coupling", "Subsection",
 CellChangeTimes->{{3.722911922999399*^9, 3.7229119270975904`*^9}, {
  3.72315385935192*^9, 3.7231538626380606`*^9}, {3.7231573546460123`*^9, 
  3.723157358861186*^9}, {3.723157439937258*^9, 3.723157451874367*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"Frequency", ",", "Strength"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Frequency", "@", 
    RowBox[{"{", "args__", "}"}]}], ":=", 
   RowBox[{"Frequency", "[", "args", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Strength", "@", 
    RowBox[{"{", "args__", "}"}]}], ":=", 
   RowBox[{"Strength", "[", "args", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Strength", "[", "__", "]"}], "=", "1"}], ";"}]}], "Input",
 CellChangeTimes->{3.755392254611298*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TrappedIon", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.755392095752121*^9, 3.75539210388236*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Wave", "@", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Horn", "[", 
      RowBox[{"1", ",", "2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Pi]", ",", "0"}], "}"}]}], "}"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.723157090580897*^9, 3.7231571228188047`*^9}, {
  3.723157214947314*^9, 3.723157238740841*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Frequency", "[", 
     RowBox[{"Horn", "[", 
      RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
    FractionBox["1", "2"], ",", "1", ",", "0", ",", "1", ",", "Null"}], "}"}],
   "}"}]], "Output",
 CellChangeTimes->{{3.7231572299780827`*^9, 3.7231572390085993`*^9}, 
   3.755392020508832*^9, 3.7553920786263103`*^9, 3.7553921090570183`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hamiltonian", "@", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Horn", "[", 
      RowBox[{"1", ",", "2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Pi]", ",", "0"}], "}"}]}], "}"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.723157284718458*^9, 3.723157290505765*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{"Hermitian", "[", 
         RowBox[{"\[Pi]", " ", 
          RowBox[{"Coupling", "[", 
           RowBox[{"Horn", "[", 
            RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "]"}], 
        RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", 
         FractionBox["1", "2"]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.723157290946415*^9, 3.755392024685239*^9, 
  3.75539207934472*^9, 3.75539210971215*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"wave", " ", "to", " ", "defs"}]], "Input",
 CellChangeTimes->{{3.755328964647513*^9, 3.7553289842632017`*^9}, {
  3.755329446577964*^9, 3.755329449039703*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"defs", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.9", ",", "0", ",", 
           RowBox[{"f", "-", "195"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.2", ",", "0", ",", 
           RowBox[{"f", "-", "200"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.1", ",", "0", ",", 
           RowBox[{"f", "-", "205"}]}], "}"}]}], "}"}], ",", "T"}], "}"}], 
     "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "\[Rule]", "200"}], ",", 
      RowBox[{"T", "\[Rule]", "20"}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{"EvolutionPlot", "[", 
  RowBox[{"Hamiltonian", "@", "defs"}], "]"}]}], "Input",
 CellChangeTimes->{{3.723157277586356*^9, 3.7231572971349316`*^9}, {
  3.7553285562376623`*^9, 3.7553285645743217`*^9}, {3.755328654133298*^9, 
  3.7553287093389063`*^9}, {3.75539204124629*^9, 3.755392043506833*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
+E1Bn/IMGfBIakppUcUMiKPPwhsDBixdtHMVaJmFFqP/gtnuM6ATrcK74htz
4Pqc/WToYwbs+76+EjA8B92FwW5x7xjwKe0QN88wATy7r+0/FLa7/8rFS7x6
RDi2xl+TGceA9WZzA/wlRBji6bNUzGTA7xqP9Pr4SeBzPIq1tJgB79D4Munc
J8Ep3dvZanUMOE3r9qgwlgSTj/deq+/YrfdZ5XVuHQmCAsY2dEYZ8JKeiZfu
EAmUMxKiukkMSLYqYyc+QgJio7nK7S0GNFKKqFZsIkE4QWpigo4Rbzx/PCX2
lQTnmQhvHnIz4sToQf3ZJyRYkUqXWd7DiB5nQjc4pUnwWdO22VmWET88tDJ/
0k6E/8yP2ZOfZsRPyUuiko+JsOW5wuetwYgUUr1Sr6iIkBz/vYhFlxFpddud
xnwJoF/pdDv4NiNuJZ63/Mq569dGT1MJPWTEW922P/mD5+CWWJmWpCcj1ia8
254IngX28Joe1XxGjOtnn36ROw0lBW9f1FUy4pnCUn01jWmw7Lq490ozIzZa
Hz6Y1zcFVdzNFkYzjOhmJcGoxjoFj+U/MI+vMqLPN+XfTCmTIHpVL9OSkglV
bD6Rk1Qnwcm/e81RiAn7cr/Ox1tPwIH08Iidg0x4TMA3WG33PrU23ELP40xo
IJKhWeQ+Dm5zomNMKkz4zEn8SynZOMgwjnh90GZCW9Mbm2r2Y9AjGXdI4CYT
crg3egcPjoLX+ft/YsyY8OPbMZnLMArDr2d4vrkx4Ztb7w67Dw6Db1xqobwP
E5rVWHAc3zMMp39aG/34yIQHDU/8KLsxBMFkS/E1WUyYH5f0XP5pP6iI5mr+
V8qE/h77vPY39ALpzFNC+28mtL5SzCG8pwc0XTblR8eYcNOdTfJQawesfizu
slhgQqWPN3wKFdvhS77rs/ltJjzRyfRgJ6UVtlcoK7d5mJEnu18qsrQJUrh+
mXnsY8asuUqW8bpGuHbMm5FRjhnPD1N8HjlTD5k2TFf5NJlRTs0zkvipGuo/
cTql6TMjw/rU9dhrVTBRKRCtco8Zy9VqK0zP/gQy0p6qTltmTBx8l7WiVQ4C
/JKzVq7MOLT8M+XaegnIq8qxU/gwo9V+kcAPH3/Afw9PnAj9xIyip5fybW3z
waNc7VV5LjOK1S58C0rPgqjZi8n6P5mRriFavZkpA/K5df/MNjFji0IKm4XY
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
           "]]}, "\"\[VerticalSeparator]1\[RightAngleBracket]\"", LabelStyle -> 
         "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]1\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
QKL1errWWSaGZ96/fyYkA56TF4r7jZm4WXSv8IGULPBMP15te46JB9XGyjSP
5oAYW1bzgikTVdcWXlIOzoWui2Mvws0IfLfuesJ9NA9cuw8N8lowsXo6VC/I
Lw+EjkSPF1kycWv+3KNYah48vtb3h27NxGjfqY/WRrngzE3a+PACEwWKZ2+d
W50Du719dmheZGLk2ijr2INZ8Gioa88HWybebTM+ZUjoo73mbpmLl5gY61Nk
0hOfCjv/u6Q0f5mJj5IqHfn7kqBFpFEnzIGJd6JtG15zxsOl6M2m25yY2CHm
NPrQOBL4Zk0uX3FmYoJK2ZrdfcHw0KTch+bKRE62vs3yrj5g07Ec1ejGRK17
+uxO55xhK0M7U92DiP+yrsS2PCtoyC649t6TiRtslZtmNfXBmn2q5oI3E/Ot
dy7+bpUFbnts/e1D1EvNkdJ5h26Fut7EVyF+TLTh77ilEkoFc8XPH3kCmChe
XlEkNqoDnLcYEwWBTAy03Zbw1c8CanmDlyjBhB6MZBz7ddIJzvu/3tQQwsTB
8jNb99V4E3ooxq8WxsSBJ85yqa3BUK3rIvUunIl+I5XLB6siwbi+db91JBP5
Hvv+/fIjHtbt4VWejSL0qv363cisZKiIt9QLjiHyb8p3pLM4Dc4s1JznjiP0
Za4gpsSL6F/M1zrkxxP1yeenY76UDeVdBn7kRCZKO9/f+5I3D4z2X4u5n8TE
0IAXdcp38mFVwVzW8RQm+kSGJp5tLICbG1RL36YSenChaPLArkLQd86otUxn
okSXRekwRyEsfxhpm8kg+Ojpuj3bsgBKjx3sDsxiIk9x20jgnnzQuxP5mSuH
iTuKxwskbHLh7873k7m5xP4UU6sLCtlQHLxvWTqfOP/s4YTUxgzQGvfirCtg
Ir12XbHnv1RYMOgUUL3CxDeqNm+cdiRD0UOBfW+KmJh9PZC+Rj0eNPbZHbAo
Jvwhr6qpKzgSfifXH5suYaIST5OW3/oQyF/i0A+4TuBBEd/LudkXjlsbm2++
Qejpt8unxHRcYObFbcecm0T9a03w/pW1gdxD//z33Wai6Zvte8xjz4DKVc24
/8qYGFU81K+sfRwmOfNzjt1hoqDpGy3RTbKQ6T5xo7uCifKLM6vddOVA6ZPC
PbMqgs9cFqcObdWC8RMJ7ZPVTGzetZr3jvI5SK/+2ON3l4l6HwyHi2suAgrS
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
           "]]}, "\"\[VerticalSeparator]2\[RightAngleBracket]\"", LabelStyle -> 
         "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]2\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
DJIn4Nngs6vlqgSMnsx2SK0ahy8WGft2HiFgtXh3kh1hHNaGq5kikXYe0Wc2
L93H4NbYXNYdXQIecOvm3UcYBV3y5cUtRgS8waPf0ac5BIlCvm0PLxJwmWdS
/IbvIMypv83tNSHgkY2TfkJfByApaNUq0pyAQjeV1C7p9sOKfHwXuwMBd5ST
b9f69cLZ/2oLbzoRUP1WwnMmxh5Id50M/exKwD6Zklh63244/0XjhKcnAV99
luh3etoB2eZ/SqaCCMjWkDNT3tkMDEHMkaefEfCRfcD10eUfcPH9bsesMALm
iRmyLhk3AjOdl4JFNAFtB5907jz3DUzl01mq4wiYc3587eBMLeSf+TEg/YqA
nefaCZk5NXA1QSauM42A4dcX84rnyqGw9vi9g5kE5HhikbQhVQIck/bnw7IJ
aHSPK+HN4yIwE4xSouQSsPyhU/HXvfnwQa2S81QBAYudmZcQ3wGP+ejom2IC
Js59DLqSlQEWT3hrmUoJuDfWtPVsSiqU5h1Oul5BwFtnbTd3GCYCX9e1B5+q
CEiyusHr6x8JNzcDLkrWEjCiVUgwpPw5lMvlHbz/jYBnGn53bCvzA4EzXXy/
GgiIKvcZ88Xug40LHXnfDwLGTPjY1DfehKr4HfXPWgjoVRlpfHP7KRCpPZtG
aqflb/SUzrDCkqYd6b63XhctvmLSOR36KlAjkHwlrYeAhx/1xkQVXwUxtXpV
hn8ENI/c75YY7gj216eFrw0QsO3zyCy7tDfUBorPlA0TUPZIjvjuM09BMk/r
h9g4AZ8t3ChqJL8Ex06bLJdJ2v34HrTjp1kc1G2E+bdSCfiLwaAieyMZZORK
zZVmafc57ZFK0790cD49oBm8QMCZvIDt+ueyocGZQ3J8mYDC5Y0MrDveAyF+
/6LOOgHdUuXMdtoVQtOET+4mIxErxFhfR5aUwTaBt09NWYk4NpXk/ryiEtxV
26xKOIj4dSh+X/d6NcgFbiU48ROx7tuJLcHBX+FB7qm1n0JEPHhNMyd1qQ5a
O5y6FMWIqGiqvVzv/h0ebq8NHZEhIqtWwr4Z02boqrGgv6xIRNMgk0O/l37R
9NNvCU8lIv799al+u1EnsFb/dzBpPxGbszs8VYu64FClmtWIChHjI8/LOnn1
QHgZX5OjDhFDCVH9vS/6IFvNfyRCj4jSSuYv9PX64XPJ6ubHU0T8fT5h+8X1
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
           "]]}, "\"\[VerticalSeparator]3\[RightAngleBracket]\"", LabelStyle -> 
         "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]3\[RightAngleBracket]", 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          LineBox[CompressedData["
1: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
/947wUAKw2K9kRlxvzUjvw2ZZCB2d5T/7U6BwU7dHtmPRD1Xi3ddvpMOiQzX
m1PThJ9fXDbUNM4Cjfy0ktzPRP06KPoYmwNsHDfjj84S/Mt0OGS5Pw+aXF96
sX0h/Fv5/b0yo3xwH122vv6V6B8KWpw1I/lA1tile2aBgSx1X6M3D/Nhsh72
71hk4Pi+d2wk0XwoErKWePKdgTA9SD2zlAuKLBLV+icDPbhiRsRCcmDwyOK+
pSWCr7RHe6XvZYGz5d1DicsMLOtLab34OAM4vSK1JVaI581tEpTbaVCaoGfY
9IfIf+rGf0fLUkCpfLuF/j+CD2ZNa3pVkmCo6Z39JBsTSZEK7v//Pz6Xvstu
/quZKH2rul3tMNF/P7r787MzUW9jvuWq8Ago/6sUWb2Wib3ctnOMk2GgvHVd
sjIHE88WK1bxt4fAS9KznEFOYv3p6HzzB8HgppJd5rCBiV7fdyqe1AgGbhOr
q2zcTAw/a3rN+mAwVF6QuZXJw0Sr3K0Rv2ODASO/tZE3MXFAvzrn0+YQGMlv
6X7Ay8QHhc01Mc0h4HE9YtCYn4kb/mk9nj4TChu7dcfmNjNx+YvE4o2/oVD9
dtvH8K1MjBYQkG10CQOVn2/nBbcx8WvzBdG+ujAY5bn8u247Ey3eB4lcvRMG
nhLuazUEmcj+QnupJj4M+A4obXq9k4mfj6soZzPCoObY2h3uu5h4sba8eoiY
d9Xte8XWizBx/3etg1akUHgbmEUuEmXi2PYF24CqEPDNsJSXE2OiauOGRaND
IbClRhp7xJn4fCmyNI43BGofLByx2kPk58NNv0UKAc3/mo//lGRiucBTc25i
//sv4eYJe5koe70/jT0tFPzX6Z4Vl2Gimg11O+13GAjs2uZ6h8RETppGivSH
CKhjvfXVozDxQLz0pid60aCldSn8A5WJ5ydal9KZcTBh6ZboR2fiPE94lXVA
IgR6HcjmYzJR+eRPGzXuFGgof3rloBwTD4Zf83R6kw46zZk3BuQJPjxp5uy9
mwmTfRb3zikwsZ77sX6MVzYEf9z7+N9+Iv9cyyurfuSA4L/5/owDTCzpmwu+
KJ4HjVubR0kHmSip7SWsPZMHuuTwyfvKTKy2uOhigvnwUeXo15PIxM2MP/MC
W/IhzERgefYQE03GtbdmW+WBsMubNeGqTHTZveeSpnQu3I6s5hE8zERhk2QV
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
KIbWb5K//v1jocJLgek69xL4H6hbNb0=
           "]]}, "\"\[VerticalSeparator]4\[RightAngleBracket]\"", LabelStyle -> 
         "TextStyling"], 
        Annotation[#, "\[VerticalSeparator]4\[RightAngleBracket]", 
         "Tooltip"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[VerticalSeparator]1\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]2\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]3\[RightAngleBracket]\"", 
       "\"\[VerticalSeparator]4\[RightAngleBracket]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.755328566976493*^9, {3.7553286945899897`*^9, 3.7553287117638073`*^9}, 
   3.755392050641652*^9, {3.755392081714635*^9, 3.7553921116482153`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"frequency", " ", 
  RowBox[{"scan", "/", "duration"}], " ", "scan"}]], "Input",
 CellChangeTimes->{{3.755329452052706*^9, 3.755329459983211*^9}}],

Cell[BoxData[
 RowBox[{"Polarization", ",", 
  RowBox[{"All", " ", "Levels"}], ",", 
  RowBox[{"Full", " ", "Coupling", " ", "Hamiltonian"}]}]], "Input",
 CellChangeTimes->{{3.7231573207226925`*^9, 3.7231573318693705`*^9}, {
  3.723157399344369*^9, 3.7231574083872504`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"AWG", "/", "DDS"}], "/", "Laser1"}], "/", "Laser2"}], "/.", 
    RowBox[{
     RowBox[{"..", "/", "Horn1"}], "/", "Horn2"}]}], "/.", ".."}], ",", 
  "Parallel", ",", "MergePiecewise"}]], "Input",
 CellChangeTimes->{{3.7231538656840296`*^9, 3.7231538698691053`*^9}, {
  3.723157307195759*^9, 3.7231573091431265`*^9}, {3.723157366882617*^9, 
  3.7231573830041513`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "Push", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Push", "/:", 
   RowBox[{"Coupling", "@", "Push"}], ":=", 
   RowBox[{
    RowBox[{"Coupling", "[", 
     RowBox[{"1", ",", "1", ",", "1"}], "]"}], "+", 
    RowBox[{"2", 
     RowBox[{"Coupling", "[", 
      RowBox[{"2", ",", "2", ",", "1"}], "]"}]}], "+", 
    RowBox[{"Coupling", "[", 
     RowBox[{"3", ",", "3", ",", "1"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Push", "/:", 
   RowBox[{"Frequency", "@", "Push"}], "=", 
   RowBox[{"Frequency", "[", 
    RowBox[{"2", ",", "2", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Push", "/:", 
    RowBox[{"Strength", "@", "Push"}], "=", 
    RowBox[{"Strength", "[", 
     RowBox[{"2", ",", "2", ",", "1"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", "Qubit", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Qubit", "/:", 
   RowBox[{"Coupling", "@", 
    RowBox[{"Qubit", "[", "]"}]}], ":=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ImaginaryI]", 
       RowBox[{"Abs", "@", "k"}]], " ", 
      RowBox[{"Omega", "[", 
       RowBox[{"1", ",", "3", ",", "k"}], "]"}], 
      RowBox[{"Coupling", "[", 
       RowBox[{"1", ",", "3", ",", "k"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Qubit", "/:", 
   RowBox[{"Coupling", "@", 
    RowBox[{"Qubit", "[", "k_", "]"}]}], ":=", " ", 
   RowBox[{"(*", 
    RowBox[{"Coupling", "[", 
     RowBox[{"1", ",", "3", ",", "k"}], "]"}], "*)"}], 
   RowBox[{
    RowBox[{"Coupling", "@", 
     RowBox[{"Qubit", "[", "]"}]}], "/", 
    RowBox[{"Omega", "[", 
     RowBox[{"1", ",", "3", ",", "k"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Qubit", "/:", 
   RowBox[{"Frequency", "@", 
    RowBox[{"Qubit", "[", "k_", "]"}]}], ":=", 
   RowBox[{"Frequency", "[", 
    RowBox[{"1", ",", "3", ",", "k"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Qubit", "/:", 
   RowBox[{"Strength", "@", 
    RowBox[{"Qubit", "[", "k_", "]"}]}], ":=", 
   RowBox[{"Strength", "[", 
    RowBox[{"1", ",", "3", ",", "k"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6881834449907417`*^9, 3.6881834483125973`*^9}, {
  3.6881992945771894`*^9, 3.688199294905647*^9}, {3.6881995052826858`*^9, 
  3.6881995336314774`*^9}, {3.688201378809579*^9, 3.68820138003472*^9}, {
  3.6882655750969067`*^9, 3.6882655758931127`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WavePlot", "@", 
  RowBox[{"Each", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Horn", "[", 
       RowBox[{"190.0587", ",", "1.292", ",", "1.", ",", "0", ",", "0.1", ",", 
        RowBox[{
         RowBox[{"t", "/", "d"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"w", " ", "t"}], "]"}]}]}], "]"}], ",", 
      RowBox[{"Horn", "[", 
       RowBox[{"190.0587", ",", "1.292", ",", "1.", ",", 
        FractionBox["1", "2"], ",", "0.1", ",", "Null"}], "]"}]}], "}"}], ",",
     "List"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6243376821720295`*^9, 3.624337717932075*^9}, 
   3.6243408661501427`*^9, {3.6243410566210375`*^9, 3.6243410679886875`*^9}, {
   3.624342317027128*^9, 3.624342320136306*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwUV3k81F8XpkQhZIlUJCpKKrIWR5KIX/YlFUKS7Cpriuxk31LKnn3ft2vf
lzF2ZsYMg7FFipDyev/6fu7n3nPuc8/5nnOeh8/UTuvpASoqqtlDVFT//y5d
K/yuYmkjF6xeoDneZCE3aX8f27R9D7w93hmIX5AE96hq6oBtQ6A7fuCLHbs8
Uvx9/j/OG+ZAuiNBe7rOCHWn2X+02raCRD+NM0XGj5GQEH6dMGkPH547D9w9
dAeW96g/Hr7xEh4s0hPP0tpA4ch5EE1whijBsdvCorbglKc6+3DbDeJ2V5+r
3WVAEj72wb4GnuBPdHr9Ms8Jvcnrih+dfAd5rSLUsn+cEYEL/8I62BvMprNc
dbA6SN5nVY76hg9sriI07vYaUlapWWMXfWGIGGnmE/0OaB6yz15M8IfrF7CU
pEYrsGg7X4lUAmEocSDM6/Fr1H5NOlhnOwh8hSbeRU35IMFEVaOFzBDoeyFH
fWvMGQUdNrrmaRAKYwMf3x347Qib0lLeR2jC4aibgcMP6wD4Zte4NDgZDoHn
Pc2dd7zAIP2e7peSCJjLryv9LGeJDk8O1lsGRwKNz8dmj4EgVMXyWFDMLAp+
ntn8VfIyAFkpzUX8lYkG4a2ecP8PcnDSw+5PO2sMFPjuyLkVBENP0ZZ55GIM
JKrmUE3MhsKbea++R02xoGwIYa21FiBymkHqQkIcVP/iM8+tDUJTWtHJPxzi
4UmC3ravZSQKDzjNUKvyESKNsn2Zr7gj+fqMl358CfD7xly2d7s//Ph5haCx
nQCuL3U9FXDRkCJUdffkwCdwizKQW7XwAy1jhaLZzM/g60hrwFXjjQ7GdHMX
vkuEgUf/xT+PjEWlXTo+bgZfgITacItZYegpFWFF8epXMDpPVo647QwMn0py
6GiS4J322yc7unFAFnchLtslQaUkvdd922ioxdzkwE4mQa2YeNOra7oo+gX1
vYq7yZC/ea/3759YZEPb5vm5JBkSO/ixaZXxSCk5qMSLNwU4zrsosZfbIZ6b
6hSL4BQQcOFWt7OIgc0RttNqv1PgIgFce158hj6HMc1rZqlgfa1njlz0HjIY
E/2O96fCeLXTw2i/SPT225OaPzJpwH4w7D8+ha/IQOH8GjEjDeSW1xdOsoWj
q/hFgTbWdKhlKpu5VRcCh10KHuR4poPXoYmmq55JQGR9GRq+mA4n6n1OrBnG
QmWeVPMrvQzgfHjpHc8hbxSh/Pe3YVMGJKrdN8kvTkJWM43C8iLfQImmytvT
+DNS8PR7ci7hG6w1Syn3NpgD9wnVWHraTPCy8lxLvZgEP0uYu1cdMuGvjq7I
27kk6Lk/tDeEz4TMresOdZmOkLYQf71aJQseqp54HFiaiDx8Hj//WpYF5Mjf
WY6CqUiX9+wXH75s0A8QIhn9DUAi1XPY5x+yoUH9v52RNx+BVjeHTn07G3B0
wp1H+9Ngl48v5q5tDihaTGZxOUfAj++xZ+VncqB3wthrdfQjmqthLJQyyAXa
63hRfE06wgV4y17rzYWCtZdH2JjCEVZ3q0tIIQ/qqezbazgSoeOsrcHZijz4
hFHdso7KgPrVmVlu4XyQ3TzzR70hBEpqHzixJedDWsEZEwvxJJQZ2E/FeLwA
jrrSfLXW/oa+6N0JpQkuAHsvlQWuyQAUzV9z8u9eASR+V+kVWEiGOy7xQ24y
heCh/aYnZfsbNBhpn/z9shDCq8iBRTY+IHOHydSpoBBiRLTPR6emorJLnZmr
C4WwcbZGY+19JrrK6rP6QqAIVIpedvL/8kQ5W3ISFKMiyK15U3rCNB3OT217
mH8sgtbgak7ttUxIbi1tJg4WAf71x0Prh17CqVw7+sdMxaB08Avn4bPfUFzk
Rc1x5WJQpVP9R7mZhVhdZ+N03xdD/N/givwrJijEOIkwUFcMbV0Oz1OImUCn
9PDc/a1iSF7h919/lgXewsetu0RLIJkSU2gjoY12WQeKlWxKYNw10oX3UzZy
3g7ebvpWAt2y3DbDdllofUpJHqZLgJx9zEYnyRFs2qj9a06VgivzV868+7lA
ya3tldQvhaNKb5l5tbPALMqZvTSiFGQCS+TNs98hgqvow6s9pdDGwffGaSsP
PTBZSc6lLYOgvqEyP5YsNKSUSRG8VQaZvV/s/tkGwP3LZlfS3cvAm/9TYXxM
AXSy8bzmKy+DgqWLmasZmaC4M1abuFYGjp8OfDJXDUf1xKiD3JfKgYEjjCol
ohBJt9+/F/u0HMJn0k+84MhEpXlHIliTymFU9V3Br5BouBLdMho6UQ7KMRMN
GupFkO32loeBowLMQkanpR9+g3NPZJ76q1fA4/9mC1Z/x6Okuxs5B4MqoMdp
s9nxQDE6KVK4/ralAm5R2o70OWegWPYX0rv/KoDBYb2q3T8RWP6ce+ciXQnx
jg/ZM7OKIZhEbPvlVAkzgcUcPVbpQNvx6ahDfiVo1x35ij2ZjN7l6+msUCqB
WmZdP/52CfoTfezTc/4qwJ7tE2a8noZeu/eQZh9XgXM455y4Vyr8eOIvaBpf
BdmkG/6/+krAWlnBjoCtgionh52EwRSYF/lbZni0GnpN4j8b/0hHphyVuyN3
qyFhi/aLy71ShP/jeFvbuxpuqFg8qlZJRgbTl4P6a6tBAl0O8XmeCdgOCkb1
dzVsUUZur5SWwn8FqZwd12qA/aNLbvPlr9ARY2SkaF0DhYsht9BcNlLwOJHe
kFEDjlghK6GjZajOdGjpJqkGdt/7R71x/oSkVMJEq07WglwWlp3NIg9SojRV
dLVqwbYq/aXDlzI4SmAz+RFQC18aNc9wxCWDi+DI6w+oFny72DQL4zLRtGP8
B6HNWjiTylAua1WO/qszTGsVrgPDVzoRhpKZqJLudM0TszpQV3sqTlpJgbNa
UwN/P9YBvdpei012OXz4nEz5iKmDFbW5Xwzv82FrzmxPnK4eSu7ZdjMyfkSm
184fx8rWg1gUXkdFvxz1ulOEbV/Ww1GtAyYV54qRVFv2bfqcepjM8RcNZ/aD
FBYbwwxSPcTSCqgOWe/jf3jFQYELQdqo47XWolJwSf/hT7iPQOvQbPTVdVuY
Xi354uaLAIXyXju6VILUZF6XHa9FcMPMTKYWU44qfKR6itcRONKePnTgXhSK
ePbG4Rt7AxxM3tljGSmCthCCx8aVBjh8crtgyK4Sdosg4LZqA1yo8Mk6YZ0M
10aToiIsGuDFsCvLHet8ZLFL/XXKqwEeitgw0r+tQp/5zLIvJzbAHb62B177
9Tag1FLmXtkAP5fiVwWvZAKt9bnGzsEGkCsbnkn9UQU3I/x6OFcboK/5PXuO
SCE4lM+PPqVvhKG7VomXOJJRxqTyTMm5Rsh/0vEqp74K4aiyv1Pf2l9/6RTh
CCtBx84z7Kg/aoQwh9dxvvu8REnV+tAX50YwE3S6co9UCe72vSzLkY2Q87NO
+UZ4ORTGiJySyW8EhunVp2+HHqO56rALAZ2N4PZDberogwp0krgmOkJuBJan
XJU+3FVI45CWnABVEyy/x6hwboQiv4slKo4nm6BW6+JBlotlUKPOrtsg0QSL
d34/K+OqgbWXr0yYtJogI+ZJN4t/EpxLGHnxyKYJrHkE9P89KkaGSNI5O6AJ
eCLPHYh2qUXh5HjvrdQmoGXx+nNFPAu1Htn5oISa4J7Rn+t0//JgR+Thx+iJ
JnBaKhh+e6kOrurUpk1vNIG57E7+q7ZCeOp6uvDqsWbQXzcuPXM7AyV88azx
FG6GED6JHz/O16H+5qm2nrvNMKmIN9rIKkU0C/JYbrNmOEm2azlm+QlkmFLw
lp7NoHR4wWjWvBbsxA4ulH9sBsHvZYFkwUpIMzD/RVPWDN6d1fYjR7zRxJvW
PS1MM/iZDtLyk6sRc+p5huSlZsiWKuvCCtYgxQ7/46u0LdBhfKzoqqUPcluh
8MmebYGT3Aa2tpmVUMB673KwbAs4dd9tGIyoA7JkjtS4QQtIvE+17e9KBO7H
jIoXXrbAtyo93YjqMqTubaP+KqwFGC8yEq6rI+Tzrc+wObsFOEPCD7skZaLq
nisWx9pa4O8z1qN3BIth9Ue4gzGpBQiBUtssgg2wqXnQWGC3BVYk2BrVQovg
X9ErtYXjrcByNb5gtCQL0bJSpPOvtUKCxGLU45MNiMnR8IKTWisUZP1kZtCu
QMexPexSz1qB34L6v3+78XBaFA789WqFwxna9ONx9SAQWbTa+LkVwkfemgRc
rAXhdX68X0Ur2EXOqQacfQHXtWK7VLGtsBq9dabEvQbdLD5cybLSCoLmqaFE
LEKKrO7pw3RtIIgU58elkpCq40pkwtk2KFTOO3PgbzloYY3fGcu2wTnjiABL
hkYwFMXaCBi0AX02xs31WT6YRio+XHBsg8rjLnPSykXIar1cOf/D/nnWaC4t
y0bkqCUk4ZS5f151Yj6xvQy5Fn/il2puA8PRi+3NYunwjpXp2F98G0jdfBYs
udkAAY7v/jVutYF959chX58aCMeuL/mxtUPur5xfI8RAFC/6dFxVpB0ivxne
9X6OUFLkaBuLSjvwKx6VdmRuQN/WVUqHzdphN+XXJ831CJSvVZuc4NkOTw+X
OW8Y1kB5sUiY8cd2YPK5ctozpxHqWZM9BErb4TfP4jiLVSa0ObJZLfS1g9jY
s+sK82WoD+urn7/QDnht18gznk1oWHRL0YmmA8qbLhaV7tc/LtJKVIq3A8QH
HpWMfcgH8jqO9690BxDFZkcOu+zXrZb60SadDjA+fleb5Vo1/Cxu3PGz64CM
P0GujEe+oh3W6xTVoA54GGjIhI1qRAecMoZZ0jtAiPiUi7YFIfpBruZh1AGy
u8lfGl/oIFax4MKEiQ6IH32nwJCHgDvqb6LxRgek9Arbc+01At9Pu2ABlk5Q
WHmp1nk5GQS1p10WLnaC/o6cn/zXanS1RMci/04nNFvN2I5qNiMptnZtJ5NO
cF+ODEzNLkTyTtK3pNw7geG2KlH4WikoD+aI/I3pBEK21oxwazOoi/Gcairs
hEN0zvScFytBLyr8iH93J7Sbzjy3Uc9CRj8P/Fad6wQxw29qp+43IwvtV2QW
6i7wV2PIoauoR7Yl8wPDJ7tgNeCBzKeHEfCazRAlSHSBurvwKZ/lRnjj1JNr
rNkFjJe7hW/8awSfQbkEAesusMfGWW36RUCIWJH/gl8XeCZMpDXpIRQdxf8q
P7kLNsclN+3Hm9HnnzGmTrVd0MQm0rkjkY3StA9rSI12wQ2TqUCuW1WQU+Im
+/dHF9TuAD8VtgWK2VYuNjF2Q2Czmt05mzKodjLm8r/QDdfH34XhR4tQ0+DA
ITWFbmiYj+LEj7SgLjHFnyyPu+HAixml3dVahI0qJw47d8MOl9PkwlgKjP8U
7EuI7Abuj6Vvz0w3g2VSe0RaQTe8PNtzlydqvx+oWejm93SDwxNPPd2uROS7
TXOicqEbLh4bdCsyaUHsGam4Rtoe+Hzf9NMdjQaUqqWQ1M3fA01yfl7p+/xc
dI9oNizfA8l9K74HJ1ugMefthanHPfD2gpk/+VADaBjwLFHc9td8PzhjdtLQ
FE1d/npcD1hcoFPEaLQi26KHjrulPaB+WqRm/hlCfx/viNNieyBAT/LYn+OZ
EEL/cZt5tQdOsmNvYhtb4WSFZN0Jxl74iqjGCKX1kG028o5fqBdu6bFuYGRz
kDTLK8XLSr2w6e+003K5DXXUsh2WNOsFQR1zhtz1OqT/vLhb/l0vBF0i+Ry2
zYc5Ds2we4m9wGXHduFpdBu8alrV0qnuhVqekxzafHVAYxd63Gi0F4ZYl48o
DRaiqJOXJ5796oXhM6LZ9htt6GxHd6LDsT4QWmuaxMvXoqKXVk/cRfog6D8N
B16nYpDnO3LOV7UPXrFVtGZotEN/7zdKqGUf/A4bcH6kWQNGbkq58b59cNX0
HPrHUYpWzs/apaT0QVdlnmhHejvyGHwvlov6QJXp7s1ZrWrE8O7s7zJcH1RF
SB9TrymDBOHGarTdB5RX6bJxv9pBaNzYs/N4PxhRs9RF36mCSt9/twbF+kE8
QDbMxbQC3RVNPITX6IeV5qzp0ZsdaIRwo3POph+OX2Ed/CBUiZ4GT4SsBfVD
WcH4FyJ9FfySdNXY+dYPyontFHXPDnhP5mSnae2HJxJTidv/yoE1onz06HQ/
ZBy7dGKxpBoly+p+4tzrBzlPjr9tlR2Ia8O1gIUJA4wPjrynaytDJqoqETGn
MIA4Yr02HtXCt2QuJ+5LGLhtJNZLu9wB33/P63yVxsBaFeelFc9SkLhfISGg
jAGxOJzsk0P1yDPNjytLDwNyV6T4Jjk7UeuO7s7lp/v+cJwec0IliFHzHK7Y
CQOkIPP+wFwEOt9+1Ul6Y0Av4cDGsZud8Plv89facAxI6XZHiLcXwYx2lNet
rxjY7Oylnc1sQBezTc3a8jBgjJsOdzfoRI5UondUazEgK+FQcla/EFXrUV/A
dGHAdqaoUNatEajzMId1xzFgPRaVvGjdCcoHkxbH5zHw7q1+6FZJHoQ/sOsx
2sRASHg11R+VJjRWIJc/QzMATfmu6tddOxEvLVO4JdsAKHbT+V1OykYWj/AO
K3wDcCmwP66Dsxnyi3O1Ha8OQKH2Kd2rbzph87CH+G+5AaBTPCH50ekbyBqr
cnr8NwCPHlnVaM40I58y7m2qRwNwbnGIvcqlE/UwLE74Wg3ASLyWya5IGmK5
UVPI6jIAuWf/bS+aNoO2VYjfV98BaDzvzc/q2QWxHx8/Eo4aAAq+Lu2gXwlM
dIiIViUNAOnxfNp6LUI8W3t0SvkD0BOMfVvyoBs9uTCAx9YMQJr40UX2t7Uo
TS+lxLhzAOZ9linYkAqg+DoFLo8MwE/9EREe/W4QLlM0diUPgNc585E9wyaw
I3OI064PQOXfLSozSi4qZpunj9obgAOEo4+sHLvQpkIlkfcoFr7zOvr6/GhF
0o6B5bncWLCcn8YsL0SCR7JhiLQgFkIPLW3+ze+ABswl0zZxLHhmK3/8Pt0B
B6n+SmrfxgKqdCj0UYkBpSt9R4kaWJDbdioM52xDQUZfZ6yNsHCV3Stnlq0b
9X6wr9p+gQV1Q2+RtoZ8xFJ3K8zPFQv54nVO63VNoLPM+pTNH7vPY66fwdv2
QNxJskxSNBYoBbyPOU5VwcS9MpbLKVgwrvB+dfFVHeJx85urKsDCawNGMonc
g0yz9GuV6rDQl1Sim3yiEaWPCUYOdmFB0jtVrXpfx1Podp6ZjGGBQWL09PV9
/8KS3bIrs1j4T7owcPhSK9hbfGZz+4kF0XE08H0oDZXE2CzQUg/CPSXGpQz6
brTZIoeimAbBo/kpYSCpA8n8Yo45c2oQ6lhgrEOMCXnyk6zyhAbBaf3csabG
DmjUKpaXkRwEDJfAhTsPuoHG+/3xdsVB0Ap7L6Uimw7KRTrL2lqDECq9HJia
0oqCieeaiMaDoHxH1MD9Ri/qY/4dZ2MzCD4Rls9WmcoQK3TY7LgNQpdy0FxS
cyPo2n687R8wCBJpVwdVr/dBfKLVCfbYQTBfT33y7G894HpurCalDoL3nqWS
7vtqxLvL2Hq5aBA05+kThyT7kOklQkJ1/SA4EqmoeulbUIZhgf3dnkFo1mgU
XfIshIXAd0pD44PQ7X856M+tXhCu0jz1ZH4Q3L1Y5fX3eZE95ez6yq9B6HUv
qvblj0OlnL/a3Q4MQWaj1c1CvW70W6k1kY5lCLQddgLplLuRzOtYp+jTQ/Cv
veZtAH8M8kx/psJ3aQjIbbT9S14d0DQkxZsvNQTjNUeqlyp64RAN/YaM0hDM
RsteP/uoEJTFJrvatYcAH+N+1Wa0BYWY5ibpPBmCZ/LhTa43+xEm4s1rku3+
volHvxBHDWJrvK9m6zEE8TNHHos5NoDeGu/ZP4FDkGHJ42ez32cTeH/89o8b
AuWAijJSSBPg7zf1sqcPwVS4ZZ3DfDk64xmVmlw8BD6V1tdt7vUj8zxzV5GG
IbAmGcRx0rejbzhx9ZreIVhS6NEYY8gEEdHT4Va4Ibgxfcp3u6oPyv1pBk4s
7Z93XHqh49cOsvilY53bQyCTVTVq/74QtYgOarkcHoZeYzP3lx/7kWpAddQF
zmH43ix5wuxkG8Lik4dGzg3DKf+s7qV/pfBALJDD7/owCMZY6l+6iAFigL2e
+O1hkI02ClcNbYFnBP04suYwlAtjKC6OVei7GIxFmQxDU/AQR/BLDHoVeP7E
bbthMIR/PIHEJrRLOGq4/mYYMrzi+i+M1cH76xsJySHD4K/jtX4xBwP0QbhJ
jU/DIFlN0etga4SIqeZTVNnDsPFEhEDN0Yi4xHMeF1QOQ66nLOfLXgz6GhT5
xah9GN6uCP3q0q5H54muU0dHhsHSqaD56LVmyBN/cqaOPAzGcx88KRMYuB6s
/MT65/B+f1OSH1aphhrilZSTB0bg2IU5nKJsK1KQ4JzpYhkB8+6JDf5BDOoK
/sfvxjsCQYbmIieZypEmadZcSGQEFr/56tVLtMOYRG/62M0RYKdK2MOVYcAk
pHTOX3UE1oS0aR6mF8E86dMFScMRuPYnVucrdyeylXxvOWc5AkdMSFGz3hi0
EWKVFeM8AgmalEl5oWzkMa25qOg3Alh88R+euS44KCV96Vf0CExubdZdksFA
0Icz1qmpI7ApMuv5pikJjs3Q5WkV7+P1+mobFNuD4qVWV6gbR2C/z116WdGP
eENHRIr6R+BQhMVpPb8QlDFTZ2dCGIGiJxXVykJ9cFk6vZB5ZQTe9d47b9/f
B6WhIT/q/4zAN0G+M/W2r9ANspOoLf0o3I/wzyN86kdN0g+dTp8YBePTMm5D
tb1IJUyhtOfCKFBoj8z4wUfAkIU23CVGge0+693tVxjQlzkmcenOKBwVHjQy
f9cDhLCt1xPao+Dw+EJq77cM9HR2qiLQdBT88BYT3xgG0LJM+5aUwyiorhRv
nDrZjV6G50tT3o7Cls2Ka8Z+Pf6ZjXGLCx0FFsHuv78+DID3jTc1SomjcEP2
WfX10E6gjzDf3cgZhVgTdqkCszIUMacqm149Cj9L3LzW/gwgrptinjqdozCF
k07lnmxHXyO40cGxUSDIcNG5m1bD+XlqqpK5UcDxp6c06mAh7+aCvOnGKIiJ
/1t/ebANrkdivI7RjMHI+1/tzloI1cxXNDWwjsHXnP/cMuOwSEH260F7vjEg
sHyp5T3Sgjoj/RR5r44BzZrzd//jTaBBsfHtkxuDyJNH1PeasTAqq9v25r8x
+PMg9MSl741gFHWT7vKjMThGtecw/qoFzVL4lXFWY3D155v2G+NYZC3HEBjs
OgYa3N5Cxfv69NG1PzKb/mPwKDv8b+nFNlATWFo2iR2D2aQq26EVLNzknPzS
nTYGJy9dD75CqofL9N0aEiVj0NCrvcf9rQ3x/K0+kNw4BuMe90TMjwwiprXs
UgbMGLj0Cdzh0a1H/6YTLF4TxqDkgceVf/zt8H04iIu0PAaXjodR3RcYBEKH
W5fqnzFo8ffRettaB301Vh7lR8bhwoqUs0FyO6rPNxTh4xoHK91KnjC5QVSQ
fI8YfH4cxB7W47VF61BStEzk5vVx2PtkUcK/r3PD/S8qPrk9Duo62e0CBoPw
zo17s1tzHJSm/OQTP9WCvQ19poTJOCRMDpQ+SOxAJiY7D5Jtx6Hr0Rl5RodB
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
exTbVv2wXFDKN4v+B+wRPxQ=
      "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQranmvahz/Rd7Big446L9dvcmBH+rjtAulW0I/jyR
n229OxH8jj/3g7/tQfALnxxTiD+A4LtsmbLL4DiC/zLY4N3lKwj+JWvx3TY3
EPw9yv/al95G8Ps+n1Ysf4Tgm0xOD5X6gODXXZq3J4H7K5x/6OHx1B18CD7r
xw98AkIIfg+/c+J+CQR/ts9zVjk1BH/HMX3/2w4I/qddBx6GliH4Zqdedq2t
RPArbwqZsNYi+Aw/Utq2NCP4/Kac2sITEXyd9YElF1Yj+GmLH7F5P0TwrWwu
er1+gqT/6v6+7hdI7mObK3bmPYLPlRWu5vsPwb/H5Jb1lvEbnL95tsm6XlYE
P+asoNk5HgR/vcEZV39pBL/l5K7O93IIfkTSyrP9Sgg+05S20AuaCP41ndKZ
BboI/uqjyXcFDBH8kO8OqYEWCL7GBP2VH60R/L8acm8n2iP4SW5zIhWcEHwA
snOv2A==
      "]], LineBox[CompressedData["
1:eJwUV3lYjW8TPid+KaRNUqJCSogWoWLe9n2VFtKikKSSKAlJkixpQSqVpIgo
bRSelEqptO/7vp7Tevble7+/zvVe53nmmbnnnntmZM/42pzlIRAIY/8RCP//
LUejmjuMKXAT+A8JPCdD8NLUV38TCmz01LZ4c5gMlo86WSIWFNjzPNTW7Woz
7JSrxvKtKZAV+kq1Zdc4ov0oDD9+ggLvbYKMz3NJqM4u48+SAwXUOxAjNqUR
vSbHro93ooBWadv3mdZxuBZ5x0rNlQIuPAPRYogEJrJ+8a3uFNi8XOE1f78e
tpU4dwacp8DWpPjTdTcn0JKNuZTYRQoc8Ohs/R5IQn9mNF0LfSjQaM7HYvyt
Qcnhihkn/CkQ9yArxEJ2Evy2SkyuXKVAqPjKuUu7SaBftGbv8+sUIP66Ii+z
tgokLSm+6jfx+19XlZqhSUSaGM1vD6XAV4Mje4+0zqHy0BbqtXAKrNuz+7em
bjl6IVGuKR5JgYUBK1a6/RR4f8m9XfyQAlbB/6WoBs0BZppaYR9NgVIjkbQT
899h4+jjNbRYCtT8p+irND2FpkJCTBOe4/hsevP7stgc+il2MfpwIgXSkpyD
nx8vRLGfHFs6X1HgYrnIs/pr03DO0Ej8+msKvCu5qrL24yxoDqqfkniLf+8a
ZJHcP4DQdbnUb+8o8JZf2sSVPY1GhTeOOH6kgM/dZs5GrVn0NZtHnvGZAmua
a8p71RLQY90Fr8R8CqzONq2rvjkDZ3oHPmkUU2A0+lbZh8oZUL/asNhdQoHj
nGC1/CfX0boNP9Rv/KQAVTSifJw6gwYzPwRvKcft57bdnzKaQQWQ+LO0kgLL
cQxt15vp8KAzksephgIh1910X1+cheSJQN2fdRQQGl1zx39hBnIp58JlGil4
XPpbrh3Lh9//2VWGtVDATJ1MkDKZQp0b9XnH2imwJOaQ12xOQrM71AwNu3H/
7icKSBk1Iq7Kjsj3fRRQKDw8VWEzBiI6IjXrhijAv9CsynhPhl3WxLU+oxRg
/jUXXFDvAQ3XeZPGCQrkc1t+yWYNInPfgYcqMxT41LzZ9QKDjFxvNdTFkyiw
b7ZSoT11GAU8/iFAXaDAqXjsxNm+dohM/mjhuEKBrr/8O4K0yJD0ISm6lEaB
byVST0p5J+BTSVTjVhYF7kquXvK0q0blNdeFQ7kUuCHSGuB9bQ61d3raDPNQ
gZPFVzmfPY2mJuzj9Hip8DpYSyX3pB2wKAatmfxUCNjlbaFfPA1CvOpi/AJU
MJEIWvpwaQ52isnZXRSiQtNjy4NBnCo4tHPji3pRKnjfHevX3DSBTFRXde4X
p0KNq+77Z4fIyFlncXOsJBWGXKnfX+W3I3/rIcflrVRQW/pygJs3DPdcGxPt
ZKkQ5PBN4wmdDAm+qOfrTirojdbSeOMH4eOtT1JbFKhA+8K86ubSg8oevzp9
cw8V6uN+pO7LIaOW5EcpA0pUmJIS+iCqM4bGP9wY0FahAvP9viHbK43AKPGS
yThIBZGnlil0WxJsqHV04z1CBd/g1PPuWlMg22WU7qmFx2Mqbl85n4/UJg+N
1ALuHzX0mhVrBhlRd+3cp0uFLYXCNrZus8iJd9PZaAMq1GWt7XOLL0G+Yv9l
LhhTwblu/2++4kkI27k8ftycCuarVpKsnpPgueqIfJEV/j1P8lPd0AzZOs2e
m22psEpctaImbRT9sP71PtieCrfl5Mw+/yGjRtfc6d6TeH6G4x687e9Fo76p
e8AZ95/iQND9OgC0W0+8X7tRIdXJcLUNiQzrntzMWXWWCh5lY19vnx6Bba+8
SWc9qWALX0//2t6GVD6e2v/nIhVav195wviPjAxKTfwUfamwWUioYz5rAjnW
Hsl75E8F6XcdB8QLK8C7S2GRdJUKOa9yXU6Iz0HopLiq9XUqnJwI+eWsOAPx
VN6A/BAqZJ1+cShTMBmyeCkFYqF4PMvuRV9VplGJ2NhK4F0qxF44cWhr9Rxq
2Nmq3h1BhXVq2285JNWiYdWKQK0oKjQvmF1P9BuHFZ0vX1MeU2H8hzVVzJMM
fDav6YQYKvTyd6waudAJUm5PNdzjqRDxb/Lcr/khdMDv9o3KF1R4sP/drbtc
MtK77fNdPokKkY893TpODSGHJ6fZD1KokFZb1eL3pQsuvjI7NvuaCp/lXa+f
jSSDkDpR8sVbKqTkpJFU50egoKFwRfs9FfoXXpXD107kcN6rafYjFTJsFFz6
m8mIxd2W8yKXCsYRhfqrjw2jtISWSJ0CKlQs7b+l+bQX9JUjPeaKcf7Gbeio
wfk7XaOFJZRS4aDlVq8rgYPw5MzCFl1EBaL+opT8zkGkwnxLnSvH7UuqnGOx
yKgj7mRLQhUVvtwXcGFo9aGQvYKfdWtxvB5mKSqQhkCmsiKKVE8Fxz7JYP9e
Mvw+HXTuZRMVqufj59y9uuACZa+OXhue30MHj8pmjKAN0UNbyZ1U+KdS7G2V
QEZf5J/TX/ZSoVREB3neaEN2ZSZteoNUOLvz4trdemPAdODmkkdwfx+hU8MH
yJC2kP8ocQLnMy/576WAJtCL8vTUn8HraW3UX5+6cTS5favePIkK2jE5LUmZ
JPS4tEk6aZEKfB37isbya5GKbQRTn0IFG6Pbelqak9A+q9ExT8fx//PWQpwx
B8H3yF+S2FSIclVjSLqVg/S2jCcGRBq8IgTnUJ9Mod9FDl4Lq2mw3DpyX2zv
HPK0FDBI5qPB6cDC3OilfLR+8pes4XoaNIYWhchVTUNu6DX2giAN7hl4ZYQc
nQVbiT1dyaI0+NmudIIZEAn0vIECQ3EaOO8O3eA1MINSTOKfLkrSYMeucWX7
/TNIZ8TI+9U2GpDMU05dy/8A4zfYhkbbaXCw4+nuh12zELXxy44lOfw8Ns5q
5pkGpZxz3Fe7aaBSPPci+ctP1KK/pcdoHw1sdLY4X86fQ0H9/4qWDtCA8CEP
wbdJJBUYHpuiRgMhHjmLlwXVUCZ4xMf4MA3Ec2lHd3uT4Oy7OeNlTRo4Zh36
IGA7AWu10+VSgQZPyL/fe678Q5+67IgmujRgVCR7j/KQkY3/ur5lAxqEOZb8
/ds6hqhry76mmtDg14vnBB3+Vkh+ExBvYoH7T0+9x7hGBkxrt9+KNQ32qhNN
dx0dhdHWPtO0EzSYPtbifYnYiR5cipU3daTBR2p/51Q1GSnxGq6iONHAVGt1
7OiTYdScwuxPc8X9Pzd6urq/B64dyi0x9aDBZJ0T036FDFsaPZ5TztMggrLL
bOLvIJR5Svi/vkgDDT72Y07yAPIgNpib+dLgKkV/rwher3yJYbup/jSwtLmW
bDbbh3JUDv2Xfo0Gj8S4sJg0BDZ/ZwbNgmmw+OLNY4ExMlDc075Tb9Kg9J9B
tZN0NySybBPS79AgLStX7NuJEXTsGX+A+T0aGHjePnA+i4yG9/20pEXS4Ky1
GN+xg+3ofpX/njePaED8uObYOH0UIiIujGg9pUE1gze48BwZwg1ck9rjaCDb
OCDXEtcKd3ntj/u9oIGDaeJ6TYUxFFZlvm5tEg06FajnXp8ko9AIvYo3KTQI
StHSlJJuRbcNNG8cTafBYYED8dp2Y3CLV0W14y0N6EeWbCQsyBBSpTDj954G
zw7e6ZfMboEbEdJv1ubQgDJ4W5F+dwwFG2w6lZFLA5a3g/dWbTIK4hUQPVaA
4yEbV9ao1oICq1b97SimgVGDxy63vDG4FsEIu1yK4x91YCRHlQwBBgsa6xAN
VkmdjQPUDFd4JxczymnA6zY4ENQ/hvyr+rOPVeHxKilP1cqR0eWItjOdNTSw
L57nv2DcjPwM6iT962lwV2prLqwbBx/eiuZ1TTSwEyzNCxAnw6Wqb1FvW2kQ
Z3Og06KlCbwjcnWgkwZP6/0WCg6NIy+DLEZnDw0WsK7LH/jI6AJvyhf/ARrc
99ucv+jUhDyr4r3Wj9DghIgLt8N9HM5HPNyeOU4DM1/M1ZdOgnMGYd0wTYOZ
+Bgru/FG8OC9Hts1h9t/k6T+LnocuVf5mlxZoMHaLRaFZVMkdCbiHI/ACg0S
tvmfv+HbiFwNTpdk0miQWLR+ZWfpOLjw2vpjLLwef6z5kNpFAucqE8VuLg36
dpGdq+f/wekI7eErq+hQeLL+pfn4OHIyOJwosIYOjRSJm+trSOgk736brLV0
EJG7Uy7L8w85Vsmt1d5AB8/c/fdkhSfAIUKqvFuYDiOlHZ5rvpLAzkA0OECM
DjLWj7z5RRvgBO9alQ0SdFDwQ5vTNCeQbRVhOkuKDpOnjuQ8xfXyeAT1tbYM
HT4Ffmi6s6Me2RiQHHt20GEXj17xn7MTYMU7JnxVng7Cn3qi3sWTwLKqp2bD
Hjr4Wol5PlGtA4uI5jvvlOggUVv+OzF6ApkZ1BzRUaGDnzhX1zKMhEx5yxZ6
DtLhjmh0loruX2RSVfT+6hE6PL97J1Ps2wTex3LcBI/SIfpZhNQ9XxIYGWRI
vMfoQORx5fe3qQUD3qQmHT06vPDkqzg8PIH0q2Ie9BrSQaye4mjiREJ6EZHa
10zp8N+0Hp+VWw3SMbhNF7SkQ6XPzrBV6yZBm/da3nsbOszTA3RTjUiAVXlf
0LWjg/HDMzKNvn8AItxl+xxxvG9PmV1VnUTHDE52XTtNh93kStlwNRLS4rWO
EXKjw5P9R/6t3KxGmlWGxtkedGiLLXj8+NQkaEQcI+p54u8JmwNdmgSHDQ5+
67uIn3/9Iu73Q3we5d17OdCXDg9X9uWa3p1E6lXbdwtfoUPPwXWTnLUkFMCS
6Pe+RofPLyMePfBvQF9UhOP+XMftVWZM7Ho8BvOefEY7b9JhhweEXMwiw75U
Lut2KB1smGfyku71gFcbJa/nLh2CQkNjr5sPonfrSOcO3afD0Kz4x5RFMhrX
HtsSF0WHuEO2Ri52I2hnUG8j6TEdZnJUs7TKWuHMp5Z7JjF0SBphHw+cIkHa
aK1GZjwdVuuOK5K2TEK/ZDmZmEAHex1F4pRQGdpi/S3jdBIdfoZra3OezyKH
+7mO31LoILR3IDdjcAY9/5G1QSwdjy/enp4qWoBal1Iq/N7SoWT0YMa86BSI
KD4PqntHBwNVG9vTISSwcn28T+EjHVDbg/q/vU3w5Hn48N3PdPix3H/n671R
VFd348XAFzqc0FrzyKKFjPhXXTHTLKLD06HKR+6UPmRwxIv44hsdeF4uHvl+
pB/Cfd2KFr/T4dn4gRaVDjKUv3W4aFFGB0ENwgt3z1Eg9FrKZFfQgRd8u/7b
1YyOiRi2/VdNh6wYnoLB+yR0w+hYlFstHY4+Xkzbw5pEX28dhB/1uD+hnnv6
dAuBUrB3eXMTzvcZtztmSzOgNrPjfUArHf6osl2q7s2Cv+wW58YOOozJLnIn
F39Crr2I6N4eOthV2eQsqU2iucf8f+7302HBr2dV+AAJKf4m3BwZokNuzpqD
nMBW5MmgKsMYHe4aDM0UB4xA5gHyeOIkHdYG/CY5zpNh9Nx4EmWGDqYfgkRf
7h2E7a/6rGzIdNgouOWtd20Pcmlp/e/TIu6vS3LI3EcySuavK+Gn0GHF97z7
iN8Y6oYK37N0nC/3QqNyef/B5mslO3+x8Hz3FtHWb8b142NelxSBAdx4083l
jVMQP/zuSdAqBgzTP84xijNQ0+Y03VZeBsRORXyL0ZlBGyxf0PavZUBRo2Jx
4tY5ZHbvSc5DAQbM92OhQ0O/UVTpvTMTQgwQzvic9tFkAv4shIjrbmTAvneD
X/XUyMCrEFCXIs4AXU2Dlgz+DtBzvniHIcmATVFlgRknh1FY/Bl1u20MuCb7
b3Moh4xQreNMniwDFtIuW1+1G0IsgnWagBwDRPed2Cxv0QUah4xOXFBgwENL
aZfhK2QIugRrK/cwAKwzbdx9x6HojTqS2c+AyayE7X1fatBy176AEBUGtIkZ
Gh9InEMqQnK7Ow8yYO5by0WLl9N4P5LqVz3CALPORxVDm86gnBDRuGgtBgQI
vTshc28apr+sNZoBBmDZZhPdWXOgMEVkG+gyoPSP6okYrBbOSdPz0g0YoEFh
lkWeGEcZJ+bPcYwZECL3djYwmIz8xXKK0s0ZsNWheDjzdSvSbrvAa2jNgN7Y
qvNPvMdA6NkuuxlbBtidvNp5QYUM/bYjb6MdGHCyT3SUTWmCnI1pK6pODFDN
CylXujyOQlqd9DtdGECLFpTd0kNCJvESz0LcGbA+371h8/0GJGHbPipzngGP
SxO02r0mYFI0Tq3SiwFyhIWrRQEkKGqxDL/gw4DVO6OXjIRr4F7c+lYBfwZU
xu6sXus4iWyP1+z4cpUBV+9/H7/EnUPbRSOu2F1nwN5d8qmHoivQQrNOBSME
x7NPZtZecwrKYrkiqaEMuE0rqw2+MQdPbL6f0Q1n4PP+wUt713wHJ5HrXybu
M8DE/uoaS+FptKf5IM+jhwxoUZ/P2Do1ixgxi9YHohnwdG1QwsHhXPTH+vPr
1lgGLA7x3bzfPQ0vhL0Xgp4zoHPSdnWK0Syca1LQ3prIgEfZp1woLc9BLWbs
6a9XDLjsPD6T8nwGrbJOHzz7mgHi8pvcTBJnULOQy4G1bxngSZb9JzL7DNIa
t4R+eseA59wTzkf0Z8H3aec/m48MqBKTpAT2T8Mxq2fS1M8MKBY2WO/4Lhet
F7LxTcpnwLH/Wq4Rx2dRz78NCIrx/IWffBEmNo2yo/9uGC1hAFtmMCyyvhSC
LCOdI38yoFn5z8t3QXNgIKj/aW85A34mc8PrYArE/hE5jZUM8NorKvLUvwKN
PvlpfrWGAdXHOaITrDn0xeLGK4l6BqR+ttP8eXoS3dlweO5HI/7eC05j1/If
sGpY1jrTyoC/rtlHQ/xJsO1J3iPeTgY4/fwOVb4TMGfu05vdw4B8HSU22asB
fRfYs9dygAGmVfyJSl0kFFU/cWNpmAHOSc+mHa6NI8fHGX9fjDPg0phbhOhU
EyiYu23RmmbArpSbS3/x/YyyftvFwTkGWNAuKM1fHoPKuu6S8AUGHNFMOj0X
14riH71Yu3sFz//opoDd18nojJntyXoabt/dyGmd+yhSXi+cfZmF85HLeF+s
1gGEunq6GIEJwr33S3Z8IUPDwyjjklVMOC8VMaZkMgKvTA1fOq9hQi74hOyu
7ULe61ZP8axjQhf4zaT0kJHG37LDWRvw+zEcyVH5YcT/8GakqQgTVOWmLnNt
eqHTRKOTLMYE20Hmzwh8X8hcS5WPl2CC1ef5qa+sQbhamx94eCsTZHTDrFn1
/Ugvyq+6V4YJOst1UQ34viBisk/8zk4m+Ier77sdO4CG+KfPySkwYb1tZcty
8iDk1mQW1exhwgW7fUaXGWS49cCd12c/E5jzV6akpPrA3FjGTkSVCercbKW6
2iF08nZfepA6ExZzR5sTcPuehYnk/iNMMK6rsm3RGULXZuy19I/i5y88W9ex
rxvCZcUefMCYEMuRKnn7kgyx9s1twnpMICmGmv53fwxSH0dvDzJkQuv7mOur
+BvRxwoz334TJliSEi2vW5JQCZ3/u54FE4Ka59x+7J9Cf/ZX832wZkKw2yWF
sF+F0HY2/ITwCSZsUvVU9FCcheEk7fRAByYcj511f7J9FuabOKS+U0yQqjgy
sPtYIXDWfNfUc2FCePLv0ZEjU2j9seuR2WdwfIuzevaakJBkgHqb0DkmED+V
bTnY/A/JZy/JBl7A443N0FSNGwO1wVyfPm8m/Ci36uN7QQadTT6lun5McNJz
/P5LsBuszPbwZV9hgsJqVJprNYScwyZthQKZQC+du/gTx8v769vX14Lx/DIS
qeI/htB10hlS700m5EeuTsW2d0HEThlN3Ts4P+TumjreIUP8yb7778OZsHqg
UUNlcQzSnya2CkYyobL+7kG1nnr0ucpe9tpDJuhDtZ2XNAl9Z2306X3ChDTP
2pi6yClUq9JcohPLhFqXFMdHannQ6Rm95v0zJiQfNv45NzID4ylmtoIvcTy7
jVNZ52ZhuZX/9dVkJgh8OusRW/MNiOuq53pScf6eWjfDMzCJNmiHa+i8YcKZ
uN9T64JI+H6uff9dJhM6vWvKnVY1IcUcTsuGbCZU5XgIBO0ag8MjpTJXc5jQ
fWTzFYEcMhhIXL/Uk8uEbVK6N65K9MBxS/US7QImCF3Z/npv2yByvbfE+66Y
Cb7RGeHGbDLyKc09vqGUCc+s22RmDg6jkIVLaQE/mbD3dEJuysZOeCC/Z677
FxOmC+FtCL6PPj89eUS7kgmKGuUCz0+NQ0bc24isP0wgvyK+XHr9F32pOdMi
UIe/H2W+ODE7h8q40jIB/5jwO7p/onpgCjUc7PPubmaCxOO4k65m76HnYuI3
rJ0JrnaTZ1WSZmDytT1vVhcTbqgl6215PwuUjo3HBfqYELYms3bI5ies3tCc
emUQz2fdqsktYZNIRC96tmuECSb+u+z83pCQTLDZEWyCCUa33yVqSTWjfbn8
EZnTTHi/b4/d6q+joDFe1byexASDzdM6t8rIYCQVLn1lgQnfsqWrl2V6wc5G
27trmQn7n0XMGDsMIvdIzleg4fjdULPSoJGR38/S/zKZTFjQa2bq5AyjW8tB
Nuu5eDzbLh9Y818HPFJUT/XnYcFXmRaKsDEZEl2XZjr/YwHLWUlZoWIc3j3P
PQz8LAj/Eehz5VwNKqy7dO/tehacfahxjFI8h6QUL31iCLJAv7fUamf0NAq/
791hKcqCbr55IW7ALTQ7epHwdhML0EP5GF+TabDVubibIcGCDv+N0aajc/A9
1cvGcisLVvsEFEx+qYed7As3MmRYELMJ2+UTPoYenbyQQd/Bgpe7GzVr8sho
udiz3kKeBZdvr7px91ovchLzpLxRZIHuwWERptEA/PY/L03fxwJhscBYzgAZ
9jaeM7JQZkHBw/VDVpajEL/v3OU3aiz4uErxpxK5CbGizibSDrFAdguP9BNv
EvKY9Kgw12TBj/MP1+s6TqE6fY/Z9GMsUHclL+09ngNqb9zFaNos+Lx/uiTY
awaSCe7HzPVZ4EG+ECoiPgernc+cTzdiwYXlDP72+ErwLnV7SjVlgWmve4AS
cQK1bnb7ZmbJgiq9oZPf7MlI65rr8GsbFpjLmcR35nWijBaXddQTLFj2SJa+
5jUE65Vd1MwcWRAhuX4un02GK0+cT792YkF2a0BYd/YwdM+cjqC4sCDzMhA3
D7QhHePTn03d8XyyX/jfJZBRdqZTZ9o5FpSIly0c4MP5t9qJSLmA4/fXKrJc
EeG6eUrR9BILeo+vc9t6CdfLnyePp/mxwInAPPAW108TqZMhK1dY4KiybpMG
KoEv1x3fmgSyYGnjnmTts5NIssOhITWYBVsLIrPX9pJQmJoDdfkmzo9H1Iu5
za1oOsZexuQOC269McDKto6ADdnOODWcBa0HOi9tppOhxMzOf/k+zo+O+0Tn
RXwfyD6RZPwQf79a3PhhcReKWnPid8oTFqwKlbx76AoZLXrYzi3FsOCErFKM
/atxdLL8+CbjZyy4N29ExCqroVz6OKQksEDgsKOYjvUcKN608VxKwu/Tg7WI
MjMQ220dY5TKgjDjy9FKfhnAOGRd8iqdBSSx3dm7P0+hM8+sRhbfsqD60rl2
bSCh2kXL9UbvWSA5bqCs0teIlK0sD776yILyX07cyO+jkJBj4bz4mQV93sK8
ys1kIKyzuG+Yz4IdtfUl5y37wdPTPDe5iAXjk1sSPAP6UGOlWdfCNxas2Rpv
sP83GR3eYcZj+IMFn0h3tmtJjqG0UNM9yWUsCM6bMUjt+Qd8/Sa2CxUsoF5o
37YsRgI/TZObBtUsaIuyy9KjTUFngnFmUi2ef+Mj07yeLxFGMfo3X4/jsaX/
e3jfNHp33Iim38SC9cmC69eEzSGhPEPZpFYWdK7dKqLxoQYFbTA0me9gweCh
TF9R/XEYvGhwRb+HBZ4w6Cf/ANebGv3kxH68/hP5FZ++7IbcXfqV5CEWBIjO
V7RHDqL3AmsfPB7D8VOwlpTG9Tl9ucFszxReT0+395/Z1o8Se+KEamZZcOhR
8KfwrUMQV+7Qem6eBRc9j7alUsjw6P3WhNXLLHApMopWnuyF8KfDp9KpOD+D
psmquUPoZmCWNMZkwc2nXiPnZsnomrP3SB+HBTo3P/x+/akH+eorZ93gYYP4
gy++LdgweO6leEnwssFBoOvq1X4yuImWKhXzs8Gqt5+/83I3nGTcXrQVYAMt
vNrG5t8wOj6kV7QoxIZsoUd76+vIyOwPf/DTjWzYoFFiQlfuQnqfG44qbWZD
bfELduqpETj6PI5Yt4UNLwUcN/kVk0H9pkPlBWk2mO5c+0+R3AFKHlsfrNnB
BldVhtjHsREkbzps9nYXG97ZZee6ppCRjEqWkK4iGzz9D6vHvm9HEhLerYP7
2JBSv+neuUujIEJQTrilzIbn/9QmXuP9ft3Eyimpg2xoDpvyP+HWBqsbSqRL
DrOhlaF/HS2OInbB7RF7LTYYtqSJHnIjI0qSXtYKsCE96GlV4qZWRArjvxin
y4bvolPns66OwcSFBiVlQzbcUdrF3nGUDINWcYsNJmzAttK/R9Y0Q+chhyJv
CzYkdxwRFKSMoaZtW4PX2rDhq++WTm8xMqr9b/jouxNsYOjWyhsEN6GK2Uyi
gSMbfpUIB01cGYfvLRcrR5xwvH2C9DdNk6Cw5MCDO65suHWFK8FQaIRPr1fM
pD3YUKH1jipLHkdZkSVCP86z4T6Y2ciVklCa7+3WkxfZUD9UWPXiQz1KsNNL
oPmwQeavkXLu+QmIOcrv9NyfDXZeuwJTI0kQtbNBWu0aG9DrdPEq4l8IWxc3
0nSdDbObuOLhfRPoxqJ9lu9NNuwqvfIiyoaEArqkLgrcYQMrqvtVg+0fdKls
SOlDOBvM3DXmo60m4VxW5qJRJBvsoxoIc5tJ4PLkYtH4QzZ4HzutRHxbCQ5X
DwSHR+N4ip+3riqbRNZOK0e3x+H5/KXjVd8zh0x0S4hlz9lgoVa1mLNYjnQU
b1eeTmQDCN6Wl1SaAk1hvQfMV2zgdbu3pJI0B2o0PvOXr9nwcHnFRe5YGewd
qBc69JYN2m+iC24lTCG5qtjW1ndsaOGT2SlnP4e25dgn+H9kg/t2V0c/wVIk
Hi/lJJTLhqzZg7ET3Cm87w9Jf8png63p0+kPgnPAfyZzxLSYDdfbzj/1SS0E
HuOLWVMluP/PhfKNPKYRc/+Bi/d/skGTcCrp3+9ZtLxpRUmuHH+/OvH1xN5c
NMv+tlheyYbRXHmP55XTMDZ6q8i1hg26baLzCddmQUpHL7Csjg2DJ7vI6/Ad
zTaV/7BMIxtyBu+WPL8xiR6xGmi3W9iwwjMflldMQr8d478NtLOh/KhR5BmJ
FsQqcgyGbjYkyh1yP7BjFNQ2Smum9rFhMfi6/YFeMnhfHmVyBtng5JIUZW7T
DxkN7787j7JBbJVD6iWZftS7x/fmzwm8PlzO+N7uIqOND9SObZthw76Y0xJy
R0aR2Tidc5PEBiPUfvDkSDPc1UWob4ENzBG/b8WfSVCSFh56dIUNtwM7f/9+
PAmLbGPtVzScLyYvb2/pK0WKpwR52Ew2HIi4pZh2YRad+dpa7sRlw/EqBdNx
zgxKFEu8+52HA3cqnmaebCtAzf4uelK8HHDNCR8xlpqCtY07/wvh50DU4/LZ
t94k0N43XdmzngN9nZeLvig3QVDU5whNIQ5gAZ1E8/FRlDsRYJgkygHZxCmp
u2VkNKmnwcfchH9XHvxU9qQXyaRz/5yU5MADOR7bk30D4MD9/aBkKwfmVzLY
B0hkeOoUZSIpy4GsAhIt6fII/PlmuS54JwfOR7ZuG6xqRQRxsboueQ64N4Id
3zIJHQ7ofnRkDwfK6/vf5U1MIL+mVPOXShw4sYl7qG7gF7xTOruBrswBZkng
6KaeWRh4qPjP4SAHtJZCx0xDZ2DTFDn662EOPHIZKFn37z1YGBRabdbiQIyt
T/DfoikU8SZYOAg40LD3uIaEJAn9JGDNHToc2CjHcot62IAop/+LO2TAgQu2
jxe1M8ZAqbT2+AtjDuSINi4QXpHh3OanG6lmHHi39d0zhd/dkHL1RJudFQeC
Yu/ePFgziNqbJZ8XHeeAwASPPQ+TjDYcGLTbZM+B7VqF4oZvh5HB47fi105y
4JuyuqTB23a4Oe3V2XaaA0WR0v5F+P5fYHjg5UE3DvT3pWz+pjkBsxkrjs88
OHBzleG69LpKtJOnVHLlPAegZfMTX/055OQS2mN7kQO/Qs3pk4xpFP9dP7nA
hwOeNG0OX3ccqpNYd3qjPwfGKPLuK/i8uzqwcWvAVQ6I8Un/kS6bA83WZ/0t
QRyQlNudvOtjLfgrn0pVDeHAU+NfJwedxlH2ExnXuNsc+LzKKuHLZTIanhmT
WQrjQM2UsTNlsRNJGn8YsonggK3ssZGXqUNgk+mX/uUBB0qfS9vMc8kQtUrd
XeQxBxiliz0OrUNQ7src4f+UA/VuMgqbbnUixo+y0aY4Dtx/dEss/ywZqWyJ
eKv8AsczkHnrv6hx5BVkei4mEbeXlugqXlAD6W1C8guvOMBSNpyNfjcHXSrt
E1avOVDpJHKp32ca0iXcdOkZHFC6rHw1ZOtX5EWYTXn9jgOvz6+K/uMwh1Qn
rjGMP3LAKZV2VfXkFGLVE+0WP+P8uHG8xep0BfwueJSXmM+BdtvoAzv5SPA4
SVxAtxh/L9f6mOCBSbALS/ecKeHAz5YjD0KSatG2C/t+x/3kAJ+++YRgCglN
WH6V1irnwPNYO3OfhXGUq657Y7SSA8e+XveJHmqEoK0N7Y9qOJAWY1W8XpIM
2qsdVQ7WcyC3OTbcOXUM1s6MPO5r5IAyL1ll4/lW1NzkM3WvlQP/nAaT8m6Q
UdJXup5SJweEb5lrcjRGkUdqeFp7DweefNzAsOrpgH0RgqxbA3g9w8XBD+Vk
oHgn2suP4PGYE8xuVA7Dz+Ny+f/GOTCSJPzPQbMH3dfI3RA0jeNxP/4cIpGR
laymlwyJA1WkDxtFsCG0ma+q8s8CB4aHirstw/thiGQle3mFA9mrZLqq8Pxm
t/WESNA5oN5b1rbZYQCufD/X+YvFgdpd8RNFXYNI682CqheBCzEbY/7mr5DR
6qiQaJHVXJDP+853R6wX1futmSlZw4V2QroswX0YntvHGriv48Kpw2eqnjSS
wfnY1vR1glzg3RuYLV3aCfJy79j5IlzAkotvFvWOoPl1qo5Om7jQVFELgU/J
6Nvij4LVklywzviv5q9pGwrrMhLK2cqF7F/kDYn6Y2BS1nLxhCwX6OTNd94c
JINolnM1eycXBsjxB3xqm6D38dT2TAUuhOkaKVxPHkcZAQG3LPZyYf/HoiDX
MhK6dIrbRdnPBRsP6Sn2lTqkrhN1MFWVC/pmD12UByeAqyAWY3iIC3vMCdeF
lUnwRzBtlqzBhTbbrI7/NCvhKUXRKOEYFww6TO7mCk4hx77CN5gOF6r1do7u
j5xD239j3El9Lpz/ciZy52Apms7+ezLGGMfPQ/ruyu5pyI+xKzpizgUJvuOV
JlWzEBI0JDxsxYUFh3v/6ZzNBn0X70tRtlxwEfUwFlaaQRsMqH9UHLjQePi5
Pe/sDGrfG7az5xQXIsXO165yC4JUUYHQuy5cIBz7ek9+yyx4Ml707HHngtW6
ouAtjGk4MLT9UOs5LpQmr5EIPJqL6NU5sSFeXLgnm3Ted34WlX86TNrpwwVB
/vRN9gtT6OGzCuP6y1z4PXnusdTET7ANsXh79SoX8hzvGqnlzIGUexdh23Uu
WH4bvvSyeRLGjD2cqkK44CT+7ZVJaRX6dIBc7BPKhS2DQ3rtViR0TTxYVDyc
CzJ7Ml3aUiYQcFb7ovtccP1yhFZJrge+seja8w+50JIYXVHbTQIhnS07mp9w
wQSZPssZn4DNqZk3tGJx/NROec15VyAZlnJr5jMuCClfOspVmkPyjj/2Cr/k
gr+u6XmLkWmkVGR070YyFwr362jGG7kiddHWvrFULmyTeS+Q0DQNx/xc1K3e
cKG49Z2SmdYcGNRPPynJ5MKBNbsz385VgIXitYmd2Vw4QW9MoTdOILv7RCw6
hwuJF0xOnh4hIefRRwn0XC58qlm+6ve0BZ3V3rzgXsAFN1b2hwswCt4pb4wb
irlw59bw3isNZAhgKqUfLuXCOeVJY/aXXghxKGGk/+TCJiHhdWkqgyi8UP+4
QDlu3yN8kUIlo0ciTR8CK7ngTDWO84sbRvG+TquH/3Dh2JufvPciOiC5bsLJ
rA7nS/+PVbPOZHiz+0ph0T8ukOZGvU84jUN2BEdAtgX3P+ayvKZyHfoy8uDc
w3Yu1C2oV6/wklAJJoZWurjw6Op48s5XU6j8VZq4ax8XjEL4aHnH86CWscev
dpALK8jksTZtBprsi/+ojeL5DEgsE9aZhc4CHdnUCRx/r6v37u0sgkHhhuv8
M1ygzTrW2cIUmvRxbL5C4kJDhoTcf5okNP93VLF/gQuca4w77KgGRFPwu2u0
guvDYv5s2ewYcO8xe77QuPCrzrqYfYMMvCMRaltZXCBnq7nMZHTCBkzk8X0u
F3Z0dF35uXEYPWxoWAwiEjAdQS+Rk/h+KHhzo7TSKgL2vfuQuVLxIIrdc9J0
ZDUBU/p6d8r9VQ9s6k4NTOAlYH8+jZN5v5MhMXLsjTkfAZP68MJ0b9EobDu0
p5FnLQHbZ7jRQ/NCM0of82MVryNgjm6k/phvJLQrvkjhkgAB60u43bX10CTK
1mHZbhckYLzacjYCUb9AaUH7TocQAbOarGmUZs3Cl9T7OY9E8Pcy+3Rzd86A
ukV9l/ZGAnbulWdDo1EMlLBEeKliBCxfYEeB4ZNpdPSDg8pHcQL2kt5cInxp
DpU5pji7SRAwZ/e881v+VSI9vtGoTVsIWMz+ZzzNtybgT9Hu4r9SBMz72Znf
p3nIYHbWdyR0GwHb2Z2jpxzUCo2ihYLqMgTMQOXPH+fBEWRbztCckSVgB3x/
/1noJqNOP8wzbQcB0zy2OlH7UR9yko6IPyFHwCIiNF5OxgzAYP3fsrXyBOxf
QUNh1gIZPEKE55ACAbtpd/skUIZhUtFe4qoibn/qCe9iejvy7krWV9xLwD6o
JNiu6JPR/P3hywP7CFjx6Jpb1C/jKEBdISV+PwFbd0JZys+2Fmijl2qNlQnY
w4q0WHLPHNyIy6dwVAjYUeH8kqixKfh4QjLmgxoB675+NJ+04TXqF7+zx0Gd
gJUdU2ixEJ9Bgt0TlasPE7D7k4TC90ZzCEu2cM07QsAM9UAwt7cKXXYuZJzW
JGCXww10gofGIV1G6tnaowQsLvTyXUNHMrQMh+0vPkbAoixj/7sY3Amr307V
uGMErL5ZME7hzRA6eN7KQ0iHgB1/eSXjHpeMzu0u5nzXJWAp7zRHfh8cRi9m
tr68oE/AVuny+M0qd8CfnHDVTYYEjLBLxXtYlQx035n6ciMCpvjsWU/rqQlQ
VLHx9DUhYJZhomebtv9Gp5a/8kiZEbCiAzy10dxZ9KhI+tUfcwKWc0bGeejK
DPoRFHHoqiUBc3jz/dLIlo+IpDHXJGtNwBrpmhy+kCmQZh/3brAhYMFrdsa8
sCCBFSrhvWGL52Mkivib3Ah37si+lrfD8Z/aKTDbNIq+6EZqttoTMMjL76DV
ktHIf+S2UEcCtpZw84VeQh/a+OeE375TBCzV616gkU8/6Ed9X9vthPsr8f1Q
ZwcZrpnteBvhTMAaIHnyxNVRyNoQBaqu+Hup1XErnU2os3G+a8CNgMm7xo6m
BZAQf5x9wCN3AnbFJ2x0vcoU0jjxc8ORswTsyUNXP6u2PLgoLvd+7BzO72o2
xSlvBpK7HurGehKw5RtTS+F/Z6E+abHvmBcB23ZkiPxRtxw4px2DZi4SsJbD
wv+xcibQfpkykYRLBOz1GwWf7ZvJyHV4V46eLwFTRV1UP8t2FJPx2HDBj4AZ
P1pDH0oYhvJzy0Ov/PH3YxL0rNlkWFI4FWISQMD2FIsfiTs6BDtnfm2iXsXj
NerMeOXYhU7kKOS9CSRgIdtTjn71I6MI32hTq+sEzPPO/Qc7Ho2jYmXKGCuY
gB2CNbL9X//A5JJT6PsQAjZrrhafGzQHEkUVkna3CFjTJQdV4fZpMAlSLOQJ
JWDmKmlquxmxcEMjxvLzHRyv80rPWHum0UcWderUXQKW/jHzz5+pOdT30zmc
7x4Bq7x8tZR1qh5tuFO5rTCCgN0OvxVVljsGoLv3m1skrifpht++viGD339x
xzdE4f8/bRt6H9YDr6vpcyUPCdioV0xbjcYgan7gGnn+Ma4v1uTrs2QyWmVW
vX1jNK4HjD8S2Y9GkNoGpR9lTwmYjGqUjp9IK5xtjLe/FEvAXiUJHliqJeFz
MHNBIh6v39h7+1Zfm4Rq2zOPqp4RMOruh9lbt5Yi2qaaXVdeELDAH6uC1ujM
ot1d+39Jv8T5OTs0lqw3i04mPT9Vl0jAhNvmhBeMStHD0+yVoGScT1EV16/5
T8J3aY+ncikELGnKJNi/jgRFmfuCKKkEzOlVN8FZoAE+76O6VL/G67vmw7Kh
3wR6V1BmmPCGgA1Ltw+fv05C6ZpR+y+8JWBCX2Ozht/VoOTy4+IaWQSMs0bV
Ph2f958Zb+WufU/ACh/Qfb9KkeBJ4/h4TzYBO5/LuGWkVQmR9rkNHz8SsCrT
oyzbqUkU1n+96OYnAnajOebanaI5dOOsbopFLgHL+2W7vPKnDAXMro+Q/kLA
wkzi/eQSp8DnSvul+XwCFlQSajliMIfPX6knfhUSsEGvLMWstK/gdufC0dhi
ArYhNBf16Eyjk3yqcu7fCFinn585sWEW2Uaz1quVEjAXfWKQkuVnZLGpann1
DwJWZ+tzT2dkGgxfRfe24Uuu+OLbPKLZLGA7HX9nlhGw97EFB8wyE0Hjw/aP
geUE7O7NJc6uGzNITWU2zug3Xh/DY6kCv2bQvm+FNySq8PsiBJnzBWGwC7vt
Pl1NwGorkaTj2lmQqTYyLa3B8UjwFbbeNwOSFiKqj/4SsHdbqpr6P2Qi0bYe
ydP1BCx7ePj+h6ezaL3TWx6lf3g8kSLVjKfTiHfEZ5rTSMDESDWxpdYFwL1w
uPlfM36/4fjvJYE5oM0TS9JaCVjkxzMaWrNTsBj49/XldgJ2sORNvIThDzTD
iX+g04nnL89DcW3YHBq953xZtBvXb0uhJ8b4PNG/XsFxtIeAabQptL2UqICO
uAWssI+A2SELds3sHDRKlipEDOD8Mve86Rg1CbWvw4XshwjYdKLi7aQH1ahC
wYImP0LA4iObA4QtSOj7Z/FB2ijO9/94TN/WT6Ai9aHqmnECJiBiZKi4+Bdy
f2R/TpzEv1snq3+9JcF7vYAXF6cJmK9n2idP/glI/3v0ttYs/t7jpbvzCo0o
2WbNeQES3r+SQ9XREgk972q06CfjervJrHzo6DiKdk1U/7xAwMrXr+R/Ot4M
kRPu20KX8P7qYCiycIgMYT77eK1XcPx3fiRZXRyDkBXKnCwV13sJT7m0oFZ0
NaSsbZFGwLIuB1Vp+5ORz6qoHxUMXA/pb9ppMaPIM+r423gW3k/eT0uLv2iH
M8JbH5/lELC05Lz+lHQynEoYD1AnELHuIS2dbV9GwFY612kNDxGLiF+knv/U
iSwyr+t1riJiaZya9fQ/ZGS0T3fv+/+ImEDPEB9f3TDSLli/MXgNEZvSlNWf
+tENGprtTBN+InZge/Y+vTEyqJWnjmxZR8SsLZcZnIEhUDK+8Hd2PRErahgQ
X/7di+QbVfJ/bCBiaw/vMA/E51sZe1biEyEidpVRVmtOGkSS/ZVhLiL4jF2u
qjRa3g+qaYIXhDcSMV3kckIYt292xtGyQoyIcRJI69mFI3B255uDV8WJWOkM
+/57r1Z0a3x2i7wEEcu5ZxEICyT04p06T5ckEUs+fOhOZ9sEyvUKnYySImKn
by/9sBwoh5q9tQ1a24jYp+kl7VLeORgmiRaSpIlYS4+KxYdDM8DMPZ2UJkvE
fprlOtteeAUbr2TdsdlBxETYN0P+qk2jfQcXzq+WI2Lbrz/wvVU2hwyoGhZF
u4hY7SYPmRNStcjlW7iapwIR866rZ8/EjEPQjQZJSUUiVvx1aUXKiQwxRzcT
6/YQsbLMDWHv+zogm+s2cXMfESv8cdlLUnMYVfz6UL9/PxGr2jssW4jPt713
V/KHDhAxH5fIH37UQbSiD4lxKkQs9774jv633bCB70GovhoRU6jdnnAsjQzy
tc3nqAeJmKP3Mf/qoDHAHkmZvz9ExLRhWF2E2IgcLc6pnjpCxFw/ZN1JNyAh
f6FcCQFNIsY/ZxU9Z4Hvf8107k8tInZsuxdfoX8+ZMTrjvsdI2JqOZF2GcwZ
+GH3uG47RsRuT79IMzs1C+2bO760auP5NXk6NfvtG5C7ZV5G6BKxEIa+wKOm
ScT3yuv2YX0ixrgnPPv8HgnJuBScnTYgYnqSWZ+dIprQEVmOabIRzp/zN07G
D42CzYihioUJEdvTZq3+AJ/Xvd7GbCaYEbF6+5du90R64e75Hk6eORGTvyL4
UNZ0ECXvlhtztyRiWoOCHgEUMiqc8fkrZk3E1i1jVT4Dw6gh52tetQ0Ry4jf
ef3J2XaY8OVJuG5LxDQKwj5HKZOBoGJ2a48dnr/RB7PbpSdAYvmZR589EVt8
O86KXV2NVIoGTKIdidjj62x+0pU5ZBq0W1n7FBGTymnfdjtzGnloXBFfciJi
CyXzWkmNfnCT9Z2d4YzXx6Lsodt/p+H5T95RO1c8P4ePibo5zsHnUKtavjNE
TGzPxapvzEr4o5OYW+KOfx+/Ie9rPoGGVo8+9z5LxL4fZ0XqbScjRtW+m9vO
EzG53PvjjhNtSPRBoHujJ47Htvern4uNwF7TX8ZhXkSsdVN4K2mRDPoC6w6o
eeP/iz53lRQeBOd/tpvGL+H5XjnmofiwFwXGpLBe+BIx89E868HfZPT0+OSw
8WUiltdSvuTzaRS9F1OpYfoTset3Oxyer2mG8o4bn3MC8Hp1TFeNfEmCnpeV
z1yuEbFKurDyYOYkLJ8SDBEOImLOqQX/CTSVIoFtjmcqrhOxnXc3ix0JnkW7
BtONrt4gYl4VDhpV3TMI0meV5G8SMU87j9H/TuYhBw91sa5bROyJaVpGf+AU
aMwMG30OxfG7dKK8++AcbPGPDrkXRsTeKDLdKo8VAIummXsqnIjxBjg+GPwz
jfpvT44oRxAxRb6N83Zqs6iM95k4XyQRs3SRczYghKLXj7VN+x8Qseq/02fZ
lBkI20i6VfCQiL3OMIjduGEGPJISv0Q9JmJNyL/XQjsXGWw3HHeNJmLtlv1v
PhDmkPz7JYlDMfh9DbnVcb+nEN+BNHOBOJzP11JefVf/BdNFZndG4onYzSWr
HTGjc/D3KL3g23MiZvd376PbjpPw8ffbyegEIpYeR6v0UK9FT0xtpM4l4v/f
HWCHvyYh32aOpVYyETsp1b83v2EcWTl+uCuSgvM7f7vz0oMmUBm0L55MxfPr
788fo04G0fOrZ36+JmKDO+9qHdg1BstzuduevSFi/806TnUPtaH2gNM2F98S
sXeEhc1L6WRUzOSP0M4iYr+VtlZLnxlBCWFF38TfE7GhXkN/bGs3BPO7z81l
EzF36yP0reNkcHoqKPv7IxHrw0Z/NIQPwVHx77aJn3B8a82j0tT70bYUz0i/
XCIWe3nj7hJ8PyLIiX03+ILr8dCa+ROyA2j4wy+yVAERe6Xwfq3NxiGoUPHZ
sVSI64eGumkmmQwZ3yTta4px/BdXhEKFeiACq45K/UbEhkPPp4pSh5Fn9ZWf
V0uJ2I9/BdbUQjIytpBZNP1BxEgut7rP97YjxbY6ue2IiO1e4N0k82sU1jtd
d6SVEbFM1s8zNBsyzA3LPW4oJ2KXfs0duh/VDA0XmssyfuPnD/vlbfcbR7nz
t5aDq3A9JBZeU6wmoZjAPQrWf4jYVouNFWysDvlzOk7J1xKxAj9N0hRxEmzv
hUez/xKxB9Y7cnVFSXBwvXJFSz2u52v1BLcZVcCmuD7K+39E7LDuYWevgClE
k4hSDG0iYg7awT5Kh+dQV5q6s10LHh//ORvwLkAl8iMxe9twvbvhYPOrchqS
P0VX8nTg+lJdLMV3aBZuHdSid3YSsUniQ+qRS3fA5fvk3s/dRGzfgXuWh5Zn
EKb7zPVeLxErr3n6Q1p4Bm2v1Y4/1U/E2u6vOlEtmgurrUnVyoN4fbrtMdXh
zMJYRyJzzTARW83iqC9XT0GVs+H+/hG8vwhspsnK/ELvxpbOFIwRsRPJzz7e
H55DUd5pz6Mm8Hng6EUXldOT6OKSWa3rFN6fV9zzhGRqwSyYzlafwevj2TWh
/lQSKBEzlQXm8H7Ly2340jwOgpE2Z0dIeH0yv8kzbzWh+Q3chG/zeLzv7Oss
DpJR87MPddGL+HxQvRQYqDiG8qUcCOeWiVhig3XT9o420CmWS1elELE7zU2y
npFkaLRe0iXSiFjg6lCfHW6j4DJbNtZAx/FZI326IKkdkSKe3E9mErGl9M6y
5y/JKETWabcXm4gt5zSjScFRtO777r+HuHh/FT7rcdylAxLtqN7/EXkwQzHJ
8/7vyaCw8HtDCw8Ppsvv2dv+YwSKHsbmpq3mwYi3iguosp1If5erjQ8vD7bX
L9iLUUxGrWX7ljX5eDBzr2S1Ba8RdOYU8xn/Wvz86z27Xo50wvzKn0Md63iw
PRoS+5UqyXD76fOuDAEerGflg7am+Ahs2ONxw1+QB+vL/5y0P6MLJVcqb8WE
ebD1DfbyAk1kpOjK/SkgyoPdFn1872v5MPrGqHPt2ciD5Xq6rcp37wajZ4k8
7zfxYA6HB1qe95Chfb9nxrXNPFjXz9oo70vD4FF70EBPkgdzTxuz27K9By15
rJoUluLBSAlvK2pHySiM2/hgYCsPtovgMnpSfBgJJabsyZHmwcJP/khyHeiB
FDXv+mBZHkxwbDHu3SwZ9v074mu0gwf7Kvpo3/2yIfh+YY3wJjkezICRNBKc
1ItMVrd9GdnFgymxPeb3L5FRV0q6bZ4CDxY7V8i/4jmEPI/4UW4p8mCTY6Vm
Z+z6gNJyNMFsL+7/saVYVxoZ7vms05BU4sF4T2nufCc0BBv5u3om9vNgr81V
eQSF+lH6m8ybhco82OVLC7oaLDJSPhYgfVcVz5+RxYGM4kFU1qn9y+ogD3Yj
zEjr+p9+sLgi6L7tEA/GLyjS/Z1Dhj6BvtWzh3mw/Bt1k7OnB8H7XXbmNw0e
zPfXb+zl7QHE0Akyuq/Fg2Vs99SYxPUssk9/2vYYD7ZdTVwoYtUgEg8SfbQd
48EW3r3Jy5cchEyRoX3z2jyYs7anw3cuPv/mfPr3Q5cHS2W2DYxbDUC5Ycjl
h/o8WMrROh5SwCCyHjYWdTTkwfR2TR08wiGjwRDxwl3GPJh9gM+Xyy/7kY/4
mN2yCQ+GybL/BjYMAivvC+2XGQ+mnrhjxJlJhodmoYnRFjxY7bcpw4LBPpCc
MNc6bcWDvdn0w8xcfgi9u7OlX9GGBwupyLu1D5+v1aWmbtOO4/b+V7F1x3P1
fnHuvR8iioqUQmkZaUpJnlNSUijfUkqShGjYI0XISGWUMpJkpZSMSKKnrMjI
3tn7s6xQwu/+/vy87ud57jnnPc45f1z23/NZG37hoqysNcWnCDgXKFNu5dGF
Tp64W/D4NJ1P10PlhFEu6maeuHzRkIB1WfnYw7oN2fhK8285R0Cp5Fh4eUMX
npdhJ/0zIqDPWkSjeJiLAz/naP8wJmBP0S1NifeteJWBPyvMhK7n02aBG5u7
UfLIqcDLpgSY3GOPBHdzkep92a07zAiwcZCv8xttQSXrR6t5zAm4f8P7tq53
Nz799Yt9pQUBkoLbwxjNXMz3VGjZ7SsEtOdaNrOhHX+wPvtBwZquR8hUXeKC
dmS6P+lky1UCSNtTUi31XCSyfHLC/zoBxx5F34q06EVfWBpPVGwIkHAVTX+h
UYOv5oco99sS4Hlwa11hMAevDO+oD7UnQNPQiHWlcxCXXNvspOFIwGTvHJm4
/CNy0nATH3Mi4EGxxkCUOAutW1GaFeNCwCZvXul351mohiN+Wu8mAZ3vkMaH
ks/oTqHZ1KwbAcMPPv+8fmcQK0Wmh729Tevp9qtHkrkc3HaDZ/c5DwII8dUL
+c1qcYCmbpOAJwGXSz4wPMZ60G7JKJdsLwKc2O4bv/VwUf/IkITFXQKEY6VS
KkQ7UGixyicxXwK8uwofZCn/wgeifAwL/QgYi/tsMELvayO2tX/s7hGgXybu
8CG/F0cfXhO55j7Nh5mPJaIXqtGx1TdUqx7Q/pQvo5V9lYP+juW2uAcScN3R
JS9UfggllQi6bQ4mYOL7Llh2KQMbRJ+RbAsh4Pf+Nata2piYckj8HPCYgKYc
35q/j1k4/cjEuT1P6PpEvjHddBNjE+kD/waeEuDP192wb8cgWvQ7KOppOAFB
i6WELdo4KPfHLzXNSAJ6S8IiDh2qQ1YxCr/GnxFQ3XDLihXag1c4ud6OfU7A
jvk3zQUsLi45+n31iRc0/p6qM/OdHdhpjdiX+RgCFm6qttt+sQ2tmzI1Tokl
4PGzT7J6OVxUU546ZxRPgOEzpuX7VX3oTuxc9MJEAt5ejvz42LUKK7kcQzmv
aD9Qz5LiP0zjoRPZYfmajmfkWNwl+yEcIDvosTyZ1sfTfjbr7Hu0+4+yTPFb
AlzT26WevmSi/krvrw4ptH8q7rbJK2Gh0PhqE9lUAmJS+pMnQr+hAzeleWvS
aLwXKuh+6R3AI3rXXt7JIEDunFo3/wwHR6//vH9LJp1PcNyvaxvr8bGZBd2/
sggISE6TOLqrB/2tMvB6kE3AnXfrtglPcFFSYvzavTkErDJZX6J2uhMZ3BrL
H/pMQM+QBO+G+62Y0odL4Xl0Pt1BelOv///9eCB5GBMQIbDJw9exD5vMtsb9
/koAV7Wy+NKGn2hRrdzB+Hzaj+T4LmZI03gkOffqF9J8Vz/6viZnCFm5F93l
Labzu/irc579CkucXLo+9TsBsvbVa+vMmLhY7mKRcSkB4oPvpcZmWNhhPuWy
cBnNl415Yt3WBXht/T9GbjkBZrWVdhOhA6jqjXaiVSUBlcmhVv+Wc5H7nfBD
K6ro/0cGptjwNyBFg/7+79UEWH0JVoxp6MatCjv9nGppv+DbWhr1h4v1i3sd
jtQTEFi8yCCqtQ2XmDwxXdVIQF317878iS6EZjSPc5sI2EceqJjo4KKsJ5P7
8ltov2IYMlP4WpDi1lcKT9pof5uqFNfc24PjfpxeYdlOwPMSD/1P6Vy88vIC
/r2ddD/rvRxStKYRB89nTwh3E6DddiZuyrEX8UVe6e7sIeCouL8Mnx0X3d65
siqjj4DCbvsTr5Tq0ETljzzfAXoeaPeCFfF92OqKW7LhEAF5t/PHCSna30nF
CEUm3f+rLnJkt1Tj09FtvvMsAr7aj1wYKexHlbsfOtRwaHxnp8x6sjjoYO0+
04QRApaIfApar12Ocq5x9FzGCKBUuFFljQN424IX+45OENCfGVvar8bBSbF6
ClKTBEy/xLZx64qx1D6eFaNTtB+fvCJHtA2i0MZUvsI/BDjuXyB8JpWNFtpd
nHg6Q8CiT5ySxT0YeQkt6b4yS+OREaI8UUXPq4n5P9XmCaiK2eX1UJSNr++3
z1vMS4Lm+aOHNa5k4L5W2eRuggQ9Q0H9hVnDyMipLjyTIiGXh+f9oAnthyI+
vv58JNx8EeKgEPgMaSUrO5xbQILlTa3ynAAmxpr9F5UESUj/KibSEM3Euzqf
6vEKkTAiYvMoNuIpenvz8L46YRIMnGapO7ostFZsWv7VYhL+hVo0lNP7c8T7
JImboiQsv95a26OYjkW0Dfl0lpKQV6j3tZvez3x7BSakxUgYrec+1x0cwv/c
c7rGxElYsmGJpXLSF2S/wvpnkQQJ/BnpNxxfstFwhmRe+Eo6/tYVUgMTg8hE
t/yN9SoSbiW1uxr6F+GGwVvh6lIkaF3d4li/hYN1vDf7isqQ4CA1XqswNoAL
V7fb964hwTmwotz4fRlSzQ68+FGWBOH+3xeSkzkoVR/pBawnQWPoXOLnzn60
kc1VO7+RBJ9PGSlp3VU42i9GfqscCffjRNYmL+PiZWtPSJAKJMjtsLmr/q0P
B+Ty8jUokuDVnL/hVE8t4j2dPp6kRIKvyUoUasVFLqOmXW5bSfhmbTZnFtqL
OPeX/tTdTgK35k/et8YGbLahMHfNThIy6pvGt73j4tavDm8mlEl4cUGseeBs
D9Y/tz78uwoJPKtkezd8aUYlv+t9IveQ4LYv3uBcGxepB/vaX9tLguDEwyg/
sW6UKa9ykRYb2FV9ScwNbcOKRQO6SxEJXT/8bMbpeSP2QrhaP5CwIa5ktVBR
J5b4qyX/6QCNX/uC0kLDDhQU+mf5g4MkTMUt1Bui5yW+LW8YFw6R8OT0ML9/
XTu6VXp2fJsWCVGLKWYRowsveXG/o+8ICRUHG25X0/NSkkNuWcRRmo8T83Jt
nC6srs3+qKNDwne58WtXK5tQnbRUPK8e/f7tEimNblxk9Vs3OPM4CRLaFzv/
m+tDPGUet67ok1Ckv07kUk0FfhqTarn6JAmhD9N4vGQ5WNGp62T1KRI6dawF
vroM4fyjS/b7nKb5GZyKXrulozNrNDbvMSThevKDUfYcE3Em7Vewz5KQVStr
E3iIhe6WxzNeGpGwSHCJZKb8R7Qytn70pDEJp2tsV75cNYRTnfnaF5iQEGF7
POnLSQ4+pKPyI/ciCd6T5FKGcBVuW2uZZXOJxvNETOmG4D5kNx0eu+4yCZd0
4mpNn3DRgsrSwCZzEjy9ogaedjej6Li/Nx9YklBz3z7ovm0X3umqYAFWJEyM
d/DN0fPrD12j/yasSZivr24zvtuFTdY9REnXSBCy07rn8KkZTf7JUzC6QZ/v
1/yZF8JFD35ylovY0nj+LHuZG9OH1iZIU4V2tF6mL5vP5P/E2TePjzg7kBC3
yk7/oQ4H6x73bFNwovEKUZG4Jz+Ee9enl3Q4kxA+v8rvhXMWujnT/eGxK82X
plV+vGosJFK99OVhNxL24GeNpQIslJh48OHMLTrflQ7af5QykNotR9f37iSc
D88VkrYewjUnEi9fukNCkgnavUCBgy03Np5Y7kXCuGj35xK5Sjz3j1+9zJvW
z5XNijPsPhRas1vew4eOd+rRnnoPLpJPuiK+w48EbYNNE/VTTejr7UhiwJ+E
exWyPqptXdjgvzJOZAAJc7p2+gp0vVib/rXoPiCBM73mQ6lEF/aaU/xOBJLw
aFX0667YFiRRdz4jK4iEtNGLockJXJTyOvCFVQgJOLO6pWx/Hzroge9LPSZB
JXN8Q3lTFW45OeJcE0oCCzl7f3DkYBv5NWa+T0lwbzJY/rVlEPPx6B9XDSdB
2W/xLyW7HBRV76XGiaD9RHb1An1nFtqenLEp9hkJH9IqjmmWMVHJnd5lBs9p
Pb6OnBUzS0HGBmK8gi9ovgd6D/BlD+EJhUPsvBgSmmrHKm/M0/s7r3OzbSwJ
X/ttriaolGOZxldF6+NJ+PTswE5b7X6U9bYprTmBhE0+Dy8et+SiY14C0Q9f
kRBtz5D0XdiEuk+rBux/TdfP651suWY3dtls7fT7Da2HqIxrhvT+tYiMMn39
loSXkGku+7YTxzeV655PIWHHorf7EgJakWrKrKpoKq33pQL4xUd6f/dW2liU
RoLFR3UXv65eZG54YalrBgm6qUcdhH9W41ml4HnFTBL+dO1f8vsZB4NEt2FT
FgnNZi9WtXIG8V3enR+8s0lw2f56tYvrB/R92GfRlhwSfms9ihj9yUSCdY2W
LZ9JuMw6IluTw0I6eXIFPnkktPlHMLcL5KPgRLfV2zAJG9sbefYkDeDaoArn
tq8khKlZRj+T5mJxV+kav3yaf29Y0zVZDdjQ1FZxRyEJu4evtOWd6UZRRwt8
24toPaWV+mrT/tW5U6zr3ncS7pBdo/cSu5CslMVe5VLaj+zmEksON2Fz/k9P
On/Q/ehMu+mYLhe/GREcuV9O+8GQUe/8sgHMbjbSVqkkof023zWR80Voa0FK
fPdPEqxGljVtWc5G9m955h9Wk9Cjp9beY8qk5xt9wz21dP3ejHmu8EpGf9zj
M3rr6H6Z4s6TR8+vapaTwsENtH5NuCvMz3Kwxwkty71NJPTx3owQNavG+aqR
+f3NJATZfS0Wf0TPN+tYqx61krBsaHj/jQYuOiKs7rzvF+0faus8Hdzb0YPJ
oOrBdhIk389b+xv/wlUdXQqhnSQc7yveYFPIxUtLd/iibhKGqoO+Vwj3YYN0
n87hHprvdvN8H+WqUMSzRtWnfXS/Uz1SfGQ9B7XdlXuyf4AE41Xu2vL1Q0j6
uhuXNUjCY8R/+KXBS2x6uuJI+DAJ4t9CdA8IM3ECSMdrsGg8o7PMQgzZeFDO
do7DpvkttF1bt/07VlhacCaSS0Lm9qJE/rh+dP3fsgzNUVrfWwp0BG9wUVqf
ufDoGAljPbkrufbN9LyWbRE1QYKA44L2stVdeHe2YP7hSdr//agnfjNc7PbS
aNX4FAkBv5jP4Vc3/hKQ4hT9h9bz7ni1DT71iHDgqT4yQ/sxT2KD4jQHaZ7X
V/j9j+5He18lpC8bRP6H4n1i5mi8pixSE/kwLtsy2XGUhwLWh37PeFsWXrRC
S3WKl4K+nh0zYtIsfIKIDI0lKfBScF6rdP8TDmUyOToMCnz7jO94+g2ixrp9
R/7wUfCqIyy/v5SDVn4JiotfQIGP2+kYK5U6ZPyqa1ZPkIIq9T7XD1Y9+GXw
jjMzCyngfx3mVD7Oxb2uPumJwhRYtvC6Jfh14k2XGoX0F1PgGrpoWi+rBVkf
k7OYFaF/D5WVqQbSfqbs9i1pCQVWFeea2ev60ahUheTJZRS8u3EpwufRD7xz
gbTTvBgFP8Puh2yMZmPnUZuqN8spSG+aDzv/bhjntOTLG6ygoKMLh4ep3cOz
Bct8eCUpyBeoTynfO4zgnXnH21UUHPfewHtkkI3uPs3ec0aKgty3WtdMEivQ
dw/BUFKGgpiamwdcQ/pwzWa8t3YNBQuOkM8/bOPi9lb7nlhZCgaueY+Zadfg
4Xub7tutp+Mvit4aurUfTar82n5gIwUHPYeD989xENEf0iIqR0HzFsvG9sQq
JBx6yKtLngL5s4FtSWX9WOLAjFyaIgUrjCN8thRx8LqR99V3lChwXi2y4xVP
Jd4abeZ6fCsFtqPT65+ZDqC9x1askdlOgbZeVZ2/Lwcd+ltRwt1BQVxUXpZ0
yg+kn+Rlg5VpfEc83+r9HsDGBioSQSoUSAhat545wMFXKBY23kPBhTRHt28G
37FDeoyF0l76ft3sumTvQXTH5NTiOTUKLgucmEqeZqMHiwQ/VqhToPLPI27j
TAEKy/1i/BwoiPIfKn8iPIRjrez5rh2gwOGQik/QazZOkdiUonaQgsr+N2Kc
Z19xTnHbKaFDFKS4VoVMPBpCxQ4hs62HKQjM39EueoqNatYeSkg+QsHdnoX5
pvY56FfV32NuRymQGpAaf790GA+6v5/Q1qHvS5c9dYDe9yYUzaJW6lHQyDcD
q99kYJ5WiYPDx+n8dTrDUoOGkdC9CuYnfQrO3e7ZsS2KhSRUvB7fO0nHf8PK
9WHOayTbt2uvoQEFHCKL6ORjYqXHzO5NZyh4vPBcNleFhVX3xwRMG9L18Y7K
s94djg9xT24vOUdB923mk02uTHTiuUBL2HkKREuNRIMrmcjo6BdPiwsUrKu4
tgg0LbHlHzs5lYsUmKZdDHPsZ2KHVxur+S5RMPPC8Nx6Eya+c6rNpcGMPt/i
3qd0JBo9IENkEs3p+ytP7Myg942wNM0SR0sKNqYPRRWwhlHshb83NK0o0GHd
q5LMf4tThN8vF7tKwSLJvruVaSyc8/kS7r1GAfaUL/BwGMbFVyQsPtygYGla
pevOzZmoZnnForu2tP4gLihzMRv9KvLM+s+eAoV9489vTA2hQftdxrKOFPBa
f6r1/v0ZT6xhMsadKMhy/XDstCUb81S9eJfvQj8/3Nn62nEIL3Q/eerRTQoG
bYT8TIy+IXFFgdmLtyjY7z6dFPeZjda25MVvc6egt0mZ7xB3ECn52x3jvUNB
Mdol3pxTiFV3bZyo8qTz7xzxvy9Az5+9rc9ivCk4pPPslpHZID7xKFjDxoeC
8u/aCkFiJcgINJnIjwKBLe5lPPocZMn582jxPZo/Ze9t+OoHkENUimpHAAXB
GT8WDFiX4Tval7pTHtD8MbE5NhnKwQ+mlwe4B1IwUuXcdX7/AA5LLN+mG0xB
0BCZq5lXiWJPejavfkTB6zeD/RdqOCiF2OXJfkzXZ8Orp7df96NmptXG6CcU
SO7mjzFSL8VU/YsK3TAKVNN4r7+PZeMtX+rs58MpeCBSPhtwYxiffSWwMjWS
AuNrTkM8iveRT7D6V5MoCkyKvCfjBoZRqqu9uWg0BcJk8jSpy0ZtpklC+S8o
yJt4Mp07UIT4j/1Kt3tJgceYBe8gDODtyksMZeNofixMcy5W4GJjqcPztfEU
3NeiyuUvNuB7/LcS7iZS8O1OLMe5sht9GEk9qpxE39fqBK7TXNTR3Dfa95r2
N88Lt5R9OpFgwcrwp8kU1Mn9lA+53oqV3+qpH35HQaxU1TpJej8zeXK3dyqF
gp3f3NRWH+nD990/BSSlUnApYpq3V68KZVlwthqm088L4AIc46Cu47KNAh8o
KBFbuT5QfwgJqZ65nZNJgU0CnD50Lx2ryD6Utf5Iwdm1x2dmupjYVCi/VPIT
BeIbXDcquLNw4O/JG+U5dD0Va26a/czFn9oVxG/nUnAbxy12ov2o97tJ7uYv
FEx5S9oqpXKQSNoT03ZMQaqimDfzRw3aG/ljQdA3CkLrnCy36/Zic+/5FFRA
gV3Esyyjei4Oubrz1Egh3c8m27LO5/3CuaeuzMQUU6A/8ntcsrIdDahHvzxR
QtdnUvPtux4uWrKp9jDxg4L335Ln4ut70D7RBZz0MloP0psHpkZrseVftdBL
FbRf7ng1GNfCwY97bFWX/aSga/yfRYvUIP5SnthZWEWB0uFr5K7Kr2gos9XX
sYYCoe0KW04UsNCyFyKbN9RRcO2d0tWCUCYCf83ahnoKItM0bnOskpG17U1X
v0YKIrqUZ/lSh/DTs++ldzfT9WWZX1i8goPzNXqLBlto/+N5F/nycCVmK664
GtFGwfP7qaJZn/uQhLjuEu122v/j3dan0/uaxrxX9t8OCopCrXbHnWpB1wc/
Gid3UUC+LblKCHThiGoWZdRD43Pkz8mEWS4uzFmTLNRH9++9a5eaHu/G3DiD
E3n9FDwTfpC10asRrXx4f+raIAViv8aPn9XhIk2nr8+lhunz0dtKvev7kc2F
3xo/mRRoHhTDmVol+JmW/LAHm4IhloRdcwAbF2+7ELyVS4EFw2Vd9KNhPLoy
dFfXCAV85aZCMkLOaBVV2hYyRveTe4JKD4uG0WH2rNeBCQq25q2uHjFnI7uG
7XLjvym456XNOtBejJ5ji59xUxQcsx9f+FlsAJckRTme/EP3E0ve1+l7uHg8
pFqSMUPz/eCDG0caGrCUG19+5j/aL9UMGO+fdSNts72W5nMUSOuxaof/cpGj
js2i5TwMMHtwPiEtpxNVjonw/eVlgKgTuFh9oueX8LTZNpIBW1dqndLv52LP
ffq/MYMBbmlO8QZXm3BL9xgrlp8B3VUeCs9qetFO/8e9PgIMEJRpi/dcwUUP
N+9ss1zIgBOrDwwUPahA/TV1tUeFGaCpmnOKz3wQg4tjmdJiBnzUjn3Td5eN
I1aLF4iKMuBdvuTEYr4MPJaflTOxhAHaM6KMDCMmOmZ5Or1xGX3fkrq8hO1M
lCA8/TpHnAGnTqd8jfXLxHPp4S+fSzBg6LbM/rA4Nj5zZk/EnZUMKLI18kne
NojTZpuDL61iwG3rjc5eRZVIMO6m/yEpBlxfyDq7RJGLzLQk78jJMKDFgJTX
eNKL8tifnYXWMmDH7YLRbzzNWPyx0Q2uLB2/4mSfNouLbXbPmtesZ8AXaTj/
wqETl/56bpy5kQEhNxMWi853orXe6gbhcgyQu/R27loHF93a1KHjpsCAcg+t
WP+6RlRf4aFpvJkBl2M2uQeL9GEle5l9+7cwYCbw8+FKBhf7S3zbuW4bA7JU
ldwcdcpxV95FRf4dDPBSNjPMjRxEqpeIdcM7GVDhsKWxy4yNQhfESVbsovNp
TxQWdklF7HcaS1N3M2BqV/3yRl8mPvRfr+BjVQaYj6fKSPMzccz0XcJJjQEB
xZMy0cuy0Z/n6/+eUWeAwTgzaWU+G+lrFI/uBQbsbdf68mlmAL0dNB+SOsCA
UhlVhwTeKswI5O/iPcgAk9lvItvUab/ekdTUq8mASobLdzDoxdlNWlXfD9P1
D/pZpBvWjETdh76/OcIAe46GZ/AoF1nJBuCHRxnwS09Qfo1SJyoskf9oo8MA
9Qu8W7UOduHV18tS/tNjALN17cvsRi52Wno1cdcJBoylFJyWUmvEVdlC0Sv+
Y0CuuVPyjE4fkjN+9+TfSZq/y3qd9EY5yIvUfdhhwICIsA121sJlqC2Jczf/
DAOssjt4qisHsbJu0K2EswxgKx1WX32QjQPHtzj4GzFApG/vUbXaZDwYXmVt
bcyApGyV+EOpTLRf3faSrgkD0PfiAwMtwyiyR/TcNlMGKI+9DJ2JycET/un6
y8wYoODaO9DSwcY6Sv9pT11mQFlW4zv5ogGcWDu+v8WCAVctqjJkYqoQj2vo
nrwrDBDQXN7lpcdFhlLK22Ks6Xj3Xmd8Eu9F6QX1m7yvMYBYd7Box+YWLHTF
Scb8BgM8vDKjqUkuvrxoucQRWxpf3mUfbCs78JeMj4sV7RngyjVfuuheF5Iw
PMO/2JEBd5X23Nj+k4ts56bnRp0YIOzu8lYyrgH9iIuYrHNhQHDNc5nWgD78
P/VRp2g=
      "]]}, {}}, {{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 2.684}, {-0.9999990591310266, 0.9999925235722097}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6243377128197823`*^9, 3.624337718313097*^9}, 
   3.6243408687302904`*^9, 3.624341068958743*^9, {3.6243423124018636`*^9, 
   3.624342320623334*^9}, 3.62434241077849*^9, 3.624344463312889*^9, 
   3.624536280649103*^9, 3.625563530400773*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Include", "/@", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Data.nb\>\"", ",", "\"\<..\\\\LabVIEW\\\\LabVIEW.m\>\"", ",", 
     "\"\<Sequence.nb\>\""}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.753844493614603*^9, 3.7538445085886045`*^9}, {
  3.7538457905214996`*^9, 3.753845797973325*^9}, {3.75384643240818*^9, 
  3.7538464475989923`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sequencer", "=", 
   RowBox[{
   "GetAllCtrls", "@", 
    "\"\<E:\\\\LabVIEW\\\\Sequencer\\\\Sequencer.vi\>\""}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7538445562171664`*^9, 3.753844586369398*^9}, {
  3.753844621392564*^9, 3.7538446239944773`*^9}, {3.7545592563325343`*^9, 
  3.754559258458214*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CtrlGetValue", "@", 
  RowBox[{"sequencer", "[", "\"\<Sequence File\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.75384462508536*^9, 3.75384463783127*^9}, 
   3.7545592622442756`*^9}],

Cell[BoxData["\<\"E:\\\\Data\\\\Sequence\\\\Cooling.seq\"\>"], "Output",
 CellChangeTimes->{{3.753844633120738*^9, 3.753844638270439*^9}, 
   3.7538458017192917`*^9, 3.753846627694316*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"CtrlSignalValue", "[", 
   RowBox[{
    RowBox[{"sequencer", "[", "\"\<Sequence File\>\"", "]"}], ",", 
    "\"\<E:\\\\Data\\\\Sequence\\\\Pumping.seq\>\""}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7538447195667553`*^9, 3.753844761047084*^9}, 
   3.7538449751356926`*^9, 3.7545592637713137`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CtrlGetValue", "@*", "sequencer"}], "/@", 
  RowBox[{"{", 
   RowBox[{
   "\"\<Item\>\"", ",", "\"\<Parameter\>\"", ",", "\"\<Start\>\"", ",", 
    "\"\<End\>\"", ",", "\"\<Step\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.753844663978868*^9, 3.7538447074384594`*^9}, 
   3.7545592646596785`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Time\"\>", ",", "0", ",", "1.`", ",", "1.`", ",", "1.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7538446668615313`*^9, 3.753844708230565*^9}, 
   3.7538458031721554`*^9, 3.753846631238718*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"CtrlSignalValue", "[", 
   RowBox[{
    RowBox[{"sequencer", "[", "\"\<Item\>\"", "]"}], ",", "\"\<Time\>\""}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7538449526287823`*^9, 3.7538449779992776`*^9}, 
   3.754559266242913*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Each", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Parameter\>\"", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Start\>\"", ",", "0.1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<End\>\"", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Step\>\"", ",", "0.1"}], "}"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"CtrlSetValue", "[", 
      RowBox[{
       RowBox[{"sequencer", "@", "#1"}], ",", "#2"}], "]"}], "&"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7538447828320417`*^9, 3.753844888010871*^9}, {
   3.7538449242412567`*^9, 3.753844944030907*^9}, 3.753844985854176*^9, 
   3.754559267452117*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"seq", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cooling", "[", "1000", "]"}], ",", 
     RowBox[{"Pumping", "[", "3", "]"}], ",", 
     RowBox[{"HornX", "[", "6.9", "]"}], ",", 
     RowBox[{"Detection", "[", 
      RowBox[{"300", ",", "1", ",", "1"}], "]"}], ",", 
     RowBox[{"Zero", "[", "10", "]"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7538456104860196`*^9, 3.7538456124653406`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExportSequenceString", "@", "seq"}]], "Input",
 CellChangeTimes->{{3.753845420855486*^9, 3.7538455693766212`*^9}, {
  3.7538456096567864`*^9, 3.7538456141828575`*^9}}],

Cell[BoxData["\<\"Chapter(Cooling,\\n00000000 00000000 \
00000000)\\nChapter(Pumping,\\n10010000 00000000 \
00000000)\\nChapter(HornX,\\n10000010 00000000 00000000)\\nChapter(Detection,\
\\n10001000 00000000 00001111,\\n10001000 00000000 00000000,\\n10001000 \
00000000 00010000)\\nChapter(Zero,\\n10000000 00000000 00000000)\\n----------\
\\nCooling(1000)\\nPumping(3)\\nHornX(6.9)\\nDetection(300,1,1)\\nZero(10)\\n\
\"\>"], "Output",
 CellChangeTimes->{{3.753845439695609*^9, 3.7538454645768366`*^9}, {
   3.753845500562544*^9, 3.7538455702128468`*^9}, 3.7538456147202573`*^9, 
   3.753845812309466*^9, 3.753846634427201*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExportSequencePacket", "@", "seq"}]], "Input",
 CellChangeTimes->{{3.7538455838280973`*^9, 3.753845617558892*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "144", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "100", ",", "1000", ",", "3", ",", "6.9`", ",", "300", ",",
    "1", ",", "1", ",", "10", ",", "64", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "38", ",", "0", ",", "0", ",", "0", ",", "0", ",", "64", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "38", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "64", ",", "0", ",", "0", ",", "0", ",", "0", ",", "38", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "64", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "38", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "64", ",", "0", ",", "0", ",", "0", ",", "0", ",", "38", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "64", ",", "252", ",", "0", ",", "0", ",", 
   "0", ",", "29", ",", "0", ",", "0", ",", "0", ",", "0", ",", "64", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "39", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "96", ",", "0", ",", "0", ",", "0", ",", "0", ",", "38", 
   ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.753845590511856*^9, 3.7538456179518785`*^9}, 
   3.7538458132419734`*^9, 3.7538466357326736`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "DDS", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DDS", "[", 
    RowBox[{"id_Integer", ",", "key_String", ",", 
     RowBox[{"val_:", "Null"}]}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Quiet", "@", 
         RowBox[{"Check", "[", 
          RowBox[{
           RowBox[{"Socket`SocketInformation", "@", "$DDS"}], ",", "Null", 
           ",", 
           RowBox[{"Socket`SocketInformation", "::", "nosocket"}]}], "]"}]}], 
        "===", "Null"}], ",", 
       RowBox[{
        RowBox[{"Quiet", "@", 
         RowBox[{"Close", "@", "$DDS"}]}], ";", 
        RowBox[{"$DDS", "=", 
         RowBox[{"SocketConnect", "[", 
          RowBox[{"{", 
           RowBox[{"\"\<127.0.0.1\>\"", ",", "9999"}], "}"}], "]"}]}]}]}], 
      "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"val", "=!=", "Null"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"WriteString", "[", 
         RowBox[{"$DDS", ",", 
          RowBox[{"key", "<>", "\"\< \>\"", "<>", 
           RowBox[{"ToString", "@", "id"}], "<>", "\"\< \>\"", "<>", 
           RowBox[{"ToString", "@", "val"}], "<>", "\"\<\\n\>\""}]}], "]"}], 
        ";"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"WriteString", "[", 
         RowBox[{"$DDS", ",", 
          RowBox[{"key", "<>", "\"\<? \>\"", "<>", 
           RowBox[{"ToString", "@", "id"}], "<>", "\"\<\\n\>\""}]}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Pause", "[", "0.01", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"ToExpression", "@", 
         RowBox[{"StringTrim", "@", 
          RowBox[{"ReadString", "[", 
           RowBox[{"$DDS", ",", "EndOfBuffer"}], "]"}]}]}]}]}], "]"}]}], 
    ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.754524828236849*^9, 3.7545248306121635`*^9}, {
  3.75452489637302*^9, 3.754524956557049*^9}, {3.7545249937509556`*^9, 
  3.754524997210144*^9}, {3.7545250359220777`*^9, 3.7545251764868355`*^9}, {
  3.754525267636568*^9, 3.754525318829689*^9}, {3.754525355014906*^9, 
  3.7545254543961573`*^9}, {3.7545551813528748`*^9, 3.754555199014868*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DDS", "[", 
    RowBox[{"5", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"\"\<PROFILE\>\"", ",", "\"\<FREQ\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.754525485679339*^9, 3.7545255025742617`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "233.017`"}], "}"}]], "Output",
 CellChangeTimes->{{3.7545254895917416`*^9, 3.754525503277131*^9}, 
   3.7545552162479506`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"DDS", "[", 
  RowBox[{"5", ",", "\"\<PROFILE\>\"", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.7545255055251083`*^9, 3.7545255105264063`*^9}, {
  3.754555220719841*^9, 3.754555220917368*^9}}],

Cell[BoxData[
 RowBox[{"DDS", "[", 
  RowBox[{"5", ",", "\"\<FREQ\>\"", ",", "233.019"}], "]"}]], "Input",
 CellChangeTimes->{{3.754525219405323*^9, 3.754525291922143*^9}, {
  3.754525415454613*^9, 3.7545254243643036`*^9}, {3.7545255156049104`*^9, 
  3.754525515996952*^9}, {3.754555223672721*^9, 3.754555225421343*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"start", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"end", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"step", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"now", "=", "0"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7545552902858458`*^9, 3.7545553645813675`*^9}, {
  3.7545554244866524`*^9, 3.754555436306081*^9}, {3.7545554803421907`*^9, 
  3.7545554893852453`*^9}, {3.7545590554263563`*^9, 3.754559057046665*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"OptionValue", "@", "Plot"}], ",", 
      RowBox[{"PrintTemporary", "@", 
       RowBox[{"Dynamic", "@", 
        RowBox[{"DataPlot", "[", 
         RowBox[{"list", ",", 
          RowBox[{"PlotLabels", "\[Rule]", 
           RowBox[{"ToString", "/@", 
            RowBox[{"{", "exprs", "}"}]}]}]}], "]"}]}]}]}], "]"}], ";"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"stop", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PrintTemporary", "@", 
     RowBox[{"Button", "[", 
      RowBox[{"\"\<\[FilledCircle]STOP\>\"", ",", 
       RowBox[{"stop", "=", "True"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Monitor", "[", 
     RowBox[{"(*", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{"stop", ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}], ";"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"stop", "=!=", "True"}], "&&", 
         RowBox[{
          RowBox[{"end", "-", "now"}], "\[GreaterEqual]", "step"}]}], ",", 
        RowBox[{
         RowBox[{"Pause", "[", "1", "]"}], ";", 
         RowBox[{"now", "+=", "step"}]}]}], "]"}], ",", 
      RowBox[{"(*", 
       RowBox[{"Quiet", "@", 
        RowBox[{"ListPlot", "[", "counts", "]"}]}], "*)"}], 
      RowBox[{"ProgressIndicator", "[", 
       RowBox[{"now", ",", 
        RowBox[{"{", 
         RowBox[{"start", ",", "end"}], "}"}]}], "]"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"stop", "||", 
       RowBox[{
        RowBox[{"end", "-", "now"}], "\[GreaterEqual]", "step"}]}], ",", 
      RowBox[{"Abort", "[", "]"}]}], "]"}], ";", 
    RowBox[{"Print", "[", "now", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "@", "Plot"}], ",", 
       RowBox[{
        RowBox[{"Print", "@", "list"}], ";", 
        RowBox[{"Print", "@", 
         RowBox[{"DataPlot", "[", 
          RowBox[{"list", ",", 
           RowBox[{"PlotLabels", "\[Rule]", 
            RowBox[{"ToString", "/@", 
             RowBox[{"{", "exprs", "}"}]}]}]}], "]"}]}]}]}], "]"}], ";"}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.754555495597762*^9, 3.75455555100807*^9}, {
  3.754558518260019*^9, 3.7545585221644*^9}, {3.754558628954352*^9, 
  3.754558663471131*^9}, {3.7545587303670316`*^9, 3.754558912574514*^9}, {
  3.754558949117657*^9, 3.7545589502416463`*^9}, {3.754558984412533*^9, 
  3.754558986228334*^9}, {3.754559058817374*^9, 3.754559113799542*^9}, {
  3.75455922983207*^9, 3.754559240626773*^9}, {3.7545708141407423`*^9, 
  3.754570902042471*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.754640043561742*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1166, 766},
WindowMargins->{{Automatic, -111}, {-23, Automatic}},
FontProperties->{"ScreenResolution"->Automatic},
Magnification:>0.7 Inherited,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (2016\:5e747\:670828\
\:65e5)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 377, 10, 24, "Input"],
Cell[938, 32, 138, 3, 24, "Input"],
Cell[1079, 37, 559, 12, 60, "Input"],
Cell[CellGroupData[{
Cell[1663, 53, 249, 3, 36, "Subsection"],
Cell[CellGroupData[{
Cell[1937, 60, 335, 4, 27, "Subsubsection"],
Cell[CellGroupData[{
Cell[2297, 68, 2769, 72, 147, "Input"],
Cell[5069, 142, 1157, 29, 60, "Output"],
Cell[6229, 173, 904, 22, 36, "Output"],
Cell[7136, 197, 948, 23, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8121, 225, 1406, 39, 77, "Input"],
Cell[9530, 266, 28226, 520, 167, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37793, 791, 1597, 43, 76, "Input"],
Cell[39393, 836, 1144, 30, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40574, 871, 2169, 64, 95, "Input"],
Cell[42746, 937, 28394, 522, 167, "Output"],
Cell[71143, 1461, 23976, 454, 158, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95156, 1920, 270, 6, 42, "Input"],
Cell[95429, 1928, 986, 27, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96452, 1960, 1749, 51, 77, "Input"],
Cell[98204, 2013, 13540, 278, 167, "Output"],
Cell[111747, 2293, 15956, 322, 157, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127740, 2620, 709, 18, 41, "Input"],
Cell[128452, 2640, 347, 5, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128836, 2650, 1024, 27, 77, "Input"],
Cell[129863, 2679, 247, 3, 24, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[130159, 2688, 235, 3, 27, "Subsubsection"],
Cell[CellGroupData[{
Cell[130419, 2695, 3311, 93, 275, "Input"],
Cell[133733, 2790, 2344, 64, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136114, 2859, 1558, 45, 60, "Input"],
Cell[137675, 2906, 101988, 1728, 167, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239700, 4639, 963, 19, 77, "Input"],
Cell[240666, 4660, 3876, 99, 86, "Output"],
Cell[244545, 4761, 1180, 32, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245762, 4798, 1132, 33, 42, "Input"],
Cell[246897, 4833, 21571, 410, 167, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[268517, 5249, 135, 2, 27, "Subsubsection"],
Cell[CellGroupData[{
Cell[268677, 5255, 1569, 44, 114, "Input"],
Cell[270249, 5301, 590, 10, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[270876, 5316, 4441, 109, 237, "Input"],
Cell[275320, 5427, 598, 11, 55, "Message"],
Cell[275921, 5440, 596, 11, 55, "Message"],
Cell[276520, 5453, 1160, 26, 42, "Output"],
Cell[277683, 5481, 1972, 43, 170, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[279704, 5530, 93, 1, 27, "Subsubsection"],
Cell[279800, 5533, 339, 8, 24, "Input"],
Cell[280142, 5543, 612, 18, 79, "Input"],
Cell[CellGroupData[{
Cell[280779, 5565, 1619, 41, 132, "Input"],
Cell[282401, 5608, 1264, 27, 36, "Output"],
Cell[283668, 5637, 2931, 74, 45, "Output"],
Cell[286602, 5713, 1228, 27, 36, "Output"],
Cell[287833, 5742, 1298, 29, 36, "Output"],
Cell[289134, 5773, 22563, 424, 168, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[311734, 6202, 790, 21, 61, "Input"],
Cell[312527, 6225, 1164, 29, 38, "Output"],
Cell[313694, 6256, 22343, 421, 169, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[336074, 6682, 1195, 36, 43, "Input"],
Cell[337272, 6720, 1395, 35, 56, "Output"]
}, Open  ]],
Cell[338682, 6758, 345, 9, 24, "Input"],
Cell[CellGroupData[{
Cell[339052, 6771, 1172, 36, 59, "Input"],
Cell[340227, 6809, 564, 8, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[340828, 6822, 1073, 35, 43, "Input"],
Cell[341904, 6859, 456, 6, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342397, 6870, 1139, 37, 59, "Input"],
Cell[343539, 6909, 456, 6, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[344032, 6920, 1167, 32, 61, "Input"],
Cell[345202, 6954, 2496, 64, 87, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[347735, 7023, 722, 17, 64, "Input"],
Cell[348460, 7042, 2047, 50, 59, "Output"],
Cell[350510, 7094, 121231, 2058, 169, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[471778, 9157, 857, 18, 64, "Input"],
Cell[472638, 9177, 1703, 41, 71, "Output"],
Cell[474344, 9220, 27579, 523, 169, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[501984, 9750, 94, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[502103, 9755, 625, 15, 72, "Input"],
Cell[502731, 9772, 1339, 34, 184, "Output"],
Cell[504073, 9808, 266, 6, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[504376, 9819, 192, 5, 24, "Input"],
Cell[504571, 9826, 1289, 28, 148, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[505909, 9860, 100, 1, 36, "Subsection"],
Cell[506012, 9863, 1010, 22, 24, "Input"],
Cell[CellGroupData[{
Cell[507047, 9889, 160, 2, 29, "Subsubsection"],
Cell[507210, 9893, 1136, 27, 57, "Input"],
Cell[CellGroupData[{
Cell[508371, 9924, 1347, 37, 72, "Input"],
Cell[509721, 9963, 572, 8, 24, "Output"],
Cell[510296, 9973, 571, 8, 24, "Output"],
Cell[510870, 9983, 572, 8, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[511479, 9996, 1119, 38, 94, "Input"],
Cell[512601, 10036, 221, 3, 24, "Output"],
Cell[512825, 10041, 223, 3, 24, "Output"],
Cell[513051, 10046, 221, 3, 24, "Output"],
Cell[513275, 10051, 223, 3, 24, "Output"]
}, Open  ]],
Cell[513513, 10057, 747, 14, 43, "Input"],
Cell[514263, 10073, 1865, 47, 90, "Input"],
Cell[CellGroupData[{
Cell[516153, 10124, 1322, 41, 112, "Input"],
Cell[517478, 10167, 225, 3, 24, "Output"],
Cell[517706, 10172, 225, 3, 24, "Output"],
Cell[517934, 10177, 225, 3, 24, "Output"],
Cell[518162, 10182, 225, 3, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[518424, 10190, 1503, 48, 112, "Input"],
Cell[519930, 10240, 223, 3, 24, "Output"],
Cell[520156, 10245, 221, 3, 24, "Output"],
Cell[520380, 10250, 221, 3, 24, "Output"],
Cell[520604, 10255, 221, 3, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[520862, 10263, 1308, 43, 94, "Input"],
Cell[522173, 10308, 146, 2, 24, "Output"],
Cell[522322, 10312, 148, 2, 24, "Output"],
Cell[522473, 10316, 146, 2, 24, "Output"],
Cell[522622, 10320, 146, 2, 24, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[522817, 10328, 108, 1, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[522950, 10333, 1382, 43, 94, "Input"],
Cell[524335, 10378, 196, 3, 24, "Output"],
Cell[524534, 10383, 197, 3, 24, "Output"],
Cell[524734, 10388, 197, 3, 24, "Output"],
Cell[524934, 10393, 199, 3, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[525170, 10401, 1445, 61, 259, "Input"],
Cell[526618, 10464, 721, 21, 64, "Output"],
Cell[527342, 10487, 721, 21, 64, "Output"],
Cell[528066, 10510, 719, 21, 64, "Output"],
Cell[528788, 10533, 741, 22, 64, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[529578, 10561, 179, 2, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[529782, 10567, 604, 15, 38, "Input"],
Cell[530389, 10584, 199, 3, 24, "Output"]
}, Open  ]],
Cell[530603, 10590, 2256, 57, 90, "Input"],
Cell[CellGroupData[{
Cell[532884, 10651, 2029, 61, 130, "Input"],
Cell[534916, 10714, 324, 4, 24, "Output"],
Cell[535243, 10720, 326, 4, 24, "Output"],
Cell[535572, 10726, 323, 4, 24, "Output"],
Cell[535898, 10732, 324, 4, 24, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[536271, 10742, 252, 3, 29, "Subsubsection"],
Cell[536526, 10747, 450, 11, 24, "Input"],
Cell[CellGroupData[{
Cell[537001, 10762, 2637, 77, 130, "Input"],
Cell[539641, 10841, 1508, 37, 24, "Output"],
Cell[541152, 10880, 1508, 37, 24, "Output"],
Cell[542663, 10919, 1510, 37, 24, "Output"],
Cell[544176, 10958, 1508, 37, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[545721, 11000, 3186, 97, 130, "Input"],
Cell[548910, 11099, 1395, 35, 24, "Output"],
Cell[550308, 11136, 1395, 35, 24, "Output"],
Cell[551706, 11173, 1397, 35, 24, "Output"],
Cell[553106, 11210, 1397, 35, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[554540, 11250, 1490, 36, 130, "Input"],
Cell[556033, 11288, 31829, 611, 169, "Output"],
Cell[587865, 11901, 31832, 611, 169, "Output"],
Cell[619700, 12514, 44532, 819, 169, "Output"],
Cell[664235, 13335, 44533, 820, 169, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[708829, 14162, 97, 1, 36, "Subsection"],
Cell[708929, 14165, 525, 11, 24, "Input"],
Cell[709457, 14178, 1813, 51, 43, "Input"],
Cell[711273, 14231, 1416, 46, 115, "Input"],
Cell[CellGroupData[{
Cell[712714, 14281, 120, 2, 24, "Input"],
Cell[712837, 14285, 811, 24, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[713685, 14314, 1845, 48, 112, "Input"],
Cell[715533, 14364, 1374, 29, 24, "Output"],
Cell[716910, 14395, 1376, 29, 24, "Output"],
Cell[718289, 14426, 1374, 29, 24, "Output"],
Cell[719666, 14457, 1374, 29, 24, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[721077, 14491, 2909, 59, 148, "Input"],
Cell[723989, 14552, 20396, 471, 280, "Output"],
Cell[744388, 15025, 84916, 1481, 166, "Output"],
Cell[829307, 16508, 84920, 1481, 166, "Output"],
Cell[914230, 17991, 84930, 1481, 166, "Output"],
Cell[999163, 19474, 84916, 1481, 166, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1084116, 20960, 1741, 44, 150, "Input"],
Cell[1085860, 21006, 1210134, 20842, 283, "Output"]
}, Open  ]],
Cell[2296009, 41851, 255, 7, 24, "Input"],
Cell[CellGroupData[{
Cell[2296289, 41862, 443, 14, 29, "Input"],
Cell[2296735, 41878, 528, 17, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2297300, 41900, 833, 24, 29, "Input"],
Cell[2298136, 41926, 79103, 1370, 169, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2377276, 43301, 3574, 96, 184, "Input"],
Cell[2380853, 43399, 4350, 102, 352, "Output"],
Cell[2385206, 43503, 23904, 483, 169, "Output"],
Cell[2409113, 43988, 38534, 721, 169, "Output"],
Cell[2447650, 44711, 38534, 721, 169, "Output"],
Cell[2486187, 45434, 23904, 483, 169, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2510140, 45923, 256, 3, 36, "Subsection"],
Cell[2510399, 45928, 610, 18, 79, "Input"],
Cell[2511012, 45948, 241, 7, 24, "Input"],
Cell[CellGroupData[{
Cell[2511278, 45959, 359, 10, 24, "Input"],
Cell[2511640, 45971, 409, 10, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2512086, 45986, 315, 9, 24, "Input"],
Cell[2512404, 45997, 1853, 52, 45, "Output"]
}, Open  ]],
Cell[2514272, 46052, 183, 3, 24, "Input"],
Cell[CellGroupData[{
Cell[2514480, 46059, 1299, 37, 43, "Input"],
Cell[2515782, 46098, 245579, 4115, 169, "Output"]
}, Open  ]],
Cell[2761376, 50216, 169, 3, 24, "Input"],
Cell[2761548, 50221, 274, 5, 24, "Input"],
Cell[2761825, 50228, 456, 12, 24, "Input"],
Cell[2762284, 50242, 2657, 74, 190, "Input"],
Cell[CellGroupData[{
Cell[2764966, 50320, 757, 18, 40, "Input"],
Cell[2765726, 50340, 64357, 1067, 157, "Output"]
}, Open  ]],
Cell[2830098, 51410, 378, 9, 24, "Input"],
Cell[2830479, 51421, 337, 8, 24, "Input"],
Cell[CellGroupData[{
Cell[2830841, 51433, 208, 4, 24, "Input"],
Cell[2831052, 51439, 188, 2, 24, "Output"]
}, Open  ]],
Cell[2831255, 51444, 337, 7, 24, "Input"],
Cell[CellGroupData[{
Cell[2831617, 51455, 335, 8, 24, "Input"],
Cell[2831955, 51465, 241, 5, 24, "Output"]
}, Open  ]],
Cell[2832211, 51473, 270, 7, 24, "Input"],
Cell[2832484, 51482, 742, 21, 24, "Input"],
Cell[2833229, 51505, 445, 11, 24, "Input"],
Cell[CellGroupData[{
Cell[2833699, 51520, 191, 3, 24, "Input"],
Cell[2833893, 51525, 628, 9, 349, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2834558, 51539, 138, 2, 22, "Input"],
Cell[2834699, 51543, 1229, 18, 52, "Output"]
}, Open  ]],
Cell[2835943, 51564, 2238, 54, 140, "Input"],
Cell[CellGroupData[{
Cell[2838206, 51622, 264, 7, 22, "Input"],
Cell[2838473, 51631, 176, 4, 22, "Output"]
}, Open  ]],
Cell[2838664, 51638, 222, 4, 22, "Input"],
Cell[2838889, 51644, 320, 5, 22, "Input"],
Cell[2839212, 51651, 508, 11, 67, "Input"],
Cell[CellGroupData[{
Cell[2839745, 51666, 2879, 78, 140, "Input"],
Cell[2842627, 51746, 77, 1, 22, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

